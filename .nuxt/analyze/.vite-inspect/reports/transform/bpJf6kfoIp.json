{
  "resolvedId": "C:/Users/h00dy/Documents/github/h00dy.me/templates/FileWindow.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<script setup>\r\nimport interact from 'interactjs';\r\nimport {\r\n    onMounted,\r\n    ref,\r\n    defineProps,\r\n    computed\r\n} from 'vue';\r\nimport {\r\n    useWindowsStore\r\n} from '@/stores/windows'\r\n\r\nconst props = defineProps({\r\n    windowId: String,\r\n    nameOfWindow: String,\r\n    content_padding_left: {\r\n        required: false,\r\n        type: String,\r\n        default: \"15%\",\r\n    },\r\n    content_padding_right: {\r\n        required: false,\r\n        type: String,\r\n        default: \"15%\",\r\n    },\r\n    content_padding_top: {\r\n        required: false,\r\n        type: String,\r\n        default: \"5%\",\r\n    },\r\n    content_padding_bottom: {\r\n        required: false,\r\n        type: String,\r\n        default: \"5%\",\r\n    },\r\n    folderContent: {\r\n        required: true,\r\n        type: Array,\r\n        default: () => [],\r\n    },\r\n    folderSize: {\r\n        required: false,\r\n        type: Number,\r\n        default: 0,\r\n    },\r\n})\r\n\r\nconst position = ref({\r\n    x: 0,\r\n    y: 0\r\n})\r\nconst tempPosition = ref({\r\n    x: 0,\r\n    y: 0\r\n})\r\nconst windowsStore = useWindowsStore()\r\nconst window = ref({})\r\nconst ComponentName = props.nameOfWindow\r\nconst w = ref(0)\r\nconst h = ref(0)\r\nconst gridHeight = ref(\"\")\r\nconst fileExplorer = ref(null)\r\nconst files = ref(props.folderContent)\r\nconst size = ref(props.folderSize)\r\n\r\nonMounted(() => {\r\n    let gridH = fileExplorer.value.clientHeight\r\n    gridHeight.value = gridH + \"px\"\r\n    console.log(gridHeight.value)\r\n})\r\n\r\nconst style = computed(() => ({\r\n    height: `${h.value}px`,\r\n    width: `${w.value}px`,\r\n    transform: `translate(${position.value.x}px, ${position.value.y}px)`,\r\n    \"--content-padding-left\": props.content_padding_left || \"15%\",\r\n    \"--content-padding-right\": props.content_padding_right || \"15%\",\r\n    \"--content-padding-top\": props.content_padding_top || \"5%\",\r\n    \"--content-padding-bottom\": props.content_padding_bottom || \"5%\",\r\n    \"--fullscreen\": windowsStore.getFullscreenWindowHeight, // assuming this is a method in your store\r\n}));\r\n\r\nconst setActiveWindow = () => {\r\n    windowsStore.setActiveWindow(window.value.windowId)\r\n    windowsStore.zIndexIncrement(window.value.windowId)\r\n}\r\n\r\nconst toggleWindowSize = () => {\r\n    if (windowsStore.getWindowFullscreen(window.value.windowId) == true) {\r\n        const payload = {\r\n            fullscreen: false,\r\n            windowId: window.value.windowId,\r\n        };\r\n        windowsStore.setFullscreen(payload)\r\n        position.value.x = tempPosition.value.x\r\n        position.value.y = tempPosition.value.y\r\n    } else if (\r\n        windowsStore.getWindowFullscreen(window.value.windowId) == false\r\n    ) {\r\n        const payload = {\r\n            fullscreen: true,\r\n            windowId: window.value.windowId,\r\n        };\r\n        windowsStore.setFullscreen(payload)\r\n        const tempX = position.value.x\r\n        const tempY = position.value.y\r\n        tempPosition.value.x = tempX\r\n        tempPosition.value.y = tempY\r\n        position.value.x = 0\r\n        position.value.y = 0\r\n    }\r\n}\r\n\r\nconst minimizeWindow = () => {\r\n    const payload = {\r\n        windowState: \"minimize\",\r\n        windowId: window.value.windowId,\r\n    };\r\n    windowsStore.setWindowState(payload)\r\n}\r\n\r\nconst closeWindow = () => {\r\n    const payload = {\r\n        windowState: \"close\",\r\n        windowId: window.value.windowId,\r\n    };\r\n    windowsStore.setWindowState(payload)\r\n}\r\n\r\nconst getImagePath = (iconImage) => {\r\n    const path = `../assets/win95Icons/${iconImage}`;\r\n    const modules =\r\n        import.meta.glob(\"../assets/win95Icons/*\", {\r\n            eager: true\r\n        });\r\n    const mod = modules[path]\r\n    if (mod == undefined) {\r\n        return \"\"\r\n    } else {\r\n        return mod.default;\r\n    }\r\n};\r\n\r\nconst convertBytestoMegabytes = (bytes) => {\r\n    if (bytes !== 0) {\r\n        return (bytes / 1000000).toFixed(2) + \"MB\";\r\n    } else {\r\n        return \"\";\r\n    }\r\n}\r\n\r\nconst setSize = (file) => {\r\n    size.value = file.size\r\n}\r\n\r\nconst getRndInteger = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nconst openWindow = (file) => {\r\n   if (file.type == 'folder') {\r\n        const windowId = \"FolderWindow\" + getRndInteger(1, 1000000)\r\n        const addWindowPayload = {\r\n            windowId: windowId,\r\n            windowState: \"close\",\r\n            displayName: file.title,\r\n            windowComponent: \"FilesWindow\",\r\n            windowContent: \"\",\r\n            windowContentPadding: {\r\n                top: \"0px\",\r\n                right: \"0px\",\r\n                bottom: \"0px\",\r\n                left: \"0px\",\r\n            },\r\n            position: \"absolute\",\r\n            positionX: getRndInteger(1, 10) + \"vw\",\r\n            positionY: getRndInteger(1, 25) + \"vh\",\r\n            iconImage: \"folder.png\",\r\n            altText: file.title,\r\n            fullscreen: false,\r\n            showInAppGrid: false,\r\n            showInNavbar: true,\r\n            folderContent: file.content,\r\n            folderSize: file.size,\r\n        }\r\n        const openWindowPayload = {\r\n            windowState: \"open\",\r\n            windowId: windowId\r\n        }\r\n        windowsStore.pushNewWindow(addWindowPayload)\r\n        windowsStore.setWindowState(openWindowPayload)\r\n    } else if (file.type == \"video\") {\r\n        console.log(\"SKIP\")\r\n    } else {\r\n        const openWindowPayload = {\r\n            windowState: \"open\",\r\n            windowId: \"ImagePreviewWindow\"\r\n        }\r\n        const contentPayload = files.value.slice(files.value.indexOf(file));\r\n        contentPayload.push(...files.value.slice(0, files.value.indexOf(file)));\r\n        const payload = {\r\n            windowState: \"close\",\r\n            windowId: \"ImagePreviewWindow\",\r\n        }\r\n        windowsStore.setWindowState(payload)\r\n        setTimeout(() => {\r\n            windowsStore.setPhotoFolderContent(contentPayload)\r\n            windowsStore.setWindowState(openWindowPayload)\r\n        })\r\n    }\r\n}\r\n\r\nlet isDragging = false;\r\n\r\nonMounted(() => {\r\n    window.value = windowsStore.getWindowById(ComponentName)\r\n    const draggableWindow = interact(\"#\" + window.value.windowId)\r\n    draggableWindow\r\n        .draggable({\r\n            listeners: {\r\n                move(event) {\r\n                    position.value.x += event.dx\r\n                    position.value.y += event.dy\r\n                    // event.target.style.transform = `translate(${position.value.x}px, ${position.value.y}px)`\r\n                }\r\n            },\r\n            modifiers: [\r\n                interact.modifiers.restrictRect({\r\n                    restriction: '#screen',\r\n                    endOnly: true\r\n                }),\r\n            ],\r\n            allowFrom: '#top-bar'\r\n        })\r\n        .on('dragstart', () => {\r\n            isDragging = true;\r\n        })\r\n        .on('dragmove', () => {\r\n            if (isDragging) {\r\n                setActiveWindow();\r\n                // windowsStore.zIndexIncrement(window.value.windowId);\r\n                isDragging = false;\r\n            }\r\n        })\r\n        .on('dragend', () => {\r\n            isDragging = false;\r\n        })\r\n        .resizable({\r\n            edges: {\r\n                left: true,\r\n                right: true,\r\n                bottom: true,\r\n                top: false\r\n            },\r\n            listeners: {\r\n                move(event) {\r\n                    const target = event.target\r\n                    w.value = event.rect.width\r\n                    h.value = event.rect.height\r\n                    target.style.width = `${w.value}px`\r\n                    target.style.height = `${h.value}px`\r\n                    position.value.x += event.deltaRect.left\r\n                    position.value.y += event.deltaRect.top\r\n                }\r\n            },\r\n            modifiers: [\r\n                interact.modifiers.restrictSize({\r\n                    min: {\r\n                        width: 400,\r\n                        height: 400\r\n                    },\r\n                    max: {\r\n                        width: document.getElementById('screen').clientWidth - position.value.x,\r\n                        height: document.getElementById('screen').clientHeight - position.value.y\r\n                    }\r\n                }),\r\n            ],\r\n        })\r\n})\r\n</script>\r\n\r\n<template>\r\n<div :id=\"window.windowId\" :style=\"style\" class=\"window window-style\" :class=\"{\r\n        'fullscreen': window.fullscreen == true,\r\n        'minimize': window.fullscreen == 'minimize',\r\n    }\" @click=\"setActiveWindow\" @dragstart=\"setActiveWindow\" @click.native=\"setActiveWindow\">\r\n    <div id=\"top-bar\" class=\"top-bar-window\" :class=\"\r\n        windowsStore.activeWindow == window.windowId\r\n            ? 'top-bar'\r\n            : 'top-bar-deactivated'\r\n        \" @dblclick=\"toggleWindowSize\">\r\n        <div class=\"window-name\">\r\n            <img class=\"icon-image\" src=\"@/assets/win95Icons/folder.png\" :alt=\"window.altText\" />{{ window.displayName }}\r\n        </div>\r\n        <div class=\"triple-button\">\r\n            <button class=\"minimize-button button\" @click=\"minimizeWindow\">\r\n                <span style=\"\r\n                height: 2px;\r\n                width: 6px;\r\n                background: black;\r\n                margin-top: 8px;\r\n                margin-right: 2px;\r\n            \">\r\n                </span>\r\n            </button>\r\n            <button class=\"expand-button button\" @click=\"toggleWindowSize\">\r\n                <span style=\"\r\n                height: 8px;\r\n                width: 9px;\r\n                border-left: black 1px solid;\r\n                border-right: black 1px solid;\r\n                border-left: black 1px solid;\r\n                border-bottom: black 1px solid;\r\n                border-top: black 2px solid;\r\n            \">\r\n                </span>\r\n            </button>\r\n            <button class=\"close-button button\" style=\"margin-right: 3px; padding-left: 1px\" @click=\"closeWindow\">\r\n                ×\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"content\">\r\n        <div class=\"top-bar-nav\">\r\n            <div class=\"top-bar-text\">\r\n                <span style=\"margin-right: 12px\"><u>F</u>ile </span>\r\n                <span style=\"margin-right: 12px\"><u>E</u>dit </span>\r\n                <span style=\"margin-right: 12px\"><u>V</u>iew </span>\r\n                <span style=\"margin-right: 12px\"><u>H</u>elp </span>\r\n            </div>\r\n        </div>\r\n        <div\r\n        class=\"file-explorer \"\r\n        @click.self=\"size = folderSize\"\r\n        ref=\"fileExplorer\"\r\n        >\r\n        <nav class=\"grid-container-photos\" :style=\"{ height: gridHeight }\">\r\n            <li v-for=\"file in files\" :key=\"file.key\">\r\n                <button class=\"icon-photos\" @click=\"setSize(file)\" @touchstart=\"openWindow(file)\" @dblclick=\"openWindow(file)\">\r\n                    <img v-if=\"file.type == 'photo'\" class=\"icon-image-photos\"  src=\"@/assets/FileWindow/image.png\" :alt=\"file.altText\" />\r\n                    <img v-else-if=\"file.type == 'folder'\" class=\"icon-image-photos\" src=\"@/assets/FileWindow/folder.png\" :alt=\"file.altText\" />\r\n                    <img v-else-if=\"file.type == 'file'\" class=\"icon-image-photos\" src=\"@/assets/FileWindow/file.png\" :alt=\"file.altText\" />\r\n                    <img v-else-if=\"file.type == 'video'\" class=\"icon-image-photos\" src=\"@/assets/FileWindow/video.png\" :alt=\"file.altText\" />\r\n                    <div class=\"border-box\">\r\n                        <p class=\"icon-text\">\r\n                            {{ file.title }}\r\n                        </p>\r\n                    </div>\r\n                </button>\r\n            </li>\r\n        </nav>\r\n        </div>\r\n\r\n        <div class=\"bottom-bar\">\r\n            <div class=\"left-bar bar\">{{ files.length }} object(s)</div>\r\n            <div class=\"right-bar bar\">\r\n                {{ convertBytestoMegabytes(size) }}\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<style scoped>\r\n.icon-text {\r\n  /* white-space: nowrap; */\r\n  display: block;\r\n  overflow: hidden;\r\n  width: 60px !important;\r\n  font-size: 12px;\r\n  font-weight: 300;\r\n  color: black;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.icon-photos {\r\n  color: black;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 1rem;\r\n  align-items: center;\r\n  text-align: center;\r\n  width: 60px;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.icon-photos:hover {\r\n  cursor: pointer;\r\n}\r\n\r\n.icon-photos:focus .icon-image-photos {\r\n  filter: grayscale(100%) brightness(30%) sepia(100%) hue-rotate(-180deg)\r\n    saturate(400%) contrast(0.9);\r\n}\r\n\r\n.icon-photos:focus .icon-text {\r\n  background: rgb(0, 0, 118);\r\n  color: white;\r\n  margin: 0px;\r\n}\r\n\r\n.icon-photos:focus .border-box {\r\n  border: rgb(0, 0, 0) dotted 1px;\r\n}\r\n\r\n.icon-image-photos {\r\n  width: 30px;\r\n  height: 30px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.grid-container-photos {\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  height: 0 !important;\r\n}\r\n\r\n.file-explorer {\r\n  background: white;\r\n  box-shadow: none;\r\n  border-top: solid rgb(0, 0, 0) 1.5px;\r\n  border-left: solid rgb(0, 0, 0) 1.5px;\r\n  border-bottom: solid rgb(250, 250, 250) 1.5px;\r\n  border-right: solid rgb(250, 250, 250) 1.5px;\r\n  height: calc(100% - 54px);\r\n  width: auto;\r\n  z-index: 10;\r\n  margin: 2px;\r\n  padding: 2px 2px 2px 2px;\r\n  overflow-y: auto;\r\n}\r\n\r\n/*-------------------------------------------*\\\r\n    Windows/Display\r\n\\*-------------------------------------------*/\r\n\r\n.minimize {\r\n    display: none;\r\n}\r\n\r\n.window {\r\n    box-sizing: border-box;\r\n    padding: 0px;\r\n    margin: 0px;\r\n    user-select: none;\r\n    -ms-touch-action: none;\r\n    touch-action: none;\r\n    flex-flow: column;\r\n    display: flex;\r\n}\r\n\r\n.fullscreen {\r\n    width: 100% !important;\r\n    height: var(--fullscreen) !important;\r\n    margin: 0;\r\n    transition: all 0.5s ease;\r\n    padding: 0;\r\n}\r\n\r\n.content {\r\n    flex-grow: 1;\r\n    overflow-x: hidden;\r\n    padding-right: var(--content-padding-right);\r\n    padding-left: var(--content-padding-left);\r\n    padding-top: var(--content-padding-top);\r\n    padding-bottom: var(--content-padding-bottom);\r\n}\r\n\r\n.bottom-bar {\r\n    height: 22px;\r\n    display: flex;\r\n    width: 100%;\r\n}\r\n\r\n.bar {\r\n    height: 100%;\r\n    margin: 2px 2px 2px 2px;\r\n    padding: 0px 2px 1px 0px;\r\n    box-shadow: none;\r\n    border-top: solid rgb(0, 0, 0) 1.5px;\r\n    border-left: solid rgb(0, 0, 0) 1.5px;\r\n    border-bottom: solid rgb(250, 250, 250) 1.5px;\r\n    border-right: solid rgb(250, 250, 250) 1.5px;\r\n}\r\n\r\n.left-bar {\r\n    width: 100%;\r\n    padding-left: 2px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n}\r\n\r\n.right-bar {\r\n    width: 100%;\r\n    padding-left: 2px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n}\r\n\r\n/*-------------------------------------------*\\\r\n    Top Bar\r\n\\*-------------------------------------------*/\r\n\r\n.top-bar {\r\n    background: rgb(0, 0, 124);\r\n}\r\n\r\n.top-bar-nav {\r\n    display: flex;\r\n    height: 22px;\r\n    width: 100%;\r\n}\r\n\r\n.top-bar-text {\r\n    height: 100%;\r\n    padding-left: 12px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n}\r\n\r\n.icon-image {\r\n    width: 15px;\r\n    height: 15px;\r\n    margin-right: 5px;\r\n}\r\n\r\n.top-bar-window {\r\n    display: flex;\r\n    width: auto;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    flex-direction: row;\r\n    z-index: 10;\r\n    margin: 2px;\r\n    padding: 2px 2px 2px 2px;\r\n}\r\n\r\n.top-bar-deactivated {\r\n    background: rgb(123, 125, 123);\r\n}\r\n\r\n.top-bar:hover {\r\n    cursor: default;\r\n}\r\n\r\n.window-name {\r\n    color: white;\r\n    display: flex;\r\n    align-items: center;\r\n    font-weight: 500;\r\n    padding: 0;\r\n    font-size: 16px;\r\n    margin: 0 0 0 3px;\r\n}\r\n\r\n.icon-image {\r\n    width: 15px;\r\n    height: 15px;\r\n    margin-right: 5px;\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n}\r\n</style>\r\n",
      "start": 1714315493110,
      "end": 1714315493301,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1714315493301,
      "end": 1714315493301,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1714315493301,
      "end": 1714315493301,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1714315493301,
      "end": 1714315493301,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1714315493301,
      "end": 1714315493301,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714315493301,
      "end": 1714315493301,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714315493301,
      "end": 1714315493301,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714315493301,
      "end": 1714315493301,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { unref as _unref, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, withModifiers as _withModifiers, createStaticVNode as _createStaticVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nimport _imports_0 from '@/assets/win95Icons/folder.png'\nimport _imports_1 from '@/assets/FileWindow/image.png'\nimport _imports_2 from '@/assets/FileWindow/folder.png'\nimport _imports_3 from '@/assets/FileWindow/file.png'\nimport _imports_4 from '@/assets/FileWindow/video.png'\n\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-598ba05b\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = [\"id\"]\nconst _hoisted_2 = { class: \"window-name\" }\nconst _hoisted_3 = [\"alt\"]\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { style: {\"height\":\"2px\",\"width\":\"6px\",\"background\":\"black\",\"margin-top\":\"8px\",\"margin-right\":\"2px\"} }, null, -1))\nconst _hoisted_5 = [\n  _hoisted_4\n]\nconst _hoisted_6 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { style: {\"height\":\"8px\",\"width\":\"9px\",\"border-left\":\"black 1px solid\",\"border-right\":\"black 1px solid\",\"border-bottom\":\"black 1px solid\",\"border-top\":\"black 2px solid\"} }, null, -1))\nconst _hoisted_7 = [\n  _hoisted_6\n]\nconst _hoisted_8 = { class: \"content\" }\nconst _hoisted_9 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"top-bar-nav\\\" data-v-598ba05b><div class=\\\"top-bar-text\\\" data-v-598ba05b><span style=\\\"margin-right:12px;\\\" data-v-598ba05b><u data-v-598ba05b>F</u>ile </span><span style=\\\"margin-right:12px;\\\" data-v-598ba05b><u data-v-598ba05b>E</u>dit </span><span style=\\\"margin-right:12px;\\\" data-v-598ba05b><u data-v-598ba05b>V</u>iew </span><span style=\\\"margin-right:12px;\\\" data-v-598ba05b><u data-v-598ba05b>H</u>elp </span></div></div>\", 1)\nconst _hoisted_10 = [\"onClick\", \"onTouchstart\", \"onDblclick\"]\nconst _hoisted_11 = [\"alt\"]\nconst _hoisted_12 = [\"alt\"]\nconst _hoisted_13 = [\"alt\"]\nconst _hoisted_14 = [\"alt\"]\nconst _hoisted_15 = { class: \"border-box\" }\nconst _hoisted_16 = { class: \"icon-text\" }\nconst _hoisted_17 = { class: \"bottom-bar\" }\nconst _hoisted_18 = { class: \"left-bar bar\" }\nconst _hoisted_19 = { class: \"right-bar bar\" }\n\nimport interact from 'interactjs';\r\nimport {\r\n    onMounted,\r\n    ref,\r\n    computed\r\n} from 'vue';\r\nimport {\r\n    useWindowsStore\r\n} from '@/stores/windows'\r\n\r\n\nconst _sfc_main = {\n  __name: 'FileWindow',\n  props: {\r\n    windowId: String,\r\n    nameOfWindow: String,\r\n    content_padding_left: {\r\n        required: false,\r\n        type: String,\r\n        default: \"15%\",\r\n    },\r\n    content_padding_right: {\r\n        required: false,\r\n        type: String,\r\n        default: \"15%\",\r\n    },\r\n    content_padding_top: {\r\n        required: false,\r\n        type: String,\r\n        default: \"5%\",\r\n    },\r\n    content_padding_bottom: {\r\n        required: false,\r\n        type: String,\r\n        default: \"5%\",\r\n    },\r\n    folderContent: {\r\n        required: true,\r\n        type: Array,\r\n        default: () => [],\r\n    },\r\n    folderSize: {\r\n        required: false,\r\n        type: Number,\r\n        default: 0,\r\n    },\r\n},\n  setup(__props) {\n\r\nconst props = __props\r\n\r\nconst position = ref({\r\n    x: 0,\r\n    y: 0\r\n})\r\nconst tempPosition = ref({\r\n    x: 0,\r\n    y: 0\r\n})\r\nconst windowsStore = useWindowsStore()\r\nconst window = ref({})\r\nconst ComponentName = props.nameOfWindow\r\nconst w = ref(0)\r\nconst h = ref(0)\r\nconst gridHeight = ref(\"\")\r\nconst fileExplorer = ref(null)\r\nconst files = ref(props.folderContent)\r\nconst size = ref(props.folderSize)\r\n\r\nonMounted(() => {\r\n    let gridH = fileExplorer.value.clientHeight\r\n    gridHeight.value = gridH + \"px\"\r\n    console.log(gridHeight.value)\r\n})\r\n\r\nconst style = computed(() => ({\r\n    height: `${h.value}px`,\r\n    width: `${w.value}px`,\r\n    transform: `translate(${position.value.x}px, ${position.value.y}px)`,\r\n    \"--content-padding-left\": props.content_padding_left || \"15%\",\r\n    \"--content-padding-right\": props.content_padding_right || \"15%\",\r\n    \"--content-padding-top\": props.content_padding_top || \"5%\",\r\n    \"--content-padding-bottom\": props.content_padding_bottom || \"5%\",\r\n    \"--fullscreen\": windowsStore.getFullscreenWindowHeight, // assuming this is a method in your store\r\n}));\r\n\r\nconst setActiveWindow = () => {\r\n    windowsStore.setActiveWindow(window.value.windowId)\r\n    windowsStore.zIndexIncrement(window.value.windowId)\r\n}\r\n\r\nconst toggleWindowSize = () => {\r\n    if (windowsStore.getWindowFullscreen(window.value.windowId) == true) {\r\n        const payload = {\r\n            fullscreen: false,\r\n            windowId: window.value.windowId,\r\n        };\r\n        windowsStore.setFullscreen(payload)\r\n        position.value.x = tempPosition.value.x\r\n        position.value.y = tempPosition.value.y\r\n    } else if (\r\n        windowsStore.getWindowFullscreen(window.value.windowId) == false\r\n    ) {\r\n        const payload = {\r\n            fullscreen: true,\r\n            windowId: window.value.windowId,\r\n        };\r\n        windowsStore.setFullscreen(payload)\r\n        const tempX = position.value.x\r\n        const tempY = position.value.y\r\n        tempPosition.value.x = tempX\r\n        tempPosition.value.y = tempY\r\n        position.value.x = 0\r\n        position.value.y = 0\r\n    }\r\n}\r\n\r\nconst minimizeWindow = () => {\r\n    const payload = {\r\n        windowState: \"minimize\",\r\n        windowId: window.value.windowId,\r\n    };\r\n    windowsStore.setWindowState(payload)\r\n}\r\n\r\nconst closeWindow = () => {\r\n    const payload = {\r\n        windowState: \"close\",\r\n        windowId: window.value.windowId,\r\n    };\r\n    windowsStore.setWindowState(payload)\r\n}\r\n\r\nconst getImagePath = (iconImage) => {\r\n    const path = `../assets/win95Icons/${iconImage}`;\r\n    const modules =\r\n        import.meta.glob(\"../assets/win95Icons/*\", {\r\n            eager: true\r\n        });\r\n    const mod = modules[path]\r\n    if (mod == undefined) {\r\n        return \"\"\r\n    } else {\r\n        return mod.default;\r\n    }\r\n};\r\n\r\nconst convertBytestoMegabytes = (bytes) => {\r\n    if (bytes !== 0) {\r\n        return (bytes / 1000000).toFixed(2) + \"MB\";\r\n    } else {\r\n        return \"\";\r\n    }\r\n}\r\n\r\nconst setSize = (file) => {\r\n    size.value = file.size\r\n}\r\n\r\nconst getRndInteger = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nconst openWindow = (file) => {\r\n   if (file.type == 'folder') {\r\n        const windowId = \"FolderWindow\" + getRndInteger(1, 1000000)\r\n        const addWindowPayload = {\r\n            windowId: windowId,\r\n            windowState: \"close\",\r\n            displayName: file.title,\r\n            windowComponent: \"FilesWindow\",\r\n            windowContent: \"\",\r\n            windowContentPadding: {\r\n                top: \"0px\",\r\n                right: \"0px\",\r\n                bottom: \"0px\",\r\n                left: \"0px\",\r\n            },\r\n            position: \"absolute\",\r\n            positionX: getRndInteger(1, 10) + \"vw\",\r\n            positionY: getRndInteger(1, 25) + \"vh\",\r\n            iconImage: \"folder.png\",\r\n            altText: file.title,\r\n            fullscreen: false,\r\n            showInAppGrid: false,\r\n            showInNavbar: true,\r\n            folderContent: file.content,\r\n            folderSize: file.size,\r\n        }\r\n        const openWindowPayload = {\r\n            windowState: \"open\",\r\n            windowId: windowId\r\n        }\r\n        windowsStore.pushNewWindow(addWindowPayload)\r\n        windowsStore.setWindowState(openWindowPayload)\r\n    } else if (file.type == \"video\") {\r\n        console.log(\"SKIP\")\r\n    } else {\r\n        const openWindowPayload = {\r\n            windowState: \"open\",\r\n            windowId: \"ImagePreviewWindow\"\r\n        }\r\n        const contentPayload = files.value.slice(files.value.indexOf(file));\r\n        contentPayload.push(...files.value.slice(0, files.value.indexOf(file)));\r\n        const payload = {\r\n            windowState: \"close\",\r\n            windowId: \"ImagePreviewWindow\",\r\n        }\r\n        windowsStore.setWindowState(payload)\r\n        setTimeout(() => {\r\n            windowsStore.setPhotoFolderContent(contentPayload)\r\n            windowsStore.setWindowState(openWindowPayload)\r\n        })\r\n    }\r\n}\r\n\r\nlet isDragging = false;\r\n\r\nonMounted(() => {\r\n    window.value = windowsStore.getWindowById(ComponentName)\r\n    const draggableWindow = interact(\"#\" + window.value.windowId)\r\n    draggableWindow\r\n        .draggable({\r\n            listeners: {\r\n                move(event) {\r\n                    position.value.x += event.dx\r\n                    position.value.y += event.dy\r\n                    // event.target.style.transform = `translate(${position.value.x}px, ${position.value.y}px)`\r\n                }\r\n            },\r\n            modifiers: [\r\n                interact.modifiers.restrictRect({\r\n                    restriction: '#screen',\r\n                    endOnly: true\r\n                }),\r\n            ],\r\n            allowFrom: '#top-bar'\r\n        })\r\n        .on('dragstart', () => {\r\n            isDragging = true;\r\n        })\r\n        .on('dragmove', () => {\r\n            if (isDragging) {\r\n                setActiveWindow();\r\n                // windowsStore.zIndexIncrement(window.value.windowId);\r\n                isDragging = false;\r\n            }\r\n        })\r\n        .on('dragend', () => {\r\n            isDragging = false;\r\n        })\r\n        .resizable({\r\n            edges: {\r\n                left: true,\r\n                right: true,\r\n                bottom: true,\r\n                top: false\r\n            },\r\n            listeners: {\r\n                move(event) {\r\n                    const target = event.target\r\n                    w.value = event.rect.width\r\n                    h.value = event.rect.height\r\n                    target.style.width = `${w.value}px`\r\n                    target.style.height = `${h.value}px`\r\n                    position.value.x += event.deltaRect.left\r\n                    position.value.y += event.deltaRect.top\r\n                }\r\n            },\r\n            modifiers: [\r\n                interact.modifiers.restrictSize({\r\n                    min: {\r\n                        width: 400,\r\n                        height: 400\r\n                    },\r\n                    max: {\r\n                        width: document.getElementById('screen').clientWidth - position.value.x,\r\n                        height: document.getElementById('screen').clientHeight - position.value.y\r\n                    }\r\n                }),\r\n            ],\r\n        })\r\n})\r\n\nreturn (_ctx, _cache) => {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    id: window.value.windowId,\n    style: _normalizeStyle(style.value),\n    class: _normalizeClass([\"window window-style\", {\r\n        'fullscreen': window.value.fullscreen == true,\r\n        'minimize': window.value.fullscreen == 'minimize',\r\n    }]),\n    onClick: [setActiveWindow, setActiveWindow],\n    onDragstart: setActiveWindow\n  }, [\n    _createElementVNode(\"div\", {\n      id: \"top-bar\",\n      class: _normalizeClass([\"top-bar-window\", \r\n        _unref(windowsStore).activeWindow == window.value.windowId\r\n            ? 'top-bar'\r\n            : 'top-bar-deactivated'\r\n        ]),\n      onDblclick: toggleWindowSize\n    }, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"img\", {\n          class: \"icon-image\",\n          src: _imports_0,\n          alt: window.value.altText\n        }, null, 8, _hoisted_3),\n        _createTextVNode(_toDisplayString(window.value.displayName), 1)\n      ]),\n      _createElementVNode(\"div\", { class: \"triple-button\" }, [\n        _createElementVNode(\"button\", {\n          class: \"minimize-button button\",\n          onClick: minimizeWindow\n        }, _hoisted_5),\n        _createElementVNode(\"button\", {\n          class: \"expand-button button\",\n          onClick: toggleWindowSize\n        }, _hoisted_7),\n        _createElementVNode(\"button\", {\n          class: \"close-button button\",\n          style: {\"margin-right\":\"3px\",\"padding-left\":\"1px\"},\n          onClick: closeWindow\n        }, \" × \")\n      ])\n    ], 34),\n    _createElementVNode(\"div\", _hoisted_8, [\n      _hoisted_9,\n      _createElementVNode(\"div\", {\n        class: \"file-explorer\",\n        onClick: _cache[0] || (_cache[0] = _withModifiers($event => (size.value = __props.folderSize), [\"self\"])),\n        ref_key: \"fileExplorer\",\n        ref: fileExplorer\n      }, [\n        _createElementVNode(\"nav\", {\n          class: \"grid-container-photos\",\n          style: _normalizeStyle({ height: gridHeight.value })\n        }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(files.value, (file) => {\n            return (_openBlock(), _createElementBlock(\"li\", {\n              key: file.key\n            }, [\n              _createElementVNode(\"button\", {\n                class: \"icon-photos\",\n                onClick: $event => (setSize(file)),\n                onTouchstart: $event => (openWindow(file)),\n                onDblclick: $event => (openWindow(file))\n              }, [\n                (file.type == 'photo')\n                  ? (_openBlock(), _createElementBlock(\"img\", {\n                      key: 0,\n                      class: \"icon-image-photos\",\n                      src: _imports_1,\n                      alt: file.altText\n                    }, null, 8, _hoisted_11))\n                  : (file.type == 'folder')\n                    ? (_openBlock(), _createElementBlock(\"img\", {\n                        key: 1,\n                        class: \"icon-image-photos\",\n                        src: _imports_2,\n                        alt: file.altText\n                      }, null, 8, _hoisted_12))\n                    : (file.type == 'file')\n                      ? (_openBlock(), _createElementBlock(\"img\", {\n                          key: 2,\n                          class: \"icon-image-photos\",\n                          src: _imports_3,\n                          alt: file.altText\n                        }, null, 8, _hoisted_13))\n                      : (file.type == 'video')\n                        ? (_openBlock(), _createElementBlock(\"img\", {\n                            key: 3,\n                            class: \"icon-image-photos\",\n                            src: _imports_4,\n                            alt: file.altText\n                          }, null, 8, _hoisted_14))\n                        : _createCommentVNode(\"\", true),\n                _createElementVNode(\"div\", _hoisted_15, [\n                  _createElementVNode(\"p\", _hoisted_16, _toDisplayString(file.title), 1)\n                ])\n              ], 40, _hoisted_10)\n            ]))\n          }), 128))\n        ], 4)\n      ], 512),\n      _createElementVNode(\"div\", _hoisted_17, [\n        _createElementVNode(\"div\", _hoisted_18, _toDisplayString(files.value.length) + \" object(s)\", 1),\n        _createElementVNode(\"div\", _hoisted_19, _toDisplayString(convertBytestoMegabytes(size.value)), 1)\n      ])\n    ])\n  ], 46, _hoisted_1))\n}\n}\n\n}\n\n\nimport \"C:/Users/h00dy/Documents/github/h00dy.me/templates/FileWindow.vue?vue&type=style&index=0&scoped=598ba05b&lang.css\"\n\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['__scopeId',\"data-v-598ba05b\"]])",
      "start": 1714315493301,
      "end": 1714315493322,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714315493322,
      "end": 1714315493322,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714315493322,
      "end": 1714315493322,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1714315493322,
      "end": 1714315493322,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1714315493322,
      "end": 1714315493322,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1714315493322,
      "end": 1714315493322,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714315493322,
      "end": 1714315493322,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1714315493322,
      "end": 1714315493322,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714315493322,
      "end": 1714315493322,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714315493322,
      "end": 1714315493322,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714315493322,
      "end": 1714315493322,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714315493322,
      "end": 1714315493322,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714315493322,
      "end": 1714315493322,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714315493322,
      "end": 1714315493322,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714315493322,
      "end": 1714315493322,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "result": "import * as __vite_glob_0_0 from \"../assets/win95Icons/bio.png\";import * as __vite_glob_0_1 from \"../assets/win95Icons/file.png\";import * as __vite_glob_0_2 from \"../assets/win95Icons/folder.png\";import * as __vite_glob_0_3 from \"../assets/win95Icons/mail.png\";import * as __vite_glob_0_4 from \"../assets/win95Icons/photos.png\";import * as __vite_glob_0_5 from \"../assets/win95Icons/resume.png\";import { unref as _unref, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, withModifiers as _withModifiers, createStaticVNode as _createStaticVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nimport _imports_0 from '@/assets/win95Icons/folder.png'\nimport _imports_1 from '@/assets/FileWindow/image.png'\nimport _imports_2 from '@/assets/FileWindow/folder.png'\nimport _imports_3 from '@/assets/FileWindow/file.png'\nimport _imports_4 from '@/assets/FileWindow/video.png'\n\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-598ba05b\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = [\"id\"]\nconst _hoisted_2 = { class: \"window-name\" }\nconst _hoisted_3 = [\"alt\"]\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { style: {\"height\":\"2px\",\"width\":\"6px\",\"background\":\"black\",\"margin-top\":\"8px\",\"margin-right\":\"2px\"} }, null, -1))\nconst _hoisted_5 = [\n  _hoisted_4\n]\nconst _hoisted_6 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { style: {\"height\":\"8px\",\"width\":\"9px\",\"border-left\":\"black 1px solid\",\"border-right\":\"black 1px solid\",\"border-bottom\":\"black 1px solid\",\"border-top\":\"black 2px solid\"} }, null, -1))\nconst _hoisted_7 = [\n  _hoisted_6\n]\nconst _hoisted_8 = { class: \"content\" }\nconst _hoisted_9 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"top-bar-nav\\\" data-v-598ba05b><div class=\\\"top-bar-text\\\" data-v-598ba05b><span style=\\\"margin-right:12px;\\\" data-v-598ba05b><u data-v-598ba05b>F</u>ile </span><span style=\\\"margin-right:12px;\\\" data-v-598ba05b><u data-v-598ba05b>E</u>dit </span><span style=\\\"margin-right:12px;\\\" data-v-598ba05b><u data-v-598ba05b>V</u>iew </span><span style=\\\"margin-right:12px;\\\" data-v-598ba05b><u data-v-598ba05b>H</u>elp </span></div></div>\", 1)\nconst _hoisted_10 = [\"onClick\", \"onTouchstart\", \"onDblclick\"]\nconst _hoisted_11 = [\"alt\"]\nconst _hoisted_12 = [\"alt\"]\nconst _hoisted_13 = [\"alt\"]\nconst _hoisted_14 = [\"alt\"]\nconst _hoisted_15 = { class: \"border-box\" }\nconst _hoisted_16 = { class: \"icon-text\" }\nconst _hoisted_17 = { class: \"bottom-bar\" }\nconst _hoisted_18 = { class: \"left-bar bar\" }\nconst _hoisted_19 = { class: \"right-bar bar\" }\n\nimport interact from 'interactjs';\r\nimport {\r\n    onMounted,\r\n    ref,\r\n    computed\r\n} from 'vue';\r\nimport {\r\n    useWindowsStore\r\n} from '@/stores/windows'\r\n\r\n\nconst _sfc_main = {\n  __name: 'FileWindow',\n  props: {\r\n    windowId: String,\r\n    nameOfWindow: String,\r\n    content_padding_left: {\r\n        required: false,\r\n        type: String,\r\n        default: \"15%\",\r\n    },\r\n    content_padding_right: {\r\n        required: false,\r\n        type: String,\r\n        default: \"15%\",\r\n    },\r\n    content_padding_top: {\r\n        required: false,\r\n        type: String,\r\n        default: \"5%\",\r\n    },\r\n    content_padding_bottom: {\r\n        required: false,\r\n        type: String,\r\n        default: \"5%\",\r\n    },\r\n    folderContent: {\r\n        required: true,\r\n        type: Array,\r\n        default: () => [],\r\n    },\r\n    folderSize: {\r\n        required: false,\r\n        type: Number,\r\n        default: 0,\r\n    },\r\n},\n  setup(__props) {\n\r\nconst props = __props\r\n\r\nconst position = ref({\r\n    x: 0,\r\n    y: 0\r\n})\r\nconst tempPosition = ref({\r\n    x: 0,\r\n    y: 0\r\n})\r\nconst windowsStore = useWindowsStore()\r\nconst window = ref({})\r\nconst ComponentName = props.nameOfWindow\r\nconst w = ref(0)\r\nconst h = ref(0)\r\nconst gridHeight = ref(\"\")\r\nconst fileExplorer = ref(null)\r\nconst files = ref(props.folderContent)\r\nconst size = ref(props.folderSize)\r\n\r\nonMounted(() => {\r\n    let gridH = fileExplorer.value.clientHeight\r\n    gridHeight.value = gridH + \"px\"\r\n    console.log(gridHeight.value)\r\n})\r\n\r\nconst style = computed(() => ({\r\n    height: `${h.value}px`,\r\n    width: `${w.value}px`,\r\n    transform: `translate(${position.value.x}px, ${position.value.y}px)`,\r\n    \"--content-padding-left\": props.content_padding_left || \"15%\",\r\n    \"--content-padding-right\": props.content_padding_right || \"15%\",\r\n    \"--content-padding-top\": props.content_padding_top || \"5%\",\r\n    \"--content-padding-bottom\": props.content_padding_bottom || \"5%\",\r\n    \"--fullscreen\": windowsStore.getFullscreenWindowHeight, // assuming this is a method in your store\r\n}));\r\n\r\nconst setActiveWindow = () => {\r\n    windowsStore.setActiveWindow(window.value.windowId)\r\n    windowsStore.zIndexIncrement(window.value.windowId)\r\n}\r\n\r\nconst toggleWindowSize = () => {\r\n    if (windowsStore.getWindowFullscreen(window.value.windowId) == true) {\r\n        const payload = {\r\n            fullscreen: false,\r\n            windowId: window.value.windowId,\r\n        };\r\n        windowsStore.setFullscreen(payload)\r\n        position.value.x = tempPosition.value.x\r\n        position.value.y = tempPosition.value.y\r\n    } else if (\r\n        windowsStore.getWindowFullscreen(window.value.windowId) == false\r\n    ) {\r\n        const payload = {\r\n            fullscreen: true,\r\n            windowId: window.value.windowId,\r\n        };\r\n        windowsStore.setFullscreen(payload)\r\n        const tempX = position.value.x\r\n        const tempY = position.value.y\r\n        tempPosition.value.x = tempX\r\n        tempPosition.value.y = tempY\r\n        position.value.x = 0\r\n        position.value.y = 0\r\n    }\r\n}\r\n\r\nconst minimizeWindow = () => {\r\n    const payload = {\r\n        windowState: \"minimize\",\r\n        windowId: window.value.windowId,\r\n    };\r\n    windowsStore.setWindowState(payload)\r\n}\r\n\r\nconst closeWindow = () => {\r\n    const payload = {\r\n        windowState: \"close\",\r\n        windowId: window.value.windowId,\r\n    };\r\n    windowsStore.setWindowState(payload)\r\n}\r\n\r\nconst getImagePath = (iconImage) => {\r\n    const path = `../assets/win95Icons/${iconImage}`;\r\n    const modules =\r\n        /* #__PURE__ */ Object.assign({\"../assets/win95Icons/bio.png\": __vite_glob_0_0,\"../assets/win95Icons/file.png\": __vite_glob_0_1,\"../assets/win95Icons/folder.png\": __vite_glob_0_2,\"../assets/win95Icons/mail.png\": __vite_glob_0_3,\"../assets/win95Icons/photos.png\": __vite_glob_0_4,\"../assets/win95Icons/resume.png\": __vite_glob_0_5\n\n});\r\n    const mod = modules[path]\r\n    if (mod == undefined) {\r\n        return \"\"\r\n    } else {\r\n        return mod.default;\r\n    }\r\n};\r\n\r\nconst convertBytestoMegabytes = (bytes) => {\r\n    if (bytes !== 0) {\r\n        return (bytes / 1000000).toFixed(2) + \"MB\";\r\n    } else {\r\n        return \"\";\r\n    }\r\n}\r\n\r\nconst setSize = (file) => {\r\n    size.value = file.size\r\n}\r\n\r\nconst getRndInteger = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nconst openWindow = (file) => {\r\n   if (file.type == 'folder') {\r\n        const windowId = \"FolderWindow\" + getRndInteger(1, 1000000)\r\n        const addWindowPayload = {\r\n            windowId: windowId,\r\n            windowState: \"close\",\r\n            displayName: file.title,\r\n            windowComponent: \"FilesWindow\",\r\n            windowContent: \"\",\r\n            windowContentPadding: {\r\n                top: \"0px\",\r\n                right: \"0px\",\r\n                bottom: \"0px\",\r\n                left: \"0px\",\r\n            },\r\n            position: \"absolute\",\r\n            positionX: getRndInteger(1, 10) + \"vw\",\r\n            positionY: getRndInteger(1, 25) + \"vh\",\r\n            iconImage: \"folder.png\",\r\n            altText: file.title,\r\n            fullscreen: false,\r\n            showInAppGrid: false,\r\n            showInNavbar: true,\r\n            folderContent: file.content,\r\n            folderSize: file.size,\r\n        }\r\n        const openWindowPayload = {\r\n            windowState: \"open\",\r\n            windowId: windowId\r\n        }\r\n        windowsStore.pushNewWindow(addWindowPayload)\r\n        windowsStore.setWindowState(openWindowPayload)\r\n    } else if (file.type == \"video\") {\r\n        console.log(\"SKIP\")\r\n    } else {\r\n        const openWindowPayload = {\r\n            windowState: \"open\",\r\n            windowId: \"ImagePreviewWindow\"\r\n        }\r\n        const contentPayload = files.value.slice(files.value.indexOf(file));\r\n        contentPayload.push(...files.value.slice(0, files.value.indexOf(file)));\r\n        const payload = {\r\n            windowState: \"close\",\r\n            windowId: \"ImagePreviewWindow\",\r\n        }\r\n        windowsStore.setWindowState(payload)\r\n        setTimeout(() => {\r\n            windowsStore.setPhotoFolderContent(contentPayload)\r\n            windowsStore.setWindowState(openWindowPayload)\r\n        })\r\n    }\r\n}\r\n\r\nlet isDragging = false;\r\n\r\nonMounted(() => {\r\n    window.value = windowsStore.getWindowById(ComponentName)\r\n    const draggableWindow = interact(\"#\" + window.value.windowId)\r\n    draggableWindow\r\n        .draggable({\r\n            listeners: {\r\n                move(event) {\r\n                    position.value.x += event.dx\r\n                    position.value.y += event.dy\r\n                    // event.target.style.transform = `translate(${position.value.x}px, ${position.value.y}px)`\r\n                }\r\n            },\r\n            modifiers: [\r\n                interact.modifiers.restrictRect({\r\n                    restriction: '#screen',\r\n                    endOnly: true\r\n                }),\r\n            ],\r\n            allowFrom: '#top-bar'\r\n        })\r\n        .on('dragstart', () => {\r\n            isDragging = true;\r\n        })\r\n        .on('dragmove', () => {\r\n            if (isDragging) {\r\n                setActiveWindow();\r\n                // windowsStore.zIndexIncrement(window.value.windowId);\r\n                isDragging = false;\r\n            }\r\n        })\r\n        .on('dragend', () => {\r\n            isDragging = false;\r\n        })\r\n        .resizable({\r\n            edges: {\r\n                left: true,\r\n                right: true,\r\n                bottom: true,\r\n                top: false\r\n            },\r\n            listeners: {\r\n                move(event) {\r\n                    const target = event.target\r\n                    w.value = event.rect.width\r\n                    h.value = event.rect.height\r\n                    target.style.width = `${w.value}px`\r\n                    target.style.height = `${h.value}px`\r\n                    position.value.x += event.deltaRect.left\r\n                    position.value.y += event.deltaRect.top\r\n                }\r\n            },\r\n            modifiers: [\r\n                interact.modifiers.restrictSize({\r\n                    min: {\r\n                        width: 400,\r\n                        height: 400\r\n                    },\r\n                    max: {\r\n                        width: document.getElementById('screen').clientWidth - position.value.x,\r\n                        height: document.getElementById('screen').clientHeight - position.value.y\r\n                    }\r\n                }),\r\n            ],\r\n        })\r\n})\r\n\nreturn (_ctx, _cache) => {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    id: window.value.windowId,\n    style: _normalizeStyle(style.value),\n    class: _normalizeClass([\"window window-style\", {\r\n        'fullscreen': window.value.fullscreen == true,\r\n        'minimize': window.value.fullscreen == 'minimize',\r\n    }]),\n    onClick: [setActiveWindow, setActiveWindow],\n    onDragstart: setActiveWindow\n  }, [\n    _createElementVNode(\"div\", {\n      id: \"top-bar\",\n      class: _normalizeClass([\"top-bar-window\", \r\n        _unref(windowsStore).activeWindow == window.value.windowId\r\n            ? 'top-bar'\r\n            : 'top-bar-deactivated'\r\n        ]),\n      onDblclick: toggleWindowSize\n    }, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"img\", {\n          class: \"icon-image\",\n          src: _imports_0,\n          alt: window.value.altText\n        }, null, 8, _hoisted_3),\n        _createTextVNode(_toDisplayString(window.value.displayName), 1)\n      ]),\n      _createElementVNode(\"div\", { class: \"triple-button\" }, [\n        _createElementVNode(\"button\", {\n          class: \"minimize-button button\",\n          onClick: minimizeWindow\n        }, _hoisted_5),\n        _createElementVNode(\"button\", {\n          class: \"expand-button button\",\n          onClick: toggleWindowSize\n        }, _hoisted_7),\n        _createElementVNode(\"button\", {\n          class: \"close-button button\",\n          style: {\"margin-right\":\"3px\",\"padding-left\":\"1px\"},\n          onClick: closeWindow\n        }, \" × \")\n      ])\n    ], 34),\n    _createElementVNode(\"div\", _hoisted_8, [\n      _hoisted_9,\n      _createElementVNode(\"div\", {\n        class: \"file-explorer\",\n        onClick: _cache[0] || (_cache[0] = _withModifiers($event => (size.value = __props.folderSize), [\"self\"])),\n        ref_key: \"fileExplorer\",\n        ref: fileExplorer\n      }, [\n        _createElementVNode(\"nav\", {\n          class: \"grid-container-photos\",\n          style: _normalizeStyle({ height: gridHeight.value })\n        }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(files.value, (file) => {\n            return (_openBlock(), _createElementBlock(\"li\", {\n              key: file.key\n            }, [\n              _createElementVNode(\"button\", {\n                class: \"icon-photos\",\n                onClick: $event => (setSize(file)),\n                onTouchstart: $event => (openWindow(file)),\n                onDblclick: $event => (openWindow(file))\n              }, [\n                (file.type == 'photo')\n                  ? (_openBlock(), _createElementBlock(\"img\", {\n                      key: 0,\n                      class: \"icon-image-photos\",\n                      src: _imports_1,\n                      alt: file.altText\n                    }, null, 8, _hoisted_11))\n                  : (file.type == 'folder')\n                    ? (_openBlock(), _createElementBlock(\"img\", {\n                        key: 1,\n                        class: \"icon-image-photos\",\n                        src: _imports_2,\n                        alt: file.altText\n                      }, null, 8, _hoisted_12))\n                    : (file.type == 'file')\n                      ? (_openBlock(), _createElementBlock(\"img\", {\n                          key: 2,\n                          class: \"icon-image-photos\",\n                          src: _imports_3,\n                          alt: file.altText\n                        }, null, 8, _hoisted_13))\n                      : (file.type == 'video')\n                        ? (_openBlock(), _createElementBlock(\"img\", {\n                            key: 3,\n                            class: \"icon-image-photos\",\n                            src: _imports_4,\n                            alt: file.altText\n                          }, null, 8, _hoisted_14))\n                        : _createCommentVNode(\"\", true),\n                _createElementVNode(\"div\", _hoisted_15, [\n                  _createElementVNode(\"p\", _hoisted_16, _toDisplayString(file.title), 1)\n                ])\n              ], 40, _hoisted_10)\n            ]))\n          }), 128))\n        ], 4)\n      ], 512),\n      _createElementVNode(\"div\", _hoisted_17, [\n        _createElementVNode(\"div\", _hoisted_18, _toDisplayString(files.value.length) + \" object(s)\", 1),\n        _createElementVNode(\"div\", _hoisted_19, _toDisplayString(convertBytestoMegabytes(size.value)), 1)\n      ])\n    ])\n  ], 46, _hoisted_1))\n}\n}\n\n}\n\n\nimport \"C:/Users/h00dy/Documents/github/h00dy.me/templates/FileWindow.vue?vue&type=style&index=0&scoped=598ba05b&lang.css\"\n\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['__scopeId',\"data-v-598ba05b\"]])",
      "start": 1714315493322,
      "end": 1714315493397,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1714315493397,
      "end": 1714315493397,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1714315493397,
      "end": 1714315493400,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1714315493400,
      "end": 1714315493400,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1714315493400,
      "end": 1714315493400,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1714315493400,
      "end": 1714315493400,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1714315493400,
      "end": 1714315493401,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714315493401,
      "end": 1714315493401,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714315493401,
      "end": 1714315493401,
      "order": "normal"
    }
  ]
}
