{
  "resolvedId": "C:/Users/h00dy/Documents/github/h00dy.me/node_modules/devalue/src/stringify.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import {\r\n\tDevalueError,\r\n\tget_type,\r\n\tis_plain_object,\r\n\tis_primitive,\r\n\tstringify_string\r\n} from './utils.js';\r\nimport {\r\n\tHOLE,\r\n\tNAN,\r\n\tNEGATIVE_INFINITY,\r\n\tNEGATIVE_ZERO,\r\n\tPOSITIVE_INFINITY,\r\n\tUNDEFINED\r\n} from './constants.js';\r\n\r\n/**\r\n * Turn a value into a JSON string that can be parsed with `devalue.parse`\r\n * @param {any} value\r\n * @param {Record<string, (value: any) => any>} [reducers]\r\n */\r\nexport function stringify(value, reducers) {\r\n\t/** @type {any[]} */\r\n\tconst stringified = [];\r\n\r\n\t/** @type {Map<any, number>} */\r\n\tconst indexes = new Map();\r\n\r\n\t/** @type {Array<{ key: string, fn: (value: any) => any }>} */\r\n\tconst custom = [];\r\n\tfor (const key in reducers) {\r\n\t\tcustom.push({ key, fn: reducers[key] });\r\n\t}\r\n\r\n\t/** @type {string[]} */\r\n\tconst keys = [];\r\n\r\n\tlet p = 0;\r\n\r\n\t/** @param {any} thing */\r\n\tfunction flatten(thing) {\r\n\t\tif (typeof thing === 'function') {\r\n\t\t\tthrow new DevalueError(`Cannot stringify a function`, keys);\r\n\t\t}\r\n\r\n\t\tif (indexes.has(thing)) return indexes.get(thing);\r\n\r\n\t\tif (thing === undefined) return UNDEFINED;\r\n\t\tif (Number.isNaN(thing)) return NAN;\r\n\t\tif (thing === Infinity) return POSITIVE_INFINITY;\r\n\t\tif (thing === -Infinity) return NEGATIVE_INFINITY;\r\n\t\tif (thing === 0 && 1 / thing < 0) return NEGATIVE_ZERO;\r\n\r\n\t\tconst index = p++;\r\n\t\tindexes.set(thing, index);\r\n\r\n\t\tfor (const { key, fn } of custom) {\r\n\t\t\tconst value = fn(thing);\r\n\t\t\tif (value) {\r\n\t\t\t\tstringified[index] = `[\"${key}\",${flatten(value)}]`;\r\n\t\t\t\treturn index;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet str = '';\r\n\r\n\t\tif (is_primitive(thing)) {\r\n\t\t\tstr = stringify_primitive(thing);\r\n\t\t} else {\r\n\t\t\tconst type = get_type(thing);\r\n\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 'Number':\r\n\t\t\t\tcase 'String':\r\n\t\t\t\tcase 'Boolean':\r\n\t\t\t\t\tstr = `[\"Object\",${stringify_primitive(thing)}]`;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'BigInt':\r\n\t\t\t\t\tstr = `[\"BigInt\",${thing}]`;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Date':\r\n\t\t\t\t\tstr = `[\"Date\",\"${thing.toISOString()}\"]`;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'RegExp':\r\n\t\t\t\t\tconst { source, flags } = thing;\r\n\t\t\t\t\tstr = flags\r\n\t\t\t\t\t\t? `[\"RegExp\",${stringify_string(source)},\"${flags}\"]`\r\n\t\t\t\t\t\t: `[\"RegExp\",${stringify_string(source)}]`;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Array':\r\n\t\t\t\t\tstr = '[';\r\n\r\n\t\t\t\t\tfor (let i = 0; i < thing.length; i += 1) {\r\n\t\t\t\t\t\tif (i > 0) str += ',';\r\n\r\n\t\t\t\t\t\tif (i in thing) {\r\n\t\t\t\t\t\t\tkeys.push(`[${i}]`);\r\n\t\t\t\t\t\t\tstr += flatten(thing[i]);\r\n\t\t\t\t\t\t\tkeys.pop();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tstr += HOLE;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstr += ']';\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Set':\r\n\t\t\t\t\tstr = '[\"Set\"';\r\n\r\n\t\t\t\t\tfor (const value of thing) {\r\n\t\t\t\t\t\tstr += `,${flatten(value)}`;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstr += ']';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Map':\r\n\t\t\t\t\tstr = '[\"Map\"';\r\n\r\n\t\t\t\t\tfor (const [key, value] of thing) {\r\n\t\t\t\t\t\tkeys.push(\r\n\t\t\t\t\t\t\t`.get(${is_primitive(key) ? stringify_primitive(key) : '...'})`\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tstr += `,${flatten(key)},${flatten(value)}`;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstr += ']';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (!is_plain_object(thing)) {\r\n\t\t\t\t\t\tthrow new DevalueError(\r\n\t\t\t\t\t\t\t`Cannot stringify arbitrary non-POJOs`,\r\n\t\t\t\t\t\t\tkeys\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (Object.getOwnPropertySymbols(thing).length > 0) {\r\n\t\t\t\t\t\tthrow new DevalueError(\r\n\t\t\t\t\t\t\t`Cannot stringify POJOs with symbolic keys`,\r\n\t\t\t\t\t\t\tkeys\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (Object.getPrototypeOf(thing) === null) {\r\n\t\t\t\t\t\tstr = '[\"null\"';\r\n\t\t\t\t\t\tfor (const key in thing) {\r\n\t\t\t\t\t\t\tkeys.push(`.${key}`);\r\n\t\t\t\t\t\t\tstr += `,${stringify_string(key)},${flatten(thing[key])}`;\r\n\t\t\t\t\t\t\tkeys.pop();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tstr += ']';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstr = '{';\r\n\t\t\t\t\t\tlet started = false;\r\n\t\t\t\t\t\tfor (const key in thing) {\r\n\t\t\t\t\t\t\tif (started) str += ',';\r\n\t\t\t\t\t\t\tstarted = true;\r\n\t\t\t\t\t\t\tkeys.push(`.${key}`);\r\n\t\t\t\t\t\t\tstr += `${stringify_string(key)}:${flatten(thing[key])}`;\r\n\t\t\t\t\t\t\tkeys.pop();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tstr += '}';\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tstringified[index] = str;\r\n\t\treturn index;\r\n\t}\r\n\r\n\tconst index = flatten(value);\r\n\r\n\t// special case — value is represented as a negative index\r\n\tif (index < 0) return `${index}`;\r\n\r\n\treturn `[${stringified.join(',')}]`;\r\n}\r\n\r\n/**\r\n * @param {any} thing\r\n * @returns {string}\r\n */\r\nfunction stringify_primitive(thing) {\r\n\tconst type = typeof thing;\r\n\tif (type === 'string') return stringify_string(thing);\r\n\tif (thing instanceof String) return stringify_string(thing.toString());\r\n\tif (thing === void 0) return UNDEFINED.toString();\r\n\tif (thing === 0 && 1 / thing < 0) return NEGATIVE_ZERO.toString();\r\n\tif (type === 'bigint') return `[\"BigInt\",\"${thing}\"]`;\r\n\treturn String(thing);\r\n}\r\n",
      "start": 1714315493359,
      "end": 1714315493563,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1714315493563,
      "end": 1714315493563,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1714315493563,
      "end": 1714315493563,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1714315493563,
      "end": 1714315493563,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1714315493563,
      "end": 1714315493563,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714315493563,
      "end": 1714315493563,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714315493563,
      "end": 1714315493563,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714315493563,
      "end": 1714315493563,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714315493563,
      "end": 1714315493563,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714315493563,
      "end": 1714315493563,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714315493563,
      "end": 1714315493563,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1714315493563,
      "end": 1714315493563,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1714315493566,
      "end": 1714315493567,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1714315493568,
      "end": 1714315493568,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714315493568,
      "end": 1714315493569,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1714315493570,
      "end": 1714315493570,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714315493571,
      "end": 1714315493571,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714315493571,
      "end": 1714315493571,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714315493571,
      "end": 1714315493571,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714315493575,
      "end": 1714315493575,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714315493577,
      "end": 1714315493577,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714315493589,
      "end": 1714315493590,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714315493591,
      "end": 1714315493594,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714315493596,
      "end": 1714315493596,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1714315493597,
      "end": 1714315493597,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1714315493597,
      "end": 1714315493597,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1714315493597,
      "end": 1714315493597,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1714315493597,
      "end": 1714315493597,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1714315493600,
      "end": 1714315493600,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1714315493600,
      "end": 1714315493600,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714315493600,
      "end": 1714315493600,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714315493600,
      "end": 1714315493600,
      "order": "normal"
    }
  ]
}
