/**
 * Credit to [@hooray](https://github.com/hooray)
 * @see https://github.com/vuejs/vitepress/pull/2347
 */
declare function toggle(event?: MouseEvent): void;
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
    isDark?: boolean | undefined;
    animation?: boolean | undefined;
    animationDuration?: number | undefined;
}>, {
    isDark: boolean;
    animation: boolean;
    animationDuration: number;
}>, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
    isDark?: boolean | undefined;
    animation?: boolean | undefined;
    animationDuration?: number | undefined;
}>, {
    isDark: boolean;
    animation: boolean;
    animationDuration: number;
}>>>, {
    isDark: boolean;
    animation: boolean;
    animationDuration: number;
}, {}>, {
    default?(_: {
        mode: import("@vueuse/core").BasicColorSchema;
        isDark: boolean;
        toggle: typeof toggle;
    }): any;
}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
type __VLS_Prettify<T> = {
    [K in keyof T]: T[K];
} & {};
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
