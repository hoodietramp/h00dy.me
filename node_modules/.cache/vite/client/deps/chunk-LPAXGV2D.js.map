{
  "version": 3,
  "sources": ["../../../../defu/dist/defu.mjs"],
  "sourcesContent": ["function isPlainObject(value) {\r\n  if (value === null || typeof value !== \"object\") {\r\n    return false;\r\n  }\r\n  const prototype = Object.getPrototypeOf(value);\r\n  if (prototype !== null && prototype !== Object.prototype && Object.getPrototypeOf(prototype) !== null) {\r\n    return false;\r\n  }\r\n  if (Symbol.iterator in value) {\r\n    return false;\r\n  }\r\n  if (Symbol.toStringTag in value) {\r\n    return Object.prototype.toString.call(value) === \"[object Module]\";\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction _defu(baseObject, defaults, namespace = \".\", merger) {\r\n  if (!isPlainObject(defaults)) {\r\n    return _defu(baseObject, {}, namespace, merger);\r\n  }\r\n  const object = Object.assign({}, defaults);\r\n  for (const key in baseObject) {\r\n    if (key === \"__proto__\" || key === \"constructor\") {\r\n      continue;\r\n    }\r\n    const value = baseObject[key];\r\n    if (value === null || value === void 0) {\r\n      continue;\r\n    }\r\n    if (merger && merger(object, key, value, namespace)) {\r\n      continue;\r\n    }\r\n    if (Array.isArray(value) && Array.isArray(object[key])) {\r\n      object[key] = [...value, ...object[key]];\r\n    } else if (isPlainObject(value) && isPlainObject(object[key])) {\r\n      object[key] = _defu(\r\n        value,\r\n        object[key],\r\n        (namespace ? `${namespace}.` : \"\") + key.toString(),\r\n        merger\r\n      );\r\n    } else {\r\n      object[key] = value;\r\n    }\r\n  }\r\n  return object;\r\n}\r\nfunction createDefu(merger) {\r\n  return (...arguments_) => (\r\n    // eslint-disable-next-line unicorn/no-array-reduce\r\n    arguments_.reduce((p, c) => _defu(p, c, \"\", merger), {})\r\n  );\r\n}\r\nconst defu = createDefu();\r\nconst defuFn = createDefu((object, key, currentValue) => {\r\n  if (object[key] !== void 0 && typeof currentValue === \"function\") {\r\n    object[key] = currentValue(object[key]);\r\n    return true;\r\n  }\r\n});\r\nconst defuArrayFn = createDefu((object, key, currentValue) => {\r\n  if (Array.isArray(object[key]) && typeof currentValue === \"function\") {\r\n    object[key] = currentValue(object[key]);\r\n    return true;\r\n  }\r\n});\r\n\r\nexport { createDefu, defu as default, defu, defuArrayFn, defuFn };\r\n"],
  "mappings": ";AAAA,SAAS,cAAc,OAAO;AAC5B,MAAI,UAAU,QAAQ,OAAO,UAAU,UAAU;AAC/C,WAAO;AAAA,EACT;AACA,QAAM,YAAY,OAAO,eAAe,KAAK;AAC7C,MAAI,cAAc,QAAQ,cAAc,OAAO,aAAa,OAAO,eAAe,SAAS,MAAM,MAAM;AACrG,WAAO;AAAA,EACT;AACA,MAAI,OAAO,YAAY,OAAO;AAC5B,WAAO;AAAA,EACT;AACA,MAAI,OAAO,eAAe,OAAO;AAC/B,WAAO,OAAO,UAAU,SAAS,KAAK,KAAK,MAAM;AAAA,EACnD;AACA,SAAO;AACT;AAEA,SAAS,MAAM,YAAY,UAAU,YAAY,KAAK,QAAQ;AAC5D,MAAI,CAAC,cAAc,QAAQ,GAAG;AAC5B,WAAO,MAAM,YAAY,CAAC,GAAG,WAAW,MAAM;AAAA,EAChD;AACA,QAAM,SAAS,OAAO,OAAO,CAAC,GAAG,QAAQ;AACzC,aAAW,OAAO,YAAY;AAC5B,QAAI,QAAQ,eAAe,QAAQ,eAAe;AAChD;AAAA,IACF;AACA,UAAM,QAAQ,WAAW,GAAG;AAC5B,QAAI,UAAU,QAAQ,UAAU,QAAQ;AACtC;AAAA,IACF;AACA,QAAI,UAAU,OAAO,QAAQ,KAAK,OAAO,SAAS,GAAG;AACnD;AAAA,IACF;AACA,QAAI,MAAM,QAAQ,KAAK,KAAK,MAAM,QAAQ,OAAO,GAAG,CAAC,GAAG;AACtD,aAAO,GAAG,IAAI,CAAC,GAAG,OAAO,GAAG,OAAO,GAAG,CAAC;AAAA,IACzC,WAAW,cAAc,KAAK,KAAK,cAAc,OAAO,GAAG,CAAC,GAAG;AAC7D,aAAO,GAAG,IAAI;AAAA,QACZ;AAAA,QACA,OAAO,GAAG;AAAA,SACT,YAAY,GAAG,SAAS,MAAM,MAAM,IAAI,SAAS;AAAA,QAClD;AAAA,MACF;AAAA,IACF,OAAO;AACL,aAAO,GAAG,IAAI;AAAA,IAChB;AAAA,EACF;AACA,SAAO;AACT;AACA,SAAS,WAAW,QAAQ;AAC1B,SAAO,IAAI;AAAA;AAAA,IAET,WAAW,OAAO,CAAC,GAAG,MAAM,MAAM,GAAG,GAAG,IAAI,MAAM,GAAG,CAAC,CAAC;AAAA;AAE3D;AACA,IAAM,OAAO,WAAW;AACxB,IAAM,SAAS,WAAW,CAAC,QAAQ,KAAK,iBAAiB;AACvD,MAAI,OAAO,GAAG,MAAM,UAAU,OAAO,iBAAiB,YAAY;AAChE,WAAO,GAAG,IAAI,aAAa,OAAO,GAAG,CAAC;AACtC,WAAO;AAAA,EACT;AACF,CAAC;AACD,IAAM,cAAc,WAAW,CAAC,QAAQ,KAAK,iBAAiB;AAC5D,MAAI,MAAM,QAAQ,OAAO,GAAG,CAAC,KAAK,OAAO,iBAAiB,YAAY;AACpE,WAAO,GAAG,IAAI,aAAa,OAAO,GAAG,CAAC;AACtC,WAAO;AAAA,EACT;AACF,CAAC;",
  "names": []
}
