{
  "version": 3,
  "sources": ["../../../../cookie-es/dist/index.mjs", "../../../../ohash/dist/index.mjs", "../../../../radix3/dist/index.mjs", "../../../../uncrypto/dist/crypto.web.mjs", "../../../../iron-webcrypto/dist/index.js", "../../../../unenv/runtime/_internal/utils.mjs", "../../../../unenv/runtime/node/events/_events.mjs", "../../../../unenv/runtime/node/events/index.mjs", "../../../../unenv/runtime/node/stream/readable.mjs", "../../../../unenv/runtime/node/stream/writable.mjs", "../../../../unenv/runtime/node/stream/duplex.mjs", "../../../../unenv/runtime/node/net/socket.mjs", "../../../../unenv/runtime/node/http/_request.mjs", "../../../../unenv/runtime/node/http/_response.mjs", "../../../../h3/dist/index.mjs"],
  "sourcesContent": ["const fieldContentRegExp = /^[\\u0009\\u0020-\\u007E\\u0080-\\u00FF]+$/;\nfunction parse(str, options) {\n  if (typeof str !== \"string\") {\n    throw new TypeError(\"argument str must be a string\");\n  }\n  const obj = {};\n  const opt = options || {};\n  const dec = opt.decode || decode;\n  let index = 0;\n  while (index < str.length) {\n    const eqIdx = str.indexOf(\"=\", index);\n    if (eqIdx === -1) {\n      break;\n    }\n    let endIdx = str.indexOf(\";\", index);\n    if (endIdx === -1) {\n      endIdx = str.length;\n    } else if (endIdx < eqIdx) {\n      index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n      continue;\n    }\n    const key = str.slice(index, eqIdx).trim();\n    if (void 0 === obj[key]) {\n      let val = str.slice(eqIdx + 1, endIdx).trim();\n      if (val.codePointAt(0) === 34) {\n        val = val.slice(1, -1);\n      }\n      obj[key] = tryDecode(val, dec);\n    }\n    index = endIdx + 1;\n  }\n  return obj;\n}\nfunction serialize(name, value, options) {\n  const opt = options || {};\n  const enc = opt.encode || encode;\n  if (typeof enc !== \"function\") {\n    throw new TypeError(\"option encode is invalid\");\n  }\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError(\"argument name is invalid\");\n  }\n  const encodedValue = enc(value);\n  if (encodedValue && !fieldContentRegExp.test(encodedValue)) {\n    throw new TypeError(\"argument val is invalid\");\n  }\n  let str = name + \"=\" + encodedValue;\n  if (void 0 !== opt.maxAge && opt.maxAge !== null) {\n    const maxAge = opt.maxAge - 0;\n    if (Number.isNaN(maxAge) || !Number.isFinite(maxAge)) {\n      throw new TypeError(\"option maxAge is invalid\");\n    }\n    str += \"; Max-Age=\" + Math.floor(maxAge);\n  }\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError(\"option domain is invalid\");\n    }\n    str += \"; Domain=\" + opt.domain;\n  }\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError(\"option path is invalid\");\n    }\n    str += \"; Path=\" + opt.path;\n  }\n  if (opt.expires) {\n    if (!isDate(opt.expires) || Number.isNaN(opt.expires.valueOf())) {\n      throw new TypeError(\"option expires is invalid\");\n    }\n    str += \"; Expires=\" + opt.expires.toUTCString();\n  }\n  if (opt.httpOnly) {\n    str += \"; HttpOnly\";\n  }\n  if (opt.secure) {\n    str += \"; Secure\";\n  }\n  if (opt.priority) {\n    const priority = typeof opt.priority === \"string\" ? opt.priority.toLowerCase() : opt.priority;\n    switch (priority) {\n      case \"low\": {\n        str += \"; Priority=Low\";\n        break;\n      }\n      case \"medium\": {\n        str += \"; Priority=Medium\";\n        break;\n      }\n      case \"high\": {\n        str += \"; Priority=High\";\n        break;\n      }\n      default: {\n        throw new TypeError(\"option priority is invalid\");\n      }\n    }\n  }\n  if (opt.sameSite) {\n    const sameSite = typeof opt.sameSite === \"string\" ? opt.sameSite.toLowerCase() : opt.sameSite;\n    switch (sameSite) {\n      case true: {\n        str += \"; SameSite=Strict\";\n        break;\n      }\n      case \"lax\": {\n        str += \"; SameSite=Lax\";\n        break;\n      }\n      case \"strict\": {\n        str += \"; SameSite=Strict\";\n        break;\n      }\n      case \"none\": {\n        str += \"; SameSite=None\";\n        break;\n      }\n      default: {\n        throw new TypeError(\"option sameSite is invalid\");\n      }\n    }\n  }\n  if (opt.partitioned) {\n    str += \"; Partitioned\";\n  }\n  return str;\n}\nfunction isDate(val) {\n  return Object.prototype.toString.call(val) === \"[object Date]\" || val instanceof Date;\n}\nfunction tryDecode(str, decode2) {\n  try {\n    return decode2(str);\n  } catch {\n    return str;\n  }\n}\nfunction decode(str) {\n  return str.includes(\"%\") ? decodeURIComponent(str) : str;\n}\nfunction encode(val) {\n  return encodeURIComponent(val);\n}\n\nexport { parse, serialize };\n", "const defaults = Object.freeze({\n  ignoreUnknown: false,\n  respectType: false,\n  respectFunctionNames: false,\n  respectFunctionProperties: false,\n  unorderedObjects: true,\n  unorderedArrays: false,\n  unorderedSets: false,\n  excludeKeys: void 0,\n  excludeValues: void 0,\n  replacer: void 0\n});\nfunction objectHash(object, options) {\n  if (options) {\n    options = { ...defaults, ...options };\n  } else {\n    options = defaults;\n  }\n  const hasher = createHasher(options);\n  hasher.dispatch(object);\n  return hasher.toString();\n}\nconst defaultPrototypesKeys = Object.freeze([\n  \"prototype\",\n  \"__proto__\",\n  \"constructor\"\n]);\nfunction createHasher(options) {\n  let buff = \"\";\n  let context = /* @__PURE__ */ new Map();\n  const write = (str) => {\n    buff += str;\n  };\n  return {\n    toString() {\n      return buff;\n    },\n    getContext() {\n      return context;\n    },\n    dispatch(value) {\n      if (options.replacer) {\n        value = options.replacer(value);\n      }\n      const type = value === null ? \"null\" : typeof value;\n      return this[type](value);\n    },\n    object(object) {\n      if (object && typeof object.toJSON === \"function\") {\n        return this.object(object.toJSON());\n      }\n      const objString = Object.prototype.toString.call(object);\n      let objType = \"\";\n      const objectLength = objString.length;\n      if (objectLength < 10) {\n        objType = \"unknown:[\" + objString + \"]\";\n      } else {\n        objType = objString.slice(8, objectLength - 1);\n      }\n      objType = objType.toLowerCase();\n      let objectNumber = null;\n      if ((objectNumber = context.get(object)) === void 0) {\n        context.set(object, context.size);\n      } else {\n        return this.dispatch(\"[CIRCULAR:\" + objectNumber + \"]\");\n      }\n      if (typeof Buffer !== \"undefined\" && Buffer.isBuffer && Buffer.isBuffer(object)) {\n        write(\"buffer:\");\n        return write(object.toString(\"utf8\"));\n      }\n      if (objType !== \"object\" && objType !== \"function\" && objType !== \"asyncfunction\") {\n        if (this[objType]) {\n          this[objType](object);\n        } else if (!options.ignoreUnknown) {\n          this.unkown(object, objType);\n        }\n      } else {\n        let keys = Object.keys(object);\n        if (options.unorderedObjects) {\n          keys = keys.sort();\n        }\n        let extraKeys = [];\n        if (options.respectType !== false && !isNativeFunction(object)) {\n          extraKeys = defaultPrototypesKeys;\n        }\n        if (options.excludeKeys) {\n          keys = keys.filter((key) => {\n            return !options.excludeKeys(key);\n          });\n          extraKeys = extraKeys.filter((key) => {\n            return !options.excludeKeys(key);\n          });\n        }\n        write(\"object:\" + (keys.length + extraKeys.length) + \":\");\n        const dispatchForKey = (key) => {\n          this.dispatch(key);\n          write(\":\");\n          if (!options.excludeValues) {\n            this.dispatch(object[key]);\n          }\n          write(\",\");\n        };\n        for (const key of keys) {\n          dispatchForKey(key);\n        }\n        for (const key of extraKeys) {\n          dispatchForKey(key);\n        }\n      }\n    },\n    array(arr, unordered) {\n      unordered = unordered === void 0 ? options.unorderedArrays !== false : unordered;\n      write(\"array:\" + arr.length + \":\");\n      if (!unordered || arr.length <= 1) {\n        for (const entry of arr) {\n          this.dispatch(entry);\n        }\n        return;\n      }\n      const contextAdditions = /* @__PURE__ */ new Map();\n      const entries = arr.map((entry) => {\n        const hasher = createHasher(options);\n        hasher.dispatch(entry);\n        for (const [key, value] of hasher.getContext()) {\n          contextAdditions.set(key, value);\n        }\n        return hasher.toString();\n      });\n      context = contextAdditions;\n      entries.sort();\n      return this.array(entries, false);\n    },\n    date(date) {\n      return write(\"date:\" + date.toJSON());\n    },\n    symbol(sym) {\n      return write(\"symbol:\" + sym.toString());\n    },\n    unkown(value, type) {\n      write(type);\n      if (!value) {\n        return;\n      }\n      write(\":\");\n      if (value && typeof value.entries === \"function\") {\n        return this.array(\n          Array.from(value.entries()),\n          true\n          /* ordered */\n        );\n      }\n    },\n    error(err) {\n      return write(\"error:\" + err.toString());\n    },\n    boolean(bool) {\n      return write(\"bool:\" + bool);\n    },\n    string(string) {\n      write(\"string:\" + string.length + \":\");\n      write(string);\n    },\n    function(fn) {\n      write(\"fn:\");\n      if (isNativeFunction(fn)) {\n        this.dispatch(\"[native]\");\n      } else {\n        this.dispatch(fn.toString());\n      }\n      if (options.respectFunctionNames !== false) {\n        this.dispatch(\"function-name:\" + String(fn.name));\n      }\n      if (options.respectFunctionProperties) {\n        this.object(fn);\n      }\n    },\n    number(number) {\n      return write(\"number:\" + number);\n    },\n    xml(xml) {\n      return write(\"xml:\" + xml.toString());\n    },\n    null() {\n      return write(\"Null\");\n    },\n    undefined() {\n      return write(\"Undefined\");\n    },\n    regexp(regex) {\n      return write(\"regex:\" + regex.toString());\n    },\n    uint8array(arr) {\n      write(\"uint8array:\");\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    uint8clampedarray(arr) {\n      write(\"uint8clampedarray:\");\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    int8array(arr) {\n      write(\"int8array:\");\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    uint16array(arr) {\n      write(\"uint16array:\");\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    int16array(arr) {\n      write(\"int16array:\");\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    uint32array(arr) {\n      write(\"uint32array:\");\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    int32array(arr) {\n      write(\"int32array:\");\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    float32array(arr) {\n      write(\"float32array:\");\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    float64array(arr) {\n      write(\"float64array:\");\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    arraybuffer(arr) {\n      write(\"arraybuffer:\");\n      return this.dispatch(new Uint8Array(arr));\n    },\n    url(url) {\n      return write(\"url:\" + url.toString());\n    },\n    map(map) {\n      write(\"map:\");\n      const arr = [...map];\n      return this.array(arr, options.unorderedSets !== false);\n    },\n    set(set) {\n      write(\"set:\");\n      const arr = [...set];\n      return this.array(arr, options.unorderedSets !== false);\n    },\n    file(file) {\n      write(\"file:\");\n      return this.dispatch([file.name, file.size, file.type, file.lastModfied]);\n    },\n    blob() {\n      if (options.ignoreUnknown) {\n        return write(\"[blob]\");\n      }\n      throw new Error(\n        'Hashing Blob objects is currently not supported\\nUse \"options.replacer\" or \"options.ignoreUnknown\"\\n'\n      );\n    },\n    domwindow() {\n      return write(\"domwindow\");\n    },\n    bigint(number) {\n      return write(\"bigint:\" + number.toString());\n    },\n    /* Node.js standard native objects */\n    process() {\n      return write(\"process\");\n    },\n    timer() {\n      return write(\"timer\");\n    },\n    pipe() {\n      return write(\"pipe\");\n    },\n    tcp() {\n      return write(\"tcp\");\n    },\n    udp() {\n      return write(\"udp\");\n    },\n    tty() {\n      return write(\"tty\");\n    },\n    statwatcher() {\n      return write(\"statwatcher\");\n    },\n    securecontext() {\n      return write(\"securecontext\");\n    },\n    connection() {\n      return write(\"connection\");\n    },\n    zlib() {\n      return write(\"zlib\");\n    },\n    context() {\n      return write(\"context\");\n    },\n    nodescript() {\n      return write(\"nodescript\");\n    },\n    httpparser() {\n      return write(\"httpparser\");\n    },\n    dataview() {\n      return write(\"dataview\");\n    },\n    signal() {\n      return write(\"signal\");\n    },\n    fsevent() {\n      return write(\"fsevent\");\n    },\n    tlswrap() {\n      return write(\"tlswrap\");\n    }\n  };\n}\nconst nativeFunc = \"[native code] }\";\nconst nativeFuncLength = nativeFunc.length;\nfunction isNativeFunction(f) {\n  if (typeof f !== \"function\") {\n    return false;\n  }\n  return Function.prototype.toString.call(f).slice(-nativeFuncLength) === nativeFunc;\n}\n\nclass WordArray {\n  constructor(words, sigBytes) {\n    words = this.words = words || [];\n    this.sigBytes = sigBytes === void 0 ? words.length * 4 : sigBytes;\n  }\n  toString(encoder) {\n    return (encoder || Hex).stringify(this);\n  }\n  concat(wordArray) {\n    this.clamp();\n    if (this.sigBytes % 4) {\n      for (let i = 0; i < wordArray.sigBytes; i++) {\n        const thatByte = wordArray.words[i >>> 2] >>> 24 - i % 4 * 8 & 255;\n        this.words[this.sigBytes + i >>> 2] |= thatByte << 24 - (this.sigBytes + i) % 4 * 8;\n      }\n    } else {\n      for (let j = 0; j < wordArray.sigBytes; j += 4) {\n        this.words[this.sigBytes + j >>> 2] = wordArray.words[j >>> 2];\n      }\n    }\n    this.sigBytes += wordArray.sigBytes;\n    return this;\n  }\n  clamp() {\n    this.words[this.sigBytes >>> 2] &= 4294967295 << 32 - this.sigBytes % 4 * 8;\n    this.words.length = Math.ceil(this.sigBytes / 4);\n  }\n  clone() {\n    return new WordArray([...this.words]);\n  }\n}\nconst Hex = {\n  stringify(wordArray) {\n    const hexChars = [];\n    for (let i = 0; i < wordArray.sigBytes; i++) {\n      const bite = wordArray.words[i >>> 2] >>> 24 - i % 4 * 8 & 255;\n      hexChars.push((bite >>> 4).toString(16), (bite & 15).toString(16));\n    }\n    return hexChars.join(\"\");\n  }\n};\nconst Base64 = {\n  stringify(wordArray) {\n    const keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    const base64Chars = [];\n    for (let i = 0; i < wordArray.sigBytes; i += 3) {\n      const byte1 = wordArray.words[i >>> 2] >>> 24 - i % 4 * 8 & 255;\n      const byte2 = wordArray.words[i + 1 >>> 2] >>> 24 - (i + 1) % 4 * 8 & 255;\n      const byte3 = wordArray.words[i + 2 >>> 2] >>> 24 - (i + 2) % 4 * 8 & 255;\n      const triplet = byte1 << 16 | byte2 << 8 | byte3;\n      for (let j = 0; j < 4 && i * 8 + j * 6 < wordArray.sigBytes * 8; j++) {\n        base64Chars.push(keyStr.charAt(triplet >>> 6 * (3 - j) & 63));\n      }\n    }\n    return base64Chars.join(\"\");\n  }\n};\nconst Latin1 = {\n  parse(latin1Str) {\n    const latin1StrLength = latin1Str.length;\n    const words = [];\n    for (let i = 0; i < latin1StrLength; i++) {\n      words[i >>> 2] |= (latin1Str.charCodeAt(i) & 255) << 24 - i % 4 * 8;\n    }\n    return new WordArray(words, latin1StrLength);\n  }\n};\nconst Utf8 = {\n  parse(utf8Str) {\n    return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n  }\n};\nclass BufferedBlockAlgorithm {\n  constructor() {\n    this._data = new WordArray();\n    this._nDataBytes = 0;\n    this._minBufferSize = 0;\n    this.blockSize = 512 / 32;\n  }\n  reset() {\n    this._data = new WordArray();\n    this._nDataBytes = 0;\n  }\n  _append(data) {\n    if (typeof data === \"string\") {\n      data = Utf8.parse(data);\n    }\n    this._data.concat(data);\n    this._nDataBytes += data.sigBytes;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  _doProcessBlock(_dataWords, _offset) {\n  }\n  _process(doFlush) {\n    let processedWords;\n    let nBlocksReady = this._data.sigBytes / (this.blockSize * 4);\n    if (doFlush) {\n      nBlocksReady = Math.ceil(nBlocksReady);\n    } else {\n      nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n    }\n    const nWordsReady = nBlocksReady * this.blockSize;\n    const nBytesReady = Math.min(nWordsReady * 4, this._data.sigBytes);\n    if (nWordsReady) {\n      for (let offset = 0; offset < nWordsReady; offset += this.blockSize) {\n        this._doProcessBlock(this._data.words, offset);\n      }\n      processedWords = this._data.words.splice(0, nWordsReady);\n      this._data.sigBytes -= nBytesReady;\n    }\n    return new WordArray(processedWords, nBytesReady);\n  }\n}\nclass Hasher extends BufferedBlockAlgorithm {\n  update(messageUpdate) {\n    this._append(messageUpdate);\n    this._process();\n    return this;\n  }\n  finalize(messageUpdate) {\n    if (messageUpdate) {\n      this._append(messageUpdate);\n    }\n  }\n}\n\nconst H = [\n  1779033703,\n  -1150833019,\n  1013904242,\n  -1521486534,\n  1359893119,\n  -1694144372,\n  528734635,\n  1541459225\n];\nconst K = [\n  1116352408,\n  1899447441,\n  -1245643825,\n  -373957723,\n  961987163,\n  1508970993,\n  -1841331548,\n  -1424204075,\n  -670586216,\n  310598401,\n  607225278,\n  1426881987,\n  1925078388,\n  -2132889090,\n  -1680079193,\n  -1046744716,\n  -459576895,\n  -272742522,\n  264347078,\n  604807628,\n  770255983,\n  1249150122,\n  1555081692,\n  1996064986,\n  -1740746414,\n  -1473132947,\n  -1341970488,\n  -1084653625,\n  -958395405,\n  -710438585,\n  113926993,\n  338241895,\n  666307205,\n  773529912,\n  1294757372,\n  1396182291,\n  1695183700,\n  1986661051,\n  -2117940946,\n  -1838011259,\n  -1564481375,\n  -1474664885,\n  -1035236496,\n  -949202525,\n  -778901479,\n  -694614492,\n  -200395387,\n  275423344,\n  430227734,\n  506948616,\n  659060556,\n  883997877,\n  958139571,\n  1322822218,\n  1537002063,\n  1747873779,\n  1955562222,\n  2024104815,\n  -2067236844,\n  -1933114872,\n  -1866530822,\n  -1538233109,\n  -1090935817,\n  -965641998\n];\nconst W = [];\nclass SHA256 extends Hasher {\n  constructor() {\n    super(...arguments);\n    this._hash = new WordArray([...H]);\n  }\n  reset() {\n    super.reset();\n    this._hash = new WordArray([...H]);\n  }\n  _doProcessBlock(M, offset) {\n    const H2 = this._hash.words;\n    let a = H2[0];\n    let b = H2[1];\n    let c = H2[2];\n    let d = H2[3];\n    let e = H2[4];\n    let f = H2[5];\n    let g = H2[6];\n    let h = H2[7];\n    for (let i = 0; i < 64; i++) {\n      if (i < 16) {\n        W[i] = M[offset + i] | 0;\n      } else {\n        const gamma0x = W[i - 15];\n        const gamma0 = (gamma0x << 25 | gamma0x >>> 7) ^ (gamma0x << 14 | gamma0x >>> 18) ^ gamma0x >>> 3;\n        const gamma1x = W[i - 2];\n        const gamma1 = (gamma1x << 15 | gamma1x >>> 17) ^ (gamma1x << 13 | gamma1x >>> 19) ^ gamma1x >>> 10;\n        W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n      }\n      const ch = e & f ^ ~e & g;\n      const maj = a & b ^ a & c ^ b & c;\n      const sigma0 = (a << 30 | a >>> 2) ^ (a << 19 | a >>> 13) ^ (a << 10 | a >>> 22);\n      const sigma1 = (e << 26 | e >>> 6) ^ (e << 21 | e >>> 11) ^ (e << 7 | e >>> 25);\n      const t1 = h + sigma1 + ch + K[i] + W[i];\n      const t2 = sigma0 + maj;\n      h = g;\n      g = f;\n      f = e;\n      e = d + t1 | 0;\n      d = c;\n      c = b;\n      b = a;\n      a = t1 + t2 | 0;\n    }\n    H2[0] = H2[0] + a | 0;\n    H2[1] = H2[1] + b | 0;\n    H2[2] = H2[2] + c | 0;\n    H2[3] = H2[3] + d | 0;\n    H2[4] = H2[4] + e | 0;\n    H2[5] = H2[5] + f | 0;\n    H2[6] = H2[6] + g | 0;\n    H2[7] = H2[7] + h | 0;\n  }\n  finalize(messageUpdate) {\n    super.finalize(messageUpdate);\n    const nBitsTotal = this._nDataBytes * 8;\n    const nBitsLeft = this._data.sigBytes * 8;\n    this._data.words[nBitsLeft >>> 5] |= 128 << 24 - nBitsLeft % 32;\n    this._data.words[(nBitsLeft + 64 >>> 9 << 4) + 14] = Math.floor(\n      nBitsTotal / 4294967296\n    );\n    this._data.words[(nBitsLeft + 64 >>> 9 << 4) + 15] = nBitsTotal;\n    this._data.sigBytes = this._data.words.length * 4;\n    this._process();\n    return this._hash;\n  }\n}\nfunction sha256(message) {\n  return new SHA256().finalize(message).toString();\n}\nfunction sha256base64(message) {\n  return new SHA256().finalize(message).toString(Base64);\n}\n\nfunction hash(object, options = {}) {\n  const hashed = typeof object === \"string\" ? object : objectHash(object, options);\n  return sha256base64(hashed).slice(0, 10);\n}\n\nfunction murmurHash(key, seed = 0) {\n  if (typeof key === \"string\") {\n    key = createBuffer(key);\n  }\n  let i = 0;\n  let h1 = seed;\n  let k1;\n  let h1b;\n  const remainder = key.length & 3;\n  const bytes = key.length - remainder;\n  const c1 = 3432918353;\n  const c2 = 461845907;\n  while (i < bytes) {\n    k1 = key[i] & 255 | (key[++i] & 255) << 8 | (key[++i] & 255) << 16 | (key[++i] & 255) << 24;\n    ++i;\n    k1 = (k1 & 65535) * c1 + (((k1 >>> 16) * c1 & 65535) << 16) & 4294967295;\n    k1 = k1 << 15 | k1 >>> 17;\n    k1 = (k1 & 65535) * c2 + (((k1 >>> 16) * c2 & 65535) << 16) & 4294967295;\n    h1 ^= k1;\n    h1 = h1 << 13 | h1 >>> 19;\n    h1b = (h1 & 65535) * 5 + (((h1 >>> 16) * 5 & 65535) << 16) & 4294967295;\n    h1 = (h1b & 65535) + 27492 + (((h1b >>> 16) + 58964 & 65535) << 16);\n  }\n  k1 = 0;\n  switch (remainder) {\n    case 3: {\n      k1 ^= (key[i + 2] & 255) << 16;\n      break;\n    }\n    case 2: {\n      k1 ^= (key[i + 1] & 255) << 8;\n      break;\n    }\n    case 1: {\n      k1 ^= key[i] & 255;\n      k1 = (k1 & 65535) * c1 + (((k1 >>> 16) * c1 & 65535) << 16) & 4294967295;\n      k1 = k1 << 15 | k1 >>> 17;\n      k1 = (k1 & 65535) * c2 + (((k1 >>> 16) * c2 & 65535) << 16) & 4294967295;\n      h1 ^= k1;\n    }\n  }\n  h1 ^= key.length;\n  h1 ^= h1 >>> 16;\n  h1 = (h1 & 65535) * 2246822507 + (((h1 >>> 16) * 2246822507 & 65535) << 16) & 4294967295;\n  h1 ^= h1 >>> 13;\n  h1 = (h1 & 65535) * 3266489909 + (((h1 >>> 16) * 3266489909 & 65535) << 16) & 4294967295;\n  h1 ^= h1 >>> 16;\n  return h1 >>> 0;\n}\nfunction createBuffer(val) {\n  return new TextEncoder().encode(val);\n}\n\nfunction isEqual(object1, object2, hashOptions = {}) {\n  if (object1 === object2) {\n    return true;\n  }\n  if (objectHash(object1, hashOptions) === objectHash(object2, hashOptions)) {\n    return true;\n  }\n  return false;\n}\n\nfunction diff(obj1, obj2, opts = {}) {\n  const h1 = _toHashedObject(obj1, opts);\n  const h2 = _toHashedObject(obj2, opts);\n  return _diff(h1, h2, opts);\n}\nfunction _diff(h1, h2, opts = {}) {\n  const diffs = [];\n  const allProps = /* @__PURE__ */ new Set([\n    ...Object.keys(h1.props || {}),\n    ...Object.keys(h2.props || {})\n  ]);\n  if (h1.props && h2.props) {\n    for (const prop of allProps) {\n      const p1 = h1.props[prop];\n      const p2 = h2.props[prop];\n      if (p1 && p2) {\n        diffs.push(..._diff(h1.props?.[prop], h2.props?.[prop], opts));\n      } else if (p1 || p2) {\n        diffs.push(\n          new DiffEntry((p2 || p1).key, p1 ? \"removed\" : \"added\", p2, p1)\n        );\n      }\n    }\n  }\n  if (allProps.size === 0 && h1.hash !== h2.hash) {\n    diffs.push(new DiffEntry((h2 || h1).key, \"changed\", h2, h1));\n  }\n  return diffs;\n}\nfunction _toHashedObject(obj, opts, key = \"\") {\n  if (obj && typeof obj !== \"object\") {\n    return new DiffHashedObject(key, obj, objectHash(obj, opts));\n  }\n  const props = {};\n  const hashes = [];\n  for (const _key in obj) {\n    props[_key] = _toHashedObject(\n      obj[_key],\n      opts,\n      key ? `${key}.${_key}` : _key\n    );\n    hashes.push(props[_key].hash);\n  }\n  return new DiffHashedObject(key, obj, `{${hashes.join(\":\")}}`, props);\n}\nclass DiffEntry {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(key, type, newValue, oldValue) {\n    this.key = key;\n    this.type = type;\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n  toString() {\n    return this.toJSON();\n  }\n  toJSON() {\n    switch (this.type) {\n      case \"added\": {\n        return `Added   \\`${this.key}\\``;\n      }\n      case \"removed\": {\n        return `Removed \\`${this.key}\\``;\n      }\n      case \"changed\": {\n        return `Changed \\`${this.key}\\` from \\`${this.oldValue?.toString() || \"-\"}\\` to \\`${this.newValue.toString()}\\``;\n      }\n    }\n  }\n}\nclass DiffHashedObject {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(key, value, hash, props) {\n    this.key = key;\n    this.value = value;\n    this.hash = hash;\n    this.props = props;\n  }\n  toString() {\n    if (this.props) {\n      return `{${Object.keys(this.props).join(\",\")}}`;\n    } else {\n      return JSON.stringify(this.value);\n    }\n  }\n  toJSON() {\n    const k = this.key || \".\";\n    if (this.props) {\n      return `${k}({${Object.keys(this.props).join(\",\")}})`;\n    }\n    return `${k}(${this.value})`;\n  }\n}\n\nexport { diff, hash, isEqual, murmurHash, objectHash, sha256, sha256base64 };\n", "const NODE_TYPES = {\n  NORMAL: 0,\n  WILDCARD: 1,\n  PLACEHOLDER: 2\n};\n\nfunction createRouter(options = {}) {\n  const ctx = {\n    options,\n    rootNode: createRadixNode(),\n    staticRoutesMap: {}\n  };\n  const normalizeTrailingSlash = (p) => options.strictTrailingSlash ? p : p.replace(/\\/$/, \"\") || \"/\";\n  if (options.routes) {\n    for (const path in options.routes) {\n      insert(ctx, normalizeTrailingSlash(path), options.routes[path]);\n    }\n  }\n  return {\n    ctx,\n    lookup: (path) => lookup(ctx, normalizeTrailingSlash(path)),\n    insert: (path, data) => insert(ctx, normalizeTrailingSlash(path), data),\n    remove: (path) => remove(ctx, normalizeTrailingSlash(path))\n  };\n}\nfunction lookup(ctx, path) {\n  const staticPathNode = ctx.staticRoutesMap[path];\n  if (staticPathNode) {\n    return staticPathNode.data;\n  }\n  const sections = path.split(\"/\");\n  const params = {};\n  let paramsFound = false;\n  let wildcardNode = null;\n  let node = ctx.rootNode;\n  let wildCardParam = null;\n  for (let i = 0; i < sections.length; i++) {\n    const section = sections[i];\n    if (node.wildcardChildNode !== null) {\n      wildcardNode = node.wildcardChildNode;\n      wildCardParam = sections.slice(i).join(\"/\");\n    }\n    const nextNode = node.children.get(section);\n    if (nextNode === void 0) {\n      if (node && node.placeholderChildren.length > 1) {\n        const remaining = sections.length - i;\n        node = node.placeholderChildren.find((c) => c.maxDepth === remaining) || null;\n      } else {\n        node = node.placeholderChildren[0] || null;\n      }\n      if (!node) {\n        break;\n      }\n      if (node.paramName) {\n        params[node.paramName] = section;\n      }\n      paramsFound = true;\n    } else {\n      node = nextNode;\n    }\n  }\n  if ((node === null || node.data === null) && wildcardNode !== null) {\n    node = wildcardNode;\n    params[node.paramName || \"_\"] = wildCardParam;\n    paramsFound = true;\n  }\n  if (!node) {\n    return null;\n  }\n  if (paramsFound) {\n    return {\n      ...node.data,\n      params: paramsFound ? params : void 0\n    };\n  }\n  return node.data;\n}\nfunction insert(ctx, path, data) {\n  let isStaticRoute = true;\n  const sections = path.split(\"/\");\n  let node = ctx.rootNode;\n  let _unnamedPlaceholderCtr = 0;\n  const matchedNodes = [node];\n  for (const section of sections) {\n    let childNode;\n    if (childNode = node.children.get(section)) {\n      node = childNode;\n    } else {\n      const type = getNodeType(section);\n      childNode = createRadixNode({ type, parent: node });\n      node.children.set(section, childNode);\n      if (type === NODE_TYPES.PLACEHOLDER) {\n        childNode.paramName = section === \"*\" ? `_${_unnamedPlaceholderCtr++}` : section.slice(1);\n        node.placeholderChildren.push(childNode);\n        isStaticRoute = false;\n      } else if (type === NODE_TYPES.WILDCARD) {\n        node.wildcardChildNode = childNode;\n        childNode.paramName = section.slice(\n          3\n          /* \"**:\" */\n        ) || \"_\";\n        isStaticRoute = false;\n      }\n      matchedNodes.push(childNode);\n      node = childNode;\n    }\n  }\n  for (const [depth, node2] of matchedNodes.entries()) {\n    node2.maxDepth = Math.max(matchedNodes.length - depth, node2.maxDepth || 0);\n  }\n  node.data = data;\n  if (isStaticRoute === true) {\n    ctx.staticRoutesMap[path] = node;\n  }\n  return node;\n}\nfunction remove(ctx, path) {\n  let success = false;\n  const sections = path.split(\"/\");\n  let node = ctx.rootNode;\n  for (const section of sections) {\n    node = node.children.get(section);\n    if (!node) {\n      return success;\n    }\n  }\n  if (node.data) {\n    const lastSection = sections.at(-1) || \"\";\n    node.data = null;\n    if (Object.keys(node.children).length === 0 && node.parent) {\n      node.parent.children.delete(lastSection);\n      node.parent.wildcardChildNode = null;\n      node.parent.placeholderChildren = [];\n    }\n    success = true;\n  }\n  return success;\n}\nfunction createRadixNode(options = {}) {\n  return {\n    type: options.type || NODE_TYPES.NORMAL,\n    maxDepth: 0,\n    parent: options.parent || null,\n    children: /* @__PURE__ */ new Map(),\n    data: options.data || null,\n    paramName: options.paramName || null,\n    wildcardChildNode: null,\n    placeholderChildren: []\n  };\n}\nfunction getNodeType(str) {\n  if (str.startsWith(\"**\")) {\n    return NODE_TYPES.WILDCARD;\n  }\n  if (str[0] === \":\" || str === \"*\") {\n    return NODE_TYPES.PLACEHOLDER;\n  }\n  return NODE_TYPES.NORMAL;\n}\n\nfunction toRouteMatcher(router) {\n  const table = _routerNodeToTable(\"\", router.ctx.rootNode);\n  return _createMatcher(table, router.ctx.options.strictTrailingSlash);\n}\nfunction _createMatcher(table, strictTrailingSlash) {\n  return {\n    ctx: { table },\n    matchAll: (path) => _matchRoutes(path, table, strictTrailingSlash)\n  };\n}\nfunction _createRouteTable() {\n  return {\n    static: /* @__PURE__ */ new Map(),\n    wildcard: /* @__PURE__ */ new Map(),\n    dynamic: /* @__PURE__ */ new Map()\n  };\n}\nfunction _exportMatcherFromTable(table) {\n  const obj = /* @__PURE__ */ Object.create(null);\n  for (const property in table) {\n    obj[property] = property === \"dynamic\" ? Object.fromEntries(\n      [...table[property].entries()].map(([key, value]) => [\n        key,\n        _exportMatcherFromTable(value)\n      ])\n    ) : Object.fromEntries(table[property].entries());\n  }\n  return obj;\n}\nfunction exportMatcher(matcher) {\n  return _exportMatcherFromTable(matcher.ctx.table);\n}\nfunction _createTableFromExport(matcherExport) {\n  const table = {};\n  for (const property in matcherExport) {\n    table[property] = property === \"dynamic\" ? new Map(\n      Object.entries(matcherExport[property]).map(([key, value]) => [\n        key,\n        _createTableFromExport(value)\n      ])\n    ) : new Map(\n      Object.entries(matcherExport[property])\n    );\n  }\n  return table;\n}\nfunction createMatcherFromExport(matcherExport) {\n  return _createMatcher(_createTableFromExport(matcherExport));\n}\nfunction _matchRoutes(path, table, strictTrailingSlash) {\n  if (strictTrailingSlash !== true && path.endsWith(\"/\")) {\n    path = path.slice(0, -1) || \"/\";\n  }\n  const matches = [];\n  for (const [key, value] of _sortRoutesMap(table.wildcard)) {\n    if (path === key || path.startsWith(key + \"/\")) {\n      matches.push(value);\n    }\n  }\n  for (const [key, value] of _sortRoutesMap(table.dynamic)) {\n    if (path.startsWith(key + \"/\")) {\n      const subPath = \"/\" + path.slice(key.length).split(\"/\").splice(2).join(\"/\");\n      matches.push(..._matchRoutes(subPath, value));\n    }\n  }\n  const staticMatch = table.static.get(path);\n  if (staticMatch) {\n    matches.push(staticMatch);\n  }\n  return matches.filter(Boolean);\n}\nfunction _sortRoutesMap(m) {\n  return [...m.entries()].sort((a, b) => a[0].length - b[0].length);\n}\nfunction _routerNodeToTable(initialPath, initialNode) {\n  const table = _createRouteTable();\n  function _addNode(path, node) {\n    if (path) {\n      if (node.type === NODE_TYPES.NORMAL && !(path.includes(\"*\") || path.includes(\":\"))) {\n        if (node.data) {\n          table.static.set(path, node.data);\n        }\n      } else if (node.type === NODE_TYPES.WILDCARD) {\n        table.wildcard.set(path.replace(\"/**\", \"\"), node.data);\n      } else if (node.type === NODE_TYPES.PLACEHOLDER) {\n        const subTable = _routerNodeToTable(\"\", node);\n        if (node.data) {\n          subTable.static.set(\"/\", node.data);\n        }\n        table.dynamic.set(path.replace(/\\/\\*|\\/:\\w+/, \"\"), subTable);\n        return;\n      }\n    }\n    for (const [childPath, child] of node.children.entries()) {\n      _addNode(`${path}/${childPath}`.replace(\"//\", \"/\"), child);\n    }\n  }\n  _addNode(initialPath, initialNode);\n  return table;\n}\n\nexport { NODE_TYPES, createMatcherFromExport, createRouter, exportMatcher, toRouteMatcher };\n", "const webCrypto = globalThis.crypto;\nconst subtle = webCrypto.subtle;\nconst randomUUID = () => {\n  return webCrypto.randomUUID();\n};\nconst getRandomValues = (array) => {\n  return webCrypto.getRandomValues(array);\n};\nconst _crypto = {\n  randomUUID,\n  getRandomValues,\n  subtle\n};\n\nexport { _crypto as default, getRandomValues, randomUUID, subtle };\n", "// src/utils.ts\nvar alphabetByEncoding = {};\nvar alphabetByValue = Array.from({ length: 64 });\nfor (let i = 0, start = \"A\".charCodeAt(0), limit = \"Z\".charCodeAt(0); i + start <= limit; i++) {\n  const char = String.fromCharCode(i + start);\n  alphabetByEncoding[char] = i;\n  alphabetByValue[i] = char;\n}\nfor (let i = 0, start = \"a\".charCodeAt(0), limit = \"z\".charCodeAt(0); i + start <= limit; i++) {\n  const char = String.fromCharCode(i + start);\n  const index = i + 26;\n  alphabetByEncoding[char] = index;\n  alphabetByValue[index] = char;\n}\nfor (let i = 0; i < 10; i++) {\n  alphabetByEncoding[i.toString(10)] = i + 52;\n  const char = i.toString(10);\n  const index = i + 52;\n  alphabetByEncoding[char] = index;\n  alphabetByValue[index] = char;\n}\nalphabetByEncoding[\"-\"] = 62;\nalphabetByValue[62] = \"-\";\nalphabetByEncoding[\"_\"] = 63;\nalphabetByValue[63] = \"_\";\nvar bitsPerLetter = 6;\nvar bitsPerByte = 8;\nvar maxLetterValue = 63;\nvar stringToBuffer = (value) => {\n  return new TextEncoder().encode(value);\n};\nvar bufferToString = (value) => {\n  return new TextDecoder().decode(value);\n};\nvar base64urlDecode = (_input) => {\n  const input = _input + \"=\".repeat((4 - _input.length % 4) % 4);\n  let totalByteLength = input.length / 4 * 3;\n  if (input.endsWith(\"==\")) {\n    totalByteLength -= 2;\n  } else if (input.endsWith(\"=\")) {\n    totalByteLength--;\n  }\n  const out = new ArrayBuffer(totalByteLength);\n  const dataView = new DataView(out);\n  for (let i = 0; i < input.length; i += 4) {\n    let bits = 0;\n    let bitLength = 0;\n    for (let j = i, limit = i + 3; j <= limit; j++) {\n      if (input[j] === \"=\") {\n        bits >>= bitsPerLetter;\n      } else {\n        if (!(input[j] in alphabetByEncoding)) {\n          throw new TypeError(`Invalid character ${input[j]} in base64 string.`);\n        }\n        bits |= alphabetByEncoding[input[j]] << (limit - j) * bitsPerLetter;\n        bitLength += bitsPerLetter;\n      }\n    }\n    const chunkOffset = i / 4 * 3;\n    bits >>= bitLength % bitsPerByte;\n    const byteLength = Math.floor(bitLength / bitsPerByte);\n    for (let k = 0; k < byteLength; k++) {\n      const offset = (byteLength - k - 1) * bitsPerByte;\n      dataView.setUint8(chunkOffset + k, (bits & 255 << offset) >> offset);\n    }\n  }\n  return new Uint8Array(out);\n};\nvar base64urlEncode = (_input) => {\n  const input = typeof _input === \"string\" ? stringToBuffer(_input) : _input;\n  let str = \"\";\n  for (let i = 0; i < input.length; i += 3) {\n    let bits = 0;\n    let bitLength = 0;\n    for (let j = i, limit = Math.min(i + 3, input.length); j < limit; j++) {\n      bits |= input[j] << (limit - j - 1) * bitsPerByte;\n      bitLength += bitsPerByte;\n    }\n    const bitClusterCount = Math.ceil(bitLength / bitsPerLetter);\n    bits <<= bitClusterCount * bitsPerLetter - bitLength;\n    for (let k = 1; k <= bitClusterCount; k++) {\n      const offset = (bitClusterCount - k) * bitsPerLetter;\n      str += alphabetByValue[(bits & maxLetterValue << offset) >> offset];\n    }\n  }\n  return str;\n};\n\n// src/index.ts\nvar defaults = {\n  encryption: { saltBits: 256, algorithm: \"aes-256-cbc\", iterations: 1, minPasswordlength: 32 },\n  integrity: { saltBits: 256, algorithm: \"sha256\", iterations: 1, minPasswordlength: 32 },\n  ttl: 0,\n  timestampSkewSec: 60,\n  localtimeOffsetMsec: 0\n};\nvar clone = (options) => ({\n  ...options,\n  encryption: { ...options.encryption },\n  integrity: { ...options.integrity }\n});\nvar algorithms = {\n  \"aes-128-ctr\": { keyBits: 128, ivBits: 128, name: \"AES-CTR\" },\n  \"aes-256-cbc\": { keyBits: 256, ivBits: 128, name: \"AES-CBC\" },\n  sha256: { keyBits: 256, name: \"SHA-256\" }\n};\nvar macFormatVersion = \"2\";\nvar macPrefix = \"Fe26.2\";\nvar randomBytes = (_crypto, size) => {\n  const bytes = new Uint8Array(size);\n  _crypto.getRandomValues(bytes);\n  return bytes;\n};\nvar randomBits = (_crypto, bits) => {\n  if (bits < 1)\n    throw new Error(\"Invalid random bits count\");\n  const bytes = Math.ceil(bits / 8);\n  return randomBytes(_crypto, bytes);\n};\nvar pbkdf2 = async (_crypto, password, salt, iterations, keyLength, hash) => {\n  const passwordBuffer = stringToBuffer(password);\n  const importedKey = await _crypto.subtle.importKey(\"raw\", passwordBuffer, \"PBKDF2\", false, [\n    \"deriveBits\"\n  ]);\n  const saltBuffer = stringToBuffer(salt);\n  const params = { name: \"PBKDF2\", hash, salt: saltBuffer, iterations };\n  const derivation = await _crypto.subtle.deriveBits(params, importedKey, keyLength * 8);\n  return derivation;\n};\nvar generateKey = async (_crypto, password, options) => {\n  var _a;\n  if (!(password == null ? void 0 : password.length))\n    throw new Error(\"Empty password\");\n  if (options == null || typeof options !== \"object\")\n    throw new Error(\"Bad options\");\n  if (!(options.algorithm in algorithms))\n    throw new Error(`Unknown algorithm: ${options.algorithm}`);\n  const algorithm = algorithms[options.algorithm];\n  const result = {};\n  const hmac = (_a = options.hmac) != null ? _a : false;\n  const id = hmac ? { name: \"HMAC\", hash: algorithm.name } : { name: algorithm.name };\n  const usage = hmac ? [\"sign\", \"verify\"] : [\"encrypt\", \"decrypt\"];\n  if (typeof password === \"string\") {\n    if (password.length < options.minPasswordlength)\n      throw new Error(\n        `Password string too short (min ${options.minPasswordlength} characters required)`\n      );\n    let { salt = \"\" } = options;\n    if (!salt) {\n      const { saltBits = 0 } = options;\n      if (!saltBits)\n        throw new Error(\"Missing salt and saltBits options\");\n      const randomSalt = randomBits(_crypto, saltBits);\n      salt = [...new Uint8Array(randomSalt)].map((x) => x.toString(16).padStart(2, \"0\")).join(\"\");\n    }\n    const derivedKey = await pbkdf2(\n      _crypto,\n      password,\n      salt,\n      options.iterations,\n      algorithm.keyBits / 8,\n      \"SHA-1\"\n    );\n    const importedEncryptionKey = await _crypto.subtle.importKey(\n      \"raw\",\n      derivedKey,\n      id,\n      false,\n      usage\n    );\n    result.key = importedEncryptionKey;\n    result.salt = salt;\n  } else {\n    if (password.length < algorithm.keyBits / 8)\n      throw new Error(\"Key buffer (password) too small\");\n    result.key = await _crypto.subtle.importKey(\"raw\", password, id, false, usage);\n    result.salt = \"\";\n  }\n  if (options.iv)\n    result.iv = options.iv;\n  else if (\"ivBits\" in algorithm)\n    result.iv = randomBits(_crypto, algorithm.ivBits);\n  return result;\n};\nvar encrypt = async (_crypto, password, options, data) => {\n  const key = await generateKey(_crypto, password, options);\n  const textBuffer = stringToBuffer(data);\n  const encrypted = await _crypto.subtle.encrypt(\n    { name: algorithms[options.algorithm].name, iv: key.iv },\n    key.key,\n    textBuffer\n  );\n  return { encrypted: new Uint8Array(encrypted), key };\n};\nvar decrypt = async (_crypto, password, options, data) => {\n  const key = await generateKey(_crypto, password, options);\n  const decrypted = await _crypto.subtle.decrypt(\n    { name: algorithms[options.algorithm].name, iv: key.iv },\n    key.key,\n    typeof data === \"string\" ? stringToBuffer(data) : data\n  );\n  return bufferToString(new Uint8Array(decrypted));\n};\nvar hmacWithPassword = async (_crypto, password, options, data) => {\n  const key = await generateKey(_crypto, password, { ...options, hmac: true });\n  const textBuffer = stringToBuffer(data);\n  const signed = await _crypto.subtle.sign({ name: \"HMAC\" }, key.key, textBuffer);\n  const digest = base64urlEncode(new Uint8Array(signed));\n  return { digest, salt: key.salt };\n};\nvar normalizePassword = (password) => {\n  if (typeof password === \"string\" || password instanceof Uint8Array)\n    return { encryption: password, integrity: password };\n  if (\"secret\" in password)\n    return { id: password.id, encryption: password.secret, integrity: password.secret };\n  return { id: password.id, encryption: password.encryption, integrity: password.integrity };\n};\nvar seal = async (_crypto, object, password, options) => {\n  if (!password)\n    throw new Error(\"Empty password\");\n  const opts = clone(options);\n  const now = Date.now() + (opts.localtimeOffsetMsec || 0);\n  const objectString = JSON.stringify(object);\n  const pass = normalizePassword(password);\n  const { id = \"\", encryption, integrity } = pass;\n  if (id && !/^\\w+$/.test(id))\n    throw new Error(\"Invalid password id\");\n  const { encrypted, key } = await encrypt(_crypto, encryption, opts.encryption, objectString);\n  const encryptedB64 = base64urlEncode(new Uint8Array(encrypted));\n  const iv = base64urlEncode(key.iv);\n  const expiration = opts.ttl ? now + opts.ttl : \"\";\n  const macBaseString = `${macPrefix}*${id}*${key.salt}*${iv}*${encryptedB64}*${expiration}`;\n  const mac = await hmacWithPassword(_crypto, integrity, opts.integrity, macBaseString);\n  const sealed = `${macBaseString}*${mac.salt}*${mac.digest}`;\n  return sealed;\n};\nvar fixedTimeComparison = (a, b) => {\n  let mismatch = a.length === b.length ? 0 : 1;\n  if (mismatch)\n    b = a;\n  for (let i = 0; i < a.length; i += 1)\n    mismatch |= a.charCodeAt(i) ^ b.charCodeAt(i);\n  return mismatch === 0;\n};\nvar unseal = async (_crypto, sealed, password, options) => {\n  if (!password)\n    throw new Error(\"Empty password\");\n  const opts = clone(options);\n  const now = Date.now() + (opts.localtimeOffsetMsec || 0);\n  const parts = sealed.split(\"*\");\n  if (parts.length !== 8)\n    throw new Error(\"Incorrect number of sealed components\");\n  const prefix = parts[0];\n  let passwordId = parts[1];\n  const encryptionSalt = parts[2];\n  const encryptionIv = parts[3];\n  const encryptedB64 = parts[4];\n  const expiration = parts[5];\n  const hmacSalt = parts[6];\n  const hmac = parts[7];\n  const macBaseString = `${prefix}*${passwordId}*${encryptionSalt}*${encryptionIv}*${encryptedB64}*${expiration}`;\n  if (macPrefix !== prefix)\n    throw new Error(\"Wrong mac prefix\");\n  if (expiration) {\n    if (!/^\\d+$/.test(expiration))\n      throw new Error(\"Invalid expiration\");\n    const exp = Number.parseInt(expiration, 10);\n    if (exp <= now - opts.timestampSkewSec * 1e3)\n      throw new Error(\"Expired seal\");\n  }\n  let pass = \"\";\n  passwordId = passwordId || \"default\";\n  if (typeof password === \"string\" || password instanceof Uint8Array)\n    pass = password;\n  else if (passwordId in password) {\n    pass = password[passwordId];\n  } else {\n    throw new Error(`Cannot find password: ${passwordId}`);\n  }\n  pass = normalizePassword(pass);\n  const macOptions = opts.integrity;\n  macOptions.salt = hmacSalt;\n  const mac = await hmacWithPassword(_crypto, pass.integrity, macOptions, macBaseString);\n  if (!fixedTimeComparison(mac.digest, hmac))\n    throw new Error(\"Bad hmac value\");\n  const encrypted = base64urlDecode(encryptedB64);\n  const decryptOptions = opts.encryption;\n  decryptOptions.salt = encryptionSalt;\n  decryptOptions.iv = base64urlDecode(encryptionIv);\n  const decrypted = await decrypt(_crypto, pass.encryption, decryptOptions, encrypted);\n  if (decrypted)\n    return JSON.parse(decrypted);\n  return null;\n};\n\nexport { algorithms, base64urlDecode, base64urlEncode, bufferToString, clone, decrypt, defaults, encrypt, generateKey, hmacWithPassword, macFormatVersion, macPrefix, randomBits, seal, stringToBuffer, unseal };\n", "export function rawHeaders(headers) {\n  const rawHeaders2 = [];\n  for (const key in headers) {\n    if (Array.isArray(headers[key])) {\n      for (const h of headers[key]) {\n        rawHeaders2.push(key, h);\n      }\n    } else {\n      rawHeaders2.push(key, headers[key]);\n    }\n  }\n  return rawHeaders2;\n}\nexport function mergeFns(...functions) {\n  return function(...args) {\n    for (const fn of functions) {\n      fn(...args);\n    }\n  };\n}\nexport function createNotImplementedError(name) {\n  throw new Error(`[unenv] ${name} is not implemented yet!`);\n}\nexport function notImplemented(name) {\n  const fn = () => {\n    throw createNotImplementedError(name);\n  };\n  return Object.assign(fn, { __unenv__: true });\n}\nexport function notImplementedClass(name) {\n  return class {\n    __unenv__ = true;\n    constructor() {\n      throw new Error(`[unenv] ${name} is not implemented yet!`);\n    }\n  };\n}\n", "let defaultMaxListeners = 10;\nexport class EventEmitter {\n  __unenv__ = true;\n  _events = /* @__PURE__ */ Object.create(null);\n  _maxListeners;\n  static get defaultMaxListeners() {\n    return defaultMaxListeners;\n  }\n  static set defaultMaxListeners(arg) {\n    if (typeof arg !== \"number\" || arg < 0 || Number.isNaN(arg)) {\n      throw new RangeError(\n        'The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + \".\"\n      );\n    }\n    defaultMaxListeners = arg;\n  }\n  setMaxListeners(n) {\n    if (typeof n !== \"number\" || n < 0 || Number.isNaN(n)) {\n      throw new RangeError(\n        'The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + \".\"\n      );\n    }\n    this._maxListeners = n;\n    return this;\n  }\n  getMaxListeners() {\n    return _getMaxListeners(this);\n  }\n  emit(type, ...args) {\n    if (!this._events[type] || this._events[type].length === 0) {\n      return false;\n    }\n    if (type === \"error\") {\n      let er;\n      if (args.length > 0) {\n        er = args[0];\n      }\n      if (er instanceof Error) {\n        throw er;\n      }\n      const err = new Error(\n        \"Unhandled error.\" + (er ? \" (\" + er.message + \")\" : \"\")\n      );\n      err.context = er;\n      throw err;\n    }\n    for (const _listener of this._events[type]) {\n      (_listener.listener || _listener).apply(this, args);\n    }\n    return true;\n  }\n  addListener(type, listener) {\n    return _addListener(this, type, listener, false);\n  }\n  on(type, listener) {\n    return _addListener(this, type, listener, false);\n  }\n  prependListener(type, listener) {\n    return _addListener(this, type, listener, true);\n  }\n  once(type, listener) {\n    return this.on(type, _wrapOnce(this, type, listener));\n  }\n  prependOnceListener(type, listener) {\n    return this.prependListener(type, _wrapOnce(this, type, listener));\n  }\n  removeListener(type, listener) {\n    return _removeListener(this, type, listener);\n  }\n  off(type, listener) {\n    return this.removeListener(type, listener);\n  }\n  removeAllListeners(type) {\n    return _removeAllListeners(this, type);\n  }\n  listeners(type) {\n    return _listeners(this, type, true);\n  }\n  rawListeners(type) {\n    return _listeners(this, type, false);\n  }\n  listenerCount(type) {\n    return this.rawListeners(type).length;\n  }\n  eventNames() {\n    return Object.keys(this._events);\n  }\n}\nexport function once(emitter, name) {\n  return new Promise(function(resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n    function resolver() {\n      if (typeof emitter.removeListener === \"function\") {\n        emitter.removeListener(\"error\", errorListener);\n      }\n      resolve(Array.prototype.slice.call(arguments));\n    }\n    _eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== \"error\") {\n      _addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\nfunction _addListener(target, type, listener, prepend) {\n  _checkListener(listener);\n  if (target._events.newListener !== void 0) {\n    target.emit(\"newListener\", type, listener.listener || listener);\n  }\n  if (!target._events[type]) {\n    target._events[type] = [];\n  }\n  if (prepend) {\n    target._events[type].unshift(listener);\n  } else {\n    target._events[type].push(listener);\n  }\n  const maxListeners = _getMaxListeners(target);\n  if (maxListeners > 0 && target._events[type].length > maxListeners && !target._events[type].warned) {\n    target._events[type].warned = true;\n    const warning = new Error(\n      `[unenv] Possible EventEmitter memory leak detected. ${target._events[type].length} ${type} listeners added. Use emitter.setMaxListeners() to increase limit`\n    );\n    warning.name = \"MaxListenersExceededWarning\";\n    warning.emitter = target;\n    warning.type = type;\n    warning.count = target._events[type]?.length;\n    console.warn(warning);\n  }\n  return target;\n}\nfunction _removeListener(target, type, listener) {\n  _checkListener(listener);\n  if (!target._events[type] || target._events[type].length === 0) {\n    return target;\n  }\n  const lenBeforeFilter = target._events[type].length;\n  target._events[type] = target._events[type].filter((fn) => fn !== listener);\n  if (lenBeforeFilter === target._events[type].length) {\n    return target;\n  }\n  if (target._events.removeListener) {\n    target.emit(\"removeListener\", type, listener.listener || listener);\n  }\n  if (target._events[type].length === 0) {\n    delete target._events[type];\n  }\n  return target;\n}\nfunction _removeAllListeners(target, type) {\n  if (!target._events[type] || target._events[type].length === 0) {\n    return target;\n  }\n  if (target._events.removeListener) {\n    for (const _listener of target._events[type]) {\n      target.emit(\"removeListener\", type, _listener.listener || _listener);\n    }\n  }\n  delete target._events[type];\n  return target;\n}\nfunction _wrapOnce(target, type, listener) {\n  let fired = false;\n  const wrapper = (...args) => {\n    if (fired) {\n      return;\n    }\n    target.removeListener(type, wrapper);\n    fired = true;\n    return args.length === 0 ? listener.call(target) : listener.apply(target, args);\n  };\n  wrapper.listener = listener;\n  return wrapper;\n}\nfunction _getMaxListeners(target) {\n  return target._maxListeners ?? EventEmitter.defaultMaxListeners;\n}\nfunction _listeners(target, type, unwrap) {\n  let listeners = target._events[type];\n  if (typeof listeners === \"function\") {\n    listeners = [listeners];\n  }\n  return unwrap ? listeners.map((l) => l.listener || l) : listeners;\n}\nfunction _checkListener(listener) {\n  if (typeof listener !== \"function\") {\n    throw new TypeError(\n      'The \"listener\" argument must be of type Function. Received type ' + typeof listener\n    );\n  }\n}\nfunction _addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === \"function\") {\n    _eventTargetAgnosticAddListener(emitter, \"error\", handler, flags);\n  }\n}\nfunction _eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === \"function\") {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === \"function\") {\n    emitter.addEventListener(name, listener);\n  } else {\n    throw new TypeError(\n      'The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter\n    );\n  }\n}\n", "import { EventEmitter as _EventEmitter, once as _once } from \"./_events.mjs\";\nexport const EventEmitter = globalThis.EventEmitter || _EventEmitter;\nexport const once = _once;\nexport default {\n  EventEmitter,\n  once\n};\n", "import { createNotImplementedError } from \"../../_internal/utils.mjs\";\nimport { EventEmitter } from \"../events/index.mjs\";\nexport class _Readable extends EventEmitter {\n  __unenv__ = true;\n  readableEncoding = null;\n  readableEnded = true;\n  readableFlowing = false;\n  readableHighWaterMark = 0;\n  readableLength = 0;\n  readableObjectMode = false;\n  readableAborted = false;\n  readableDidRead = false;\n  closed = false;\n  errored = null;\n  readable = false;\n  destroyed = false;\n  static from(_iterable, options) {\n    return new _Readable(options);\n  }\n  constructor(_opts) {\n    super();\n  }\n  _read(_size) {\n  }\n  read(_size) {\n  }\n  setEncoding(_encoding) {\n    return this;\n  }\n  pause() {\n    return this;\n  }\n  resume() {\n    return this;\n  }\n  isPaused() {\n    return true;\n  }\n  unpipe(_destination) {\n    return this;\n  }\n  unshift(_chunk, _encoding) {\n  }\n  wrap(_oldStream) {\n    return this;\n  }\n  push(_chunk, _encoding) {\n    return false;\n  }\n  _destroy(_error, _callback) {\n    this.removeAllListeners();\n  }\n  destroy(error) {\n    this.destroyed = true;\n    this._destroy(error);\n    return this;\n  }\n  pipe(_destenition, _options) {\n    return {};\n  }\n  compose(stream, options) {\n    throw new Error(\"[unenv] Method not implemented.\");\n  }\n  [Symbol.asyncDispose]() {\n    this.destroy();\n    return Promise.resolve();\n  }\n  async *[Symbol.asyncIterator]() {\n    throw createNotImplementedError(\"Readable.asyncIterator\");\n  }\n  iterator(options) {\n    throw createNotImplementedError(\"Readable.iterator\");\n  }\n  map(fn, options) {\n    throw createNotImplementedError(\"Readable.map\");\n  }\n  filter(fn, options) {\n    throw createNotImplementedError(\"Readable.filter\");\n  }\n  forEach(fn, options) {\n    throw createNotImplementedError(\"Readable.forEach\");\n  }\n  reduce(fn, initialValue, options) {\n    throw createNotImplementedError(\"Readable.reduce\");\n  }\n  find(fn, options) {\n    throw createNotImplementedError(\"Readable.find\");\n  }\n  findIndex(fn, options) {\n    throw createNotImplementedError(\"Readable.findIndex\");\n  }\n  some(fn, options) {\n    throw createNotImplementedError(\"Readable.some\");\n  }\n  toArray(options) {\n    throw createNotImplementedError(\"Readable.toArray\");\n  }\n  every(fn, options) {\n    throw createNotImplementedError(\"Readable.every\");\n  }\n  flatMap(fn, options) {\n    throw createNotImplementedError(\"Readable.flatMap\");\n  }\n  drop(limit, options) {\n    throw createNotImplementedError(\"Readable.drop\");\n  }\n  take(limit, options) {\n    throw createNotImplementedError(\"Readable.take\");\n  }\n  asIndexedPairs(options) {\n    throw createNotImplementedError(\"Readable.asIndexedPairs\");\n  }\n}\nexport const Readable = globalThis.Readable || _Readable;\n", "import { EventEmitter } from \"../events/index.mjs\";\nclass _Writable extends EventEmitter {\n  __unenv__ = true;\n  writable = true;\n  writableEnded = false;\n  writableFinished = false;\n  writableHighWaterMark = 0;\n  writableLength = 0;\n  writableObjectMode = false;\n  writableCorked = 0;\n  closed = false;\n  errored = null;\n  writableNeedDrain = false;\n  destroyed = false;\n  _data;\n  _encoding = \"utf-8\";\n  constructor(_opts) {\n    super();\n  }\n  pipe(_destenition, _options) {\n    return {};\n  }\n  _write(chunk, encoding, callback) {\n    if (this.writableEnded) {\n      if (callback) {\n        callback();\n      }\n      return;\n    }\n    if (this._data === void 0) {\n      this._data = chunk;\n    } else {\n      const a = typeof this._data === \"string\" ? Buffer.from(this._data, this._encoding || encoding || \"utf8\") : this._data;\n      const b = typeof chunk === \"string\" ? Buffer.from(chunk, encoding || this._encoding || \"utf8\") : chunk;\n      this._data = Buffer.concat([a, b]);\n    }\n    this._encoding = encoding;\n    if (callback) {\n      callback();\n    }\n  }\n  _writev(_chunks, _callback) {\n  }\n  _destroy(_error, _callback) {\n  }\n  _final(_callback) {\n  }\n  write(chunk, arg2, arg3) {\n    const encoding = typeof arg2 === \"string\" ? this._encoding : \"utf-8\";\n    const cb = typeof arg2 === \"function\" ? arg2 : typeof arg3 === \"function\" ? arg3 : void 0;\n    this._write(chunk, encoding, cb);\n    return true;\n  }\n  setDefaultEncoding(_encoding) {\n    return this;\n  }\n  end(arg1, arg2, arg3) {\n    const callback = typeof arg1 === \"function\" ? arg1 : typeof arg2 === \"function\" ? arg2 : typeof arg3 === \"function\" ? arg3 : void 0;\n    if (this.writableEnded) {\n      if (callback) {\n        callback();\n      }\n      return this;\n    }\n    const data = arg1 === callback ? void 0 : arg1;\n    if (data) {\n      const encoding = arg2 === callback ? void 0 : arg2;\n      this.write(data, encoding, callback);\n    }\n    this.writableEnded = true;\n    this.writableFinished = true;\n    this.emit(\"close\");\n    this.emit(\"finish\");\n    return this;\n  }\n  cork() {\n  }\n  uncork() {\n  }\n  destroy(_error) {\n    this.destroyed = true;\n    delete this._data;\n    this.removeAllListeners();\n    return this;\n  }\n  compose(stream, options) {\n    throw new Error(\"[h3] Method not implemented.\");\n  }\n}\nexport const Writable = globalThis.Writable || _Writable;\n", "import { mergeFns } from \"../../_internal/utils.mjs\";\nimport { Readable } from \"./readable.mjs\";\nimport { Writable } from \"./writable.mjs\";\nconst __Duplex = class {\n  allowHalfOpen = true;\n  _destroy;\n  constructor(readable = new Readable(), writable = new Writable()) {\n    Object.assign(this, readable);\n    Object.assign(this, writable);\n    this._destroy = mergeFns(readable._destroy, writable._destroy);\n  }\n};\nfunction getDuplex() {\n  Object.assign(__Duplex.prototype, Readable.prototype);\n  Object.assign(__Duplex.prototype, Writable.prototype);\n  return __Duplex;\n}\nexport const _Duplex = /* @__PURE__ */ getDuplex();\nexport const Duplex = globalThis.Duplex || _Duplex;\n", "import { Duplex } from \"../stream/duplex.mjs\";\nexport class Socket extends Duplex {\n  __unenv__ = true;\n  bufferSize = 0;\n  bytesRead = 0;\n  bytesWritten = 0;\n  connecting = false;\n  destroyed = false;\n  pending = false;\n  localAddress = \"\";\n  localPort = 0;\n  remoteAddress = \"\";\n  remoteFamily = \"\";\n  remotePort = 0;\n  autoSelectFamilyAttemptedAddresses = [];\n  readyState = \"readOnly\";\n  constructor(_options) {\n    super();\n  }\n  write(_buffer, _arg1, _arg2) {\n    return false;\n  }\n  connect(_arg1, _arg2, _arg3) {\n    return this;\n  }\n  end(_arg1, _arg2, _arg3) {\n    return this;\n  }\n  setEncoding(_encoding) {\n    return this;\n  }\n  pause() {\n    return this;\n  }\n  resume() {\n    return this;\n  }\n  setTimeout(_timeout, _callback) {\n    return this;\n  }\n  setNoDelay(_noDelay) {\n    return this;\n  }\n  setKeepAlive(_enable, _initialDelay) {\n    return this;\n  }\n  address() {\n    return {};\n  }\n  unref() {\n    return this;\n  }\n  ref() {\n    return this;\n  }\n  destroySoon() {\n    this.destroy();\n  }\n  resetAndDestroy() {\n    const err = new Error(\"ERR_SOCKET_CLOSED\");\n    err.code = \"ERR_SOCKET_CLOSED\";\n    this.destroy(err);\n    return this;\n  }\n}\nexport class SocketAddress {\n  __unenv__ = true;\n  address;\n  family;\n  port;\n  flowlabel;\n  constructor(options) {\n    this.address = options.address;\n    this.family = options.family;\n    this.port = options.port;\n    this.flowlabel = options.flowlabel;\n  }\n}\n", "import { Socket } from \"../net/socket.mjs\";\nimport { Readable } from \"../stream/readable.mjs\";\nimport { rawHeaders } from \"../../_internal/utils.mjs\";\nexport class IncomingMessage extends Readable {\n  __unenv__ = {};\n  aborted = false;\n  httpVersion = \"1.1\";\n  httpVersionMajor = 1;\n  httpVersionMinor = 1;\n  complete = true;\n  connection;\n  socket;\n  headers = {};\n  trailers = {};\n  method = \"GET\";\n  url = \"/\";\n  statusCode = 200;\n  statusMessage = \"\";\n  closed = false;\n  errored = null;\n  readable = false;\n  constructor(socket) {\n    super();\n    this.socket = this.connection = socket || new Socket();\n  }\n  get rawHeaders() {\n    return rawHeaders(this.headers);\n  }\n  get rawTrailers() {\n    return [];\n  }\n  setTimeout(_msecs, _callback) {\n    return this;\n  }\n  get headersDistinct() {\n    return _distinct(this.headers);\n  }\n  get trailersDistinct() {\n    return _distinct(this.trailers);\n  }\n}\nfunction _distinct(obj) {\n  const d = {};\n  for (const [key, value] of Object.entries(obj)) {\n    if (key) {\n      d[key] = (Array.isArray(value) ? value : [value]).filter(\n        Boolean\n      );\n    }\n  }\n  return d;\n}\n", "import { Writable } from \"../stream/writable.mjs\";\nexport class ServerResponse extends Writable {\n  __unenv__ = true;\n  statusCode = 200;\n  statusMessage = \"\";\n  upgrading = false;\n  chunkedEncoding = false;\n  shouldKeepAlive = false;\n  useChunkedEncodingByDefault = false;\n  sendDate = false;\n  finished = false;\n  headersSent = false;\n  strictContentLength = false;\n  connection = null;\n  socket = null;\n  req;\n  _headers = {};\n  constructor(req) {\n    super();\n    this.req = req;\n  }\n  assignSocket(socket) {\n    socket._httpMessage = this;\n    this.socket = socket;\n    this.connection = socket;\n    this.emit(\"socket\", socket);\n    this._flush();\n  }\n  _flush() {\n    this.flushHeaders();\n  }\n  detachSocket(_socket) {\n  }\n  writeContinue(_callback) {\n  }\n  writeHead(statusCode, arg1, arg2) {\n    if (statusCode) {\n      this.statusCode = statusCode;\n    }\n    if (typeof arg1 === \"string\") {\n      this.statusMessage = arg1;\n      arg1 = void 0;\n    }\n    const headers = arg2 || arg1;\n    if (headers) {\n      if (Array.isArray(headers)) {\n      } else {\n        for (const key in headers) {\n          this.setHeader(key, headers[key]);\n        }\n      }\n    }\n    this.headersSent = true;\n    return this;\n  }\n  writeProcessing() {\n  }\n  setTimeout(_msecs, _callback) {\n    return this;\n  }\n  appendHeader(name, value) {\n    name = name.toLowerCase();\n    const current = this._headers[name];\n    const all = [\n      ...Array.isArray(current) ? current : [current],\n      ...Array.isArray(value) ? value : [value]\n    ].filter(Boolean);\n    this._headers[name] = all.length > 1 ? all : all[0];\n    return this;\n  }\n  setHeader(name, value) {\n    this._headers[name.toLowerCase()] = value;\n    return this;\n  }\n  getHeader(name) {\n    return this._headers[name.toLowerCase()];\n  }\n  getHeaders() {\n    return this._headers;\n  }\n  getHeaderNames() {\n    return Object.keys(this._headers);\n  }\n  hasHeader(name) {\n    return name.toLowerCase() in this._headers;\n  }\n  removeHeader(name) {\n    delete this._headers[name.toLowerCase()];\n  }\n  addTrailers(_headers) {\n  }\n  flushHeaders() {\n  }\n  writeEarlyHints(_headers, cb) {\n    if (typeof cb === \"function\") {\n      cb();\n    }\n  }\n}\n", "import { withoutTrailingSlash, withoutBase, getQuery as getQuery$1, decode, decodePath, withLeadingSlash, parseURL, joinURL } from 'ufo';\nimport { parse as parse$1, serialize } from 'cookie-es';\nimport { objectHash } from 'ohash';\nimport { createRouter as createRouter$1, toRouteMatcher } from 'radix3';\nimport destr from 'destr';\nimport { defu } from 'defu';\nimport crypto from 'uncrypto';\nimport { seal, defaults, unseal } from 'iron-webcrypto';\nimport { IncomingMessage } from 'unenv/runtime/node/http/_request';\nimport { ServerResponse } from 'unenv/runtime/node/http/_response';\n\nfunction useBase(base, handler) {\n  base = withoutTrailingSlash(base);\n  if (!base || base === \"/\") {\n    return handler;\n  }\n  return eventHandler(async (event) => {\n    event.node.req.originalUrl = event.node.req.originalUrl || event.node.req.url || \"/\";\n    const _path = event._path || event.node.req.url || \"/\";\n    event._path = withoutBase(event.path || \"/\", base);\n    event.node.req.url = event._path;\n    try {\n      return await handler(event);\n    } finally {\n      event._path = event.node.req.url = _path;\n    }\n  });\n}\n\nfunction hasProp(obj, prop) {\n  try {\n    return prop in obj;\n  } catch {\n    return false;\n  }\n}\n\nvar __defProp$2 = Object.defineProperty;\nvar __defNormalProp$2 = (obj, key, value) => key in obj ? __defProp$2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField$2 = (obj, key, value) => {\n  __defNormalProp$2(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nclass H3Error extends Error {\n  constructor(message, opts = {}) {\n    super(message, opts);\n    __publicField$2(this, \"statusCode\", 500);\n    __publicField$2(this, \"fatal\", false);\n    __publicField$2(this, \"unhandled\", false);\n    __publicField$2(this, \"statusMessage\");\n    __publicField$2(this, \"data\");\n    __publicField$2(this, \"cause\");\n    if (opts.cause && !this.cause) {\n      this.cause = opts.cause;\n    }\n  }\n  toJSON() {\n    const obj = {\n      message: this.message,\n      statusCode: sanitizeStatusCode(this.statusCode, 500)\n    };\n    if (this.statusMessage) {\n      obj.statusMessage = sanitizeStatusMessage(this.statusMessage);\n    }\n    if (this.data !== void 0) {\n      obj.data = this.data;\n    }\n    return obj;\n  }\n}\n__publicField$2(H3Error, \"__h3_error__\", true);\nfunction createError(input) {\n  if (typeof input === \"string\") {\n    return new H3Error(input);\n  }\n  if (isError(input)) {\n    return input;\n  }\n  const err = new H3Error(input.message ?? input.statusMessage ?? \"\", {\n    cause: input.cause || input\n  });\n  if (hasProp(input, \"stack\")) {\n    try {\n      Object.defineProperty(err, \"stack\", {\n        get() {\n          return input.stack;\n        }\n      });\n    } catch {\n      try {\n        err.stack = input.stack;\n      } catch {\n      }\n    }\n  }\n  if (input.data) {\n    err.data = input.data;\n  }\n  if (input.statusCode) {\n    err.statusCode = sanitizeStatusCode(input.statusCode, err.statusCode);\n  } else if (input.status) {\n    err.statusCode = sanitizeStatusCode(input.status, err.statusCode);\n  }\n  if (input.statusMessage) {\n    err.statusMessage = input.statusMessage;\n  } else if (input.statusText) {\n    err.statusMessage = input.statusText;\n  }\n  if (err.statusMessage) {\n    const originalMessage = err.statusMessage;\n    const sanitizedMessage = sanitizeStatusMessage(err.statusMessage);\n    if (sanitizedMessage !== originalMessage) {\n      console.warn(\n        \"[h3] Please prefer using `message` for longer error messages instead of `statusMessage`. In the future, `statusMessage` will be sanitized by default.\"\n      );\n    }\n  }\n  if (input.fatal !== void 0) {\n    err.fatal = input.fatal;\n  }\n  if (input.unhandled !== void 0) {\n    err.unhandled = input.unhandled;\n  }\n  return err;\n}\nfunction sendError(event, error, debug) {\n  if (event.handled) {\n    return;\n  }\n  const h3Error = isError(error) ? error : createError(error);\n  const responseBody = {\n    statusCode: h3Error.statusCode,\n    statusMessage: h3Error.statusMessage,\n    stack: [],\n    data: h3Error.data\n  };\n  if (debug) {\n    responseBody.stack = (h3Error.stack || \"\").split(\"\\n\").map((l) => l.trim());\n  }\n  if (event.handled) {\n    return;\n  }\n  const _code = Number.parseInt(h3Error.statusCode);\n  setResponseStatus(event, _code, h3Error.statusMessage);\n  event.node.res.setHeader(\"content-type\", MIMES.json);\n  event.node.res.end(JSON.stringify(responseBody, void 0, 2));\n}\nfunction isError(input) {\n  return input?.constructor?.__h3_error__ === true;\n}\n\nfunction parse(multipartBodyBuffer, boundary) {\n  let lastline = \"\";\n  let state = 0 /* INIT */;\n  let buffer = [];\n  const allParts = [];\n  let currentPartHeaders = [];\n  for (let i = 0; i < multipartBodyBuffer.length; i++) {\n    const prevByte = i > 0 ? multipartBodyBuffer[i - 1] : null;\n    const currByte = multipartBodyBuffer[i];\n    const newLineChar = currByte === 10 || currByte === 13;\n    if (!newLineChar) {\n      lastline += String.fromCodePoint(currByte);\n    }\n    const newLineDetected = currByte === 10 && prevByte === 13;\n    if (0 /* INIT */ === state && newLineDetected) {\n      if (\"--\" + boundary === lastline) {\n        state = 1 /* READING_HEADERS */;\n      }\n      lastline = \"\";\n    } else if (1 /* READING_HEADERS */ === state && newLineDetected) {\n      if (lastline.length > 0) {\n        const i2 = lastline.indexOf(\":\");\n        if (i2 > 0) {\n          const name = lastline.slice(0, i2).toLowerCase();\n          const value = lastline.slice(i2 + 1).trim();\n          currentPartHeaders.push([name, value]);\n        }\n      } else {\n        state = 2 /* READING_DATA */;\n        buffer = [];\n      }\n      lastline = \"\";\n    } else if (2 /* READING_DATA */ === state) {\n      if (lastline.length > boundary.length + 4) {\n        lastline = \"\";\n      }\n      if (\"--\" + boundary === lastline) {\n        const j = buffer.length - lastline.length;\n        const part = buffer.slice(0, j - 1);\n        allParts.push(process(part, currentPartHeaders));\n        buffer = [];\n        currentPartHeaders = [];\n        lastline = \"\";\n        state = 3 /* READING_PART_SEPARATOR */;\n      } else {\n        buffer.push(currByte);\n      }\n      if (newLineDetected) {\n        lastline = \"\";\n      }\n    } else if (3 /* READING_PART_SEPARATOR */ === state && newLineDetected) {\n      state = 1 /* READING_HEADERS */;\n    }\n  }\n  return allParts;\n}\nfunction process(data, headers) {\n  const dataObj = {};\n  const contentDispositionHeader = headers.find((h) => h[0] === \"content-disposition\")?.[1] || \"\";\n  for (const i of contentDispositionHeader.split(\";\")) {\n    const s = i.split(\"=\");\n    if (s.length !== 2) {\n      continue;\n    }\n    const key = (s[0] || \"\").trim();\n    if (key === \"name\" || key === \"filename\") {\n      const _value = (s[1] || \"\").trim().replace(/\"/g, \"\");\n      dataObj[key] = Buffer.from(_value, \"latin1\").toString(\"utf8\");\n    }\n  }\n  const contentType = headers.find((h) => h[0] === \"content-type\")?.[1] || \"\";\n  if (contentType) {\n    dataObj.type = contentType;\n  }\n  dataObj.data = Buffer.from(data);\n  return dataObj;\n}\n\nasync function validateData(data, fn) {\n  try {\n    const res = await fn(data);\n    if (res === false) {\n      throw createValidationError();\n    }\n    if (res === true) {\n      return data;\n    }\n    return res ?? data;\n  } catch (error) {\n    throw createValidationError(error);\n  }\n}\nfunction createValidationError(validateError) {\n  throw createError({\n    status: 400,\n    statusMessage: \"Validation Error\",\n    message: validateError?.message || \"Validation Error\",\n    data: validateError\n  });\n}\n\nfunction getQuery(event) {\n  return getQuery$1(event.path || \"\");\n}\nfunction getValidatedQuery(event, validate) {\n  const query = getQuery(event);\n  return validateData(query, validate);\n}\nfunction getRouterParams(event, opts = {}) {\n  let params = event.context.params || {};\n  if (opts.decode) {\n    params = { ...params };\n    for (const key in params) {\n      params[key] = decode(params[key]);\n    }\n  }\n  return params;\n}\nfunction getValidatedRouterParams(event, validate, opts = {}) {\n  const routerParams = getRouterParams(event, opts);\n  return validateData(routerParams, validate);\n}\nfunction getRouterParam(event, name, opts = {}) {\n  const params = getRouterParams(event, opts);\n  return params[name];\n}\nfunction getMethod(event, defaultMethod = \"GET\") {\n  return (event.node.req.method || defaultMethod).toUpperCase();\n}\nfunction isMethod(event, expected, allowHead) {\n  if (allowHead && event.method === \"HEAD\") {\n    return true;\n  }\n  if (typeof expected === \"string\") {\n    if (event.method === expected) {\n      return true;\n    }\n  } else if (expected.includes(event.method)) {\n    return true;\n  }\n  return false;\n}\nfunction assertMethod(event, expected, allowHead) {\n  if (!isMethod(event, expected, allowHead)) {\n    throw createError({\n      statusCode: 405,\n      statusMessage: \"HTTP method is not allowed.\"\n    });\n  }\n}\nfunction getRequestHeaders(event) {\n  const _headers = {};\n  for (const key in event.node.req.headers) {\n    const val = event.node.req.headers[key];\n    _headers[key] = Array.isArray(val) ? val.filter(Boolean).join(\", \") : val;\n  }\n  return _headers;\n}\nconst getHeaders = getRequestHeaders;\nfunction getRequestHeader(event, name) {\n  const headers = getRequestHeaders(event);\n  const value = headers[name.toLowerCase()];\n  return value;\n}\nconst getHeader = getRequestHeader;\nfunction getRequestHost(event, opts = {}) {\n  if (opts.xForwardedHost) {\n    const xForwardedHost = event.node.req.headers[\"x-forwarded-host\"];\n    if (xForwardedHost) {\n      return xForwardedHost;\n    }\n  }\n  return event.node.req.headers.host || \"localhost\";\n}\nfunction getRequestProtocol(event, opts = {}) {\n  if (opts.xForwardedProto !== false && event.node.req.headers[\"x-forwarded-proto\"] === \"https\") {\n    return \"https\";\n  }\n  return event.node.req.connection?.encrypted ? \"https\" : \"http\";\n}\nconst DOUBLE_SLASH_RE = /[/\\\\]{2,}/g;\nfunction getRequestPath(event) {\n  const path = (event.node.req.url || \"/\").replace(DOUBLE_SLASH_RE, \"/\");\n  return path;\n}\nfunction getRequestURL(event, opts = {}) {\n  const host = getRequestHost(event, opts);\n  const protocol = getRequestProtocol(event);\n  const path = (event.node.req.originalUrl || event.path).replace(\n    /^[/\\\\]+/g,\n    \"/\"\n  );\n  return new URL(path, `${protocol}://${host}`);\n}\nfunction toWebRequest(event) {\n  return event.web?.request || new Request(getRequestURL(event), {\n    // @ts-ignore Undici option\n    duplex: \"half\",\n    method: event.method,\n    headers: event.headers,\n    body: getRequestWebStream(event)\n  });\n}\nfunction getRequestIP(event, opts = {}) {\n  if (event.context.clientAddress) {\n    return event.context.clientAddress;\n  }\n  if (opts.xForwardedFor) {\n    const xForwardedFor = getRequestHeader(event, \"x-forwarded-for\")?.split(\",\").shift()?.trim();\n    if (xForwardedFor) {\n      return xForwardedFor;\n    }\n  }\n  if (event.node.req.socket.remoteAddress) {\n    return event.node.req.socket.remoteAddress;\n  }\n}\n\nconst RawBodySymbol = Symbol.for(\"h3RawBody\");\nconst ParsedBodySymbol = Symbol.for(\"h3ParsedBody\");\nconst PayloadMethods$1 = [\"PATCH\", \"POST\", \"PUT\", \"DELETE\"];\nfunction readRawBody(event, encoding = \"utf8\") {\n  assertMethod(event, PayloadMethods$1);\n  const _rawBody = event._requestBody || event.web?.request?.body || event.node.req[RawBodySymbol] || event.node.req.rawBody || event.node.req.body;\n  if (_rawBody) {\n    const promise2 = Promise.resolve(_rawBody).then((_resolved) => {\n      if (Buffer.isBuffer(_resolved)) {\n        return _resolved;\n      }\n      if (typeof _resolved.pipeTo === \"function\") {\n        return new Promise((resolve, reject) => {\n          const chunks = [];\n          _resolved.pipeTo(\n            new WritableStream({\n              write(chunk) {\n                chunks.push(chunk);\n              },\n              close() {\n                resolve(Buffer.concat(chunks));\n              },\n              abort(reason) {\n                reject(reason);\n              }\n            })\n          ).catch(reject);\n        });\n      } else if (typeof _resolved.pipe === \"function\") {\n        return new Promise((resolve, reject) => {\n          const chunks = [];\n          _resolved.on(\"data\", (chunk) => {\n            chunks.push(chunk);\n          }).on(\"end\", () => {\n            resolve(Buffer.concat(chunks));\n          }).on(\"error\", reject);\n        });\n      }\n      if (_resolved.constructor === Object) {\n        return Buffer.from(JSON.stringify(_resolved));\n      }\n      return Buffer.from(_resolved);\n    });\n    return encoding ? promise2.then((buff) => buff.toString(encoding)) : promise2;\n  }\n  if (!Number.parseInt(event.node.req.headers[\"content-length\"] || \"\")) {\n    return Promise.resolve(void 0);\n  }\n  const promise = event.node.req[RawBodySymbol] = new Promise(\n    (resolve, reject) => {\n      const bodyData = [];\n      event.node.req.on(\"error\", (err) => {\n        reject(err);\n      }).on(\"data\", (chunk) => {\n        bodyData.push(chunk);\n      }).on(\"end\", () => {\n        resolve(Buffer.concat(bodyData));\n      });\n    }\n  );\n  const result = encoding ? promise.then((buff) => buff.toString(encoding)) : promise;\n  return result;\n}\nasync function readBody(event, options = {}) {\n  const request = event.node.req;\n  if (hasProp(request, ParsedBodySymbol)) {\n    return request[ParsedBodySymbol];\n  }\n  const contentType = request.headers[\"content-type\"] || \"\";\n  const body = await readRawBody(event);\n  let parsed;\n  if (contentType === \"application/json\") {\n    parsed = _parseJSON(body, options.strict ?? true);\n  } else if (contentType.startsWith(\"application/x-www-form-urlencoded\")) {\n    parsed = _parseURLEncodedBody(body);\n  } else if (contentType.startsWith(\"text/\")) {\n    parsed = body;\n  } else {\n    parsed = _parseJSON(body, options.strict ?? false);\n  }\n  request[ParsedBodySymbol] = parsed;\n  return parsed;\n}\nasync function readValidatedBody(event, validate) {\n  const _body = await readBody(event, { strict: true });\n  return validateData(_body, validate);\n}\nasync function readMultipartFormData(event) {\n  const contentType = getRequestHeader(event, \"content-type\");\n  if (!contentType || !contentType.startsWith(\"multipart/form-data\")) {\n    return;\n  }\n  const boundary = contentType.match(/boundary=([^;]*)(;|$)/i)?.[1];\n  if (!boundary) {\n    return;\n  }\n  const body = await readRawBody(event, false);\n  if (!body) {\n    return;\n  }\n  return parse(body, boundary);\n}\nasync function readFormData(event) {\n  return await toWebRequest(event).formData();\n}\nfunction getRequestWebStream(event) {\n  if (!PayloadMethods$1.includes(event.method)) {\n    return;\n  }\n  const bodyStream = event.web?.request?.body || event._requestBody;\n  if (bodyStream) {\n    return bodyStream;\n  }\n  const _hasRawBody = RawBodySymbol in event.node.req || \"rawBody\" in event.node.req || \"body\" in event.node.req || \"__unenv__\" in event.node.req;\n  if (_hasRawBody) {\n    return new ReadableStream({\n      async start(controller) {\n        const _rawBody = await readRawBody(event, false);\n        if (_rawBody) {\n          controller.enqueue(_rawBody);\n        }\n        controller.close();\n      }\n    });\n  }\n  return new ReadableStream({\n    start: (controller) => {\n      event.node.req.on(\"data\", (chunk) => {\n        controller.enqueue(chunk);\n      });\n      event.node.req.on(\"end\", () => {\n        controller.close();\n      });\n      event.node.req.on(\"error\", (err) => {\n        controller.error(err);\n      });\n    }\n  });\n}\nfunction _parseJSON(body = \"\", strict) {\n  if (!body) {\n    return void 0;\n  }\n  try {\n    return destr(body, { strict });\n  } catch {\n    throw createError({\n      statusCode: 400,\n      statusMessage: \"Bad Request\",\n      message: \"Invalid JSON body\"\n    });\n  }\n}\nfunction _parseURLEncodedBody(body) {\n  const form = new URLSearchParams(body);\n  const parsedForm = /* @__PURE__ */ Object.create(null);\n  for (const [key, value] of form.entries()) {\n    if (hasProp(parsedForm, key)) {\n      if (!Array.isArray(parsedForm[key])) {\n        parsedForm[key] = [parsedForm[key]];\n      }\n      parsedForm[key].push(value);\n    } else {\n      parsedForm[key] = value;\n    }\n  }\n  return parsedForm;\n}\n\nfunction handleCacheHeaders(event, opts) {\n  const cacheControls = [\"public\", ...opts.cacheControls || []];\n  let cacheMatched = false;\n  if (opts.maxAge !== void 0) {\n    cacheControls.push(`max-age=${+opts.maxAge}`, `s-maxage=${+opts.maxAge}`);\n  }\n  if (opts.modifiedTime) {\n    const modifiedTime = new Date(opts.modifiedTime);\n    const ifModifiedSince = event.node.req.headers[\"if-modified-since\"];\n    event.node.res.setHeader(\"last-modified\", modifiedTime.toUTCString());\n    if (ifModifiedSince && new Date(ifModifiedSince) >= opts.modifiedTime) {\n      cacheMatched = true;\n    }\n  }\n  if (opts.etag) {\n    event.node.res.setHeader(\"etag\", opts.etag);\n    const ifNonMatch = event.node.req.headers[\"if-none-match\"];\n    if (ifNonMatch === opts.etag) {\n      cacheMatched = true;\n    }\n  }\n  event.node.res.setHeader(\"cache-control\", cacheControls.join(\", \"));\n  if (cacheMatched) {\n    event.node.res.statusCode = 304;\n    if (!event.handled) {\n      event.node.res.end();\n    }\n    return true;\n  }\n  return false;\n}\n\nconst MIMES = {\n  html: \"text/html\",\n  json: \"application/json\"\n};\n\nconst DISALLOWED_STATUS_CHARS = /[^\\u0009\\u0020-\\u007E]/g;\nfunction sanitizeStatusMessage(statusMessage = \"\") {\n  return statusMessage.replace(DISALLOWED_STATUS_CHARS, \"\");\n}\nfunction sanitizeStatusCode(statusCode, defaultStatusCode = 200) {\n  if (!statusCode) {\n    return defaultStatusCode;\n  }\n  if (typeof statusCode === \"string\") {\n    statusCode = Number.parseInt(statusCode, 10);\n  }\n  if (statusCode < 100 || statusCode > 999) {\n    return defaultStatusCode;\n  }\n  return statusCode;\n}\n\nfunction parseCookies(event) {\n  return parse$1(event.node.req.headers.cookie || \"\");\n}\nfunction getCookie(event, name) {\n  return parseCookies(event)[name];\n}\nfunction setCookie(event, name, value, serializeOptions) {\n  serializeOptions = { path: \"/\", ...serializeOptions };\n  const cookieStr = serialize(name, value, serializeOptions);\n  let setCookies = event.node.res.getHeader(\"set-cookie\");\n  if (!Array.isArray(setCookies)) {\n    setCookies = [setCookies];\n  }\n  const _optionsHash = objectHash(serializeOptions);\n  setCookies = setCookies.filter((cookieValue) => {\n    return cookieValue && _optionsHash !== objectHash(parse$1(cookieValue));\n  });\n  event.node.res.setHeader(\"set-cookie\", [...setCookies, cookieStr]);\n}\nfunction deleteCookie(event, name, serializeOptions) {\n  setCookie(event, name, \"\", {\n    ...serializeOptions,\n    maxAge: 0\n  });\n}\nfunction splitCookiesString(cookiesString) {\n  if (Array.isArray(cookiesString)) {\n    return cookiesString.flatMap((c) => splitCookiesString(c));\n  }\n  if (typeof cookiesString !== \"string\") {\n    return [];\n  }\n  const cookiesStrings = [];\n  let pos = 0;\n  let start;\n  let ch;\n  let lastComma;\n  let nextStart;\n  let cookiesSeparatorFound;\n  const skipWhitespace = () => {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  };\n  const notSpecialChar = () => {\n    ch = cookiesString.charAt(pos);\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  };\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        lastComma = pos;\n        pos += 1;\n        skipWhitespace();\n        nextStart = pos;\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          cookiesSeparatorFound = true;\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.slice(start, lastComma));\n          start = pos;\n        } else {\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.slice(start, cookiesString.length));\n    }\n  }\n  return cookiesStrings;\n}\n\nfunction serializeIterableValue(value) {\n  switch (typeof value) {\n    case \"string\": {\n      return value;\n    }\n    case \"boolean\":\n    case \"number\":\n    case \"bigint\":\n    case \"symbol\": {\n      return value.toString();\n    }\n    case \"function\":\n    case \"undefined\": {\n      return void 0;\n    }\n    case \"object\": {\n      if (value instanceof Uint8Array) {\n        return value;\n      }\n      return JSON.stringify(value);\n    }\n  }\n}\nfunction coerceIterable(iterable) {\n  if (typeof iterable === \"function\") {\n    iterable = iterable();\n  }\n  if (Symbol.iterator in iterable) {\n    return iterable[Symbol.iterator]();\n  }\n  if (Symbol.asyncIterator in iterable) {\n    return iterable[Symbol.asyncIterator]();\n  }\n  return iterable;\n}\n\nconst defer = typeof setImmediate === \"undefined\" ? (fn) => fn() : setImmediate;\nfunction send(event, data, type) {\n  if (type) {\n    defaultContentType(event, type);\n  }\n  return new Promise((resolve) => {\n    defer(() => {\n      if (!event.handled) {\n        event.node.res.end(data);\n      }\n      resolve();\n    });\n  });\n}\nfunction sendNoContent(event, code) {\n  if (event.handled) {\n    return;\n  }\n  if (!code && event.node.res.statusCode !== 200) {\n    code = event.node.res.statusCode;\n  }\n  const _code = sanitizeStatusCode(code, 204);\n  if (_code === 204) {\n    event.node.res.removeHeader(\"content-length\");\n  }\n  event.node.res.writeHead(_code);\n  event.node.res.end();\n}\nfunction setResponseStatus(event, code, text) {\n  if (code) {\n    event.node.res.statusCode = sanitizeStatusCode(\n      code,\n      event.node.res.statusCode\n    );\n  }\n  if (text) {\n    event.node.res.statusMessage = sanitizeStatusMessage(text);\n  }\n}\nfunction getResponseStatus(event) {\n  return event.node.res.statusCode;\n}\nfunction getResponseStatusText(event) {\n  return event.node.res.statusMessage;\n}\nfunction defaultContentType(event, type) {\n  if (type && event.node.res.statusCode !== 304 && !event.node.res.getHeader(\"content-type\")) {\n    event.node.res.setHeader(\"content-type\", type);\n  }\n}\nfunction sendRedirect(event, location, code = 302) {\n  event.node.res.statusCode = sanitizeStatusCode(\n    code,\n    event.node.res.statusCode\n  );\n  event.node.res.setHeader(\"location\", location);\n  const encodedLoc = location.replace(/\"/g, \"%22\");\n  const html = `<!DOCTYPE html><html><head><meta http-equiv=\"refresh\" content=\"0; url=${encodedLoc}\"></head></html>`;\n  return send(event, html, MIMES.html);\n}\nfunction getResponseHeaders(event) {\n  return event.node.res.getHeaders();\n}\nfunction getResponseHeader(event, name) {\n  return event.node.res.getHeader(name);\n}\nfunction setResponseHeaders(event, headers) {\n  for (const [name, value] of Object.entries(headers)) {\n    event.node.res.setHeader(name, value);\n  }\n}\nconst setHeaders = setResponseHeaders;\nfunction setResponseHeader(event, name, value) {\n  event.node.res.setHeader(name, value);\n}\nconst setHeader = setResponseHeader;\nfunction appendResponseHeaders(event, headers) {\n  for (const [name, value] of Object.entries(headers)) {\n    appendResponseHeader(event, name, value);\n  }\n}\nconst appendHeaders = appendResponseHeaders;\nfunction appendResponseHeader(event, name, value) {\n  let current = event.node.res.getHeader(name);\n  if (!current) {\n    event.node.res.setHeader(name, value);\n    return;\n  }\n  if (!Array.isArray(current)) {\n    current = [current.toString()];\n  }\n  event.node.res.setHeader(name, [...current, value]);\n}\nconst appendHeader = appendResponseHeader;\nfunction clearResponseHeaders(event, headerNames) {\n  if (headerNames && headerNames.length > 0) {\n    for (const name of headerNames) {\n      removeResponseHeader(event, name);\n    }\n  } else {\n    for (const [name] of Object.entries(getResponseHeaders(event))) {\n      removeResponseHeader(event, name);\n    }\n  }\n}\nfunction removeResponseHeader(event, name) {\n  return event.node.res.removeHeader(name);\n}\nfunction isStream(data) {\n  if (!data || typeof data !== \"object\") {\n    return false;\n  }\n  if (typeof data.pipe === \"function\") {\n    if (typeof data._read === \"function\") {\n      return true;\n    }\n    if (typeof data.abort === \"function\") {\n      return true;\n    }\n  }\n  if (typeof data.pipeTo === \"function\") {\n    return true;\n  }\n  return false;\n}\nfunction isWebResponse(data) {\n  return typeof Response !== \"undefined\" && data instanceof Response;\n}\nfunction sendStream(event, stream) {\n  if (!stream || typeof stream !== \"object\") {\n    throw new Error(\"[h3] Invalid stream provided.\");\n  }\n  event.node.res._data = stream;\n  if (!event.node.res.socket) {\n    event._handled = true;\n    return Promise.resolve();\n  }\n  if (hasProp(stream, \"pipeTo\") && typeof stream.pipeTo === \"function\") {\n    return stream.pipeTo(\n      new WritableStream({\n        write(chunk) {\n          event.node.res.write(chunk);\n        }\n      })\n    ).then(() => {\n      event.node.res.end();\n    });\n  }\n  if (hasProp(stream, \"pipe\") && typeof stream.pipe === \"function\") {\n    return new Promise((resolve, reject) => {\n      stream.pipe(event.node.res);\n      if (stream.on) {\n        stream.on(\"end\", () => {\n          event.node.res.end();\n          resolve();\n        });\n        stream.on(\"error\", (error) => {\n          reject(error);\n        });\n      }\n      event.node.res.on(\"close\", () => {\n        if (stream.abort) {\n          stream.abort();\n        }\n      });\n    });\n  }\n  throw new Error(\"[h3] Invalid or incompatible stream provided.\");\n}\nconst noop = () => {\n};\nfunction writeEarlyHints(event, hints, cb = noop) {\n  if (!event.node.res.socket) {\n    cb();\n    return;\n  }\n  if (typeof hints === \"string\" || Array.isArray(hints)) {\n    hints = { link: hints };\n  }\n  if (hints.link) {\n    hints.link = Array.isArray(hints.link) ? hints.link : hints.link.split(\",\");\n  }\n  const headers = Object.entries(hints).map(\n    (e) => [e[0].toLowerCase(), e[1]]\n  );\n  if (headers.length === 0) {\n    cb();\n    return;\n  }\n  let hint = \"HTTP/1.1 103 Early Hints\";\n  if (hints.link) {\n    hint += `\\r\nLink: ${hints.link.join(\", \")}`;\n  }\n  for (const [header, value] of headers) {\n    if (header === \"link\") {\n      continue;\n    }\n    hint += `\\r\n${header}: ${value}`;\n  }\n  if (event.node.res.socket) {\n    event.node.res.socket.write(\n      `${hint}\\r\n\\r\n`,\n      \"utf8\",\n      cb\n    );\n  } else {\n    cb();\n  }\n}\nfunction sendWebResponse(event, response) {\n  for (const [key, value] of response.headers) {\n    if (key === \"set-cookie\") {\n      event.node.res.appendHeader(key, splitCookiesString(value));\n    } else {\n      event.node.res.setHeader(key, value);\n    }\n  }\n  if (response.status) {\n    event.node.res.statusCode = sanitizeStatusCode(\n      response.status,\n      event.node.res.statusCode\n    );\n  }\n  if (response.statusText) {\n    event.node.res.statusMessage = sanitizeStatusMessage(response.statusText);\n  }\n  if (response.redirected) {\n    event.node.res.setHeader(\"location\", response.url);\n  }\n  if (!response.body) {\n    event.node.res.end();\n    return;\n  }\n  return sendStream(event, response.body);\n}\nfunction sendIterable(event, iterable, options) {\n  const serializer = options?.serializer ?? serializeIterableValue;\n  const iterator = coerceIterable(iterable);\n  return sendStream(\n    event,\n    new ReadableStream({\n      async pull(controller) {\n        const { value, done } = await iterator.next();\n        if (value !== void 0) {\n          const chunk = serializer(value);\n          if (chunk !== void 0) {\n            controller.enqueue(chunk);\n          }\n        }\n        if (done) {\n          controller.close();\n        }\n      },\n      cancel() {\n        iterator.return?.();\n      }\n    })\n  );\n}\n\nfunction resolveCorsOptions(options = {}) {\n  const defaultOptions = {\n    origin: \"*\",\n    methods: \"*\",\n    allowHeaders: \"*\",\n    exposeHeaders: \"*\",\n    credentials: false,\n    maxAge: false,\n    preflight: {\n      statusCode: 204\n    }\n  };\n  return defu(options, defaultOptions);\n}\nfunction isPreflightRequest(event) {\n  const origin = getRequestHeader(event, \"origin\");\n  const accessControlRequestMethod = getRequestHeader(\n    event,\n    \"access-control-request-method\"\n  );\n  return event.method === \"OPTIONS\" && !!origin && !!accessControlRequestMethod;\n}\nfunction isCorsOriginAllowed(origin, options) {\n  const { origin: originOption } = options;\n  if (!origin || !originOption || originOption === \"*\" || originOption === \"null\") {\n    return true;\n  }\n  if (Array.isArray(originOption)) {\n    return originOption.some((_origin) => {\n      if (_origin instanceof RegExp) {\n        return _origin.test(origin);\n      }\n      return origin === _origin;\n    });\n  }\n  return originOption(origin);\n}\nfunction createOriginHeaders(event, options) {\n  const { origin: originOption } = options;\n  const origin = getRequestHeader(event, \"origin\");\n  if (!origin || !originOption || originOption === \"*\") {\n    return { \"access-control-allow-origin\": \"*\" };\n  }\n  if (typeof originOption === \"string\") {\n    return { \"access-control-allow-origin\": originOption, vary: \"origin\" };\n  }\n  return isCorsOriginAllowed(origin, options) ? { \"access-control-allow-origin\": origin, vary: \"origin\" } : {};\n}\nfunction createMethodsHeaders(options) {\n  const { methods } = options;\n  if (!methods) {\n    return {};\n  }\n  if (methods === \"*\") {\n    return { \"access-control-allow-methods\": \"*\" };\n  }\n  return methods.length > 0 ? { \"access-control-allow-methods\": methods.join(\",\") } : {};\n}\nfunction createCredentialsHeaders(options) {\n  const { credentials } = options;\n  if (credentials) {\n    return { \"access-control-allow-credentials\": \"true\" };\n  }\n  return {};\n}\nfunction createAllowHeaderHeaders(event, options) {\n  const { allowHeaders } = options;\n  if (!allowHeaders || allowHeaders === \"*\" || allowHeaders.length === 0) {\n    const header = getRequestHeader(event, \"access-control-request-headers\");\n    return header ? {\n      \"access-control-allow-headers\": header,\n      vary: \"access-control-request-headers\"\n    } : {};\n  }\n  return {\n    \"access-control-allow-headers\": allowHeaders.join(\",\"),\n    vary: \"access-control-request-headers\"\n  };\n}\nfunction createExposeHeaders(options) {\n  const { exposeHeaders } = options;\n  if (!exposeHeaders) {\n    return {};\n  }\n  if (exposeHeaders === \"*\") {\n    return { \"access-control-expose-headers\": exposeHeaders };\n  }\n  return { \"access-control-expose-headers\": exposeHeaders.join(\",\") };\n}\nfunction appendCorsPreflightHeaders(event, options) {\n  appendHeaders(event, createOriginHeaders(event, options));\n  appendHeaders(event, createCredentialsHeaders(options));\n  appendHeaders(event, createExposeHeaders(options));\n  appendHeaders(event, createMethodsHeaders(options));\n  appendHeaders(event, createAllowHeaderHeaders(event, options));\n}\nfunction appendCorsHeaders(event, options) {\n  appendHeaders(event, createOriginHeaders(event, options));\n  appendHeaders(event, createCredentialsHeaders(options));\n  appendHeaders(event, createExposeHeaders(options));\n}\n\nfunction handleCors(event, options) {\n  const _options = resolveCorsOptions(options);\n  if (isPreflightRequest(event)) {\n    appendCorsPreflightHeaders(event, options);\n    sendNoContent(event, _options.preflight.statusCode);\n    return true;\n  }\n  appendCorsHeaders(event, options);\n  return false;\n}\n\nasync function getRequestFingerprint(event, opts = {}) {\n  const fingerprint = [];\n  if (opts.ip !== false) {\n    fingerprint.push(\n      getRequestIP(event, { xForwardedFor: opts.xForwardedFor })\n    );\n  }\n  if (opts.method === true) {\n    fingerprint.push(event.method);\n  }\n  if (opts.path === true) {\n    fingerprint.push(event.path);\n  }\n  if (opts.userAgent === true) {\n    fingerprint.push(getRequestHeader(event, \"user-agent\"));\n  }\n  const fingerprintString = fingerprint.filter(Boolean).join(\"|\");\n  if (!fingerprintString) {\n    return null;\n  }\n  if (opts.hash === false) {\n    return fingerprintString;\n  }\n  const buffer = await crypto.subtle.digest(\n    opts.hash || \"SHA-1\",\n    new TextEncoder().encode(fingerprintString)\n  );\n  const hash = [...new Uint8Array(buffer)].map((b) => b.toString(16).padStart(2, \"0\")).join(\"\");\n  return hash;\n}\n\nconst PayloadMethods = /* @__PURE__ */ new Set([\"PATCH\", \"POST\", \"PUT\", \"DELETE\"]);\nconst ignoredHeaders = /* @__PURE__ */ new Set([\n  \"transfer-encoding\",\n  \"connection\",\n  \"keep-alive\",\n  \"upgrade\",\n  \"expect\",\n  \"host\",\n  \"accept\"\n]);\nasync function proxyRequest(event, target, opts = {}) {\n  let body;\n  let duplex;\n  if (PayloadMethods.has(event.method)) {\n    if (opts.streamRequest) {\n      body = getRequestWebStream(event);\n      duplex = \"half\";\n    } else {\n      body = await readRawBody(event, false).catch(() => void 0);\n    }\n  }\n  const method = opts.fetchOptions?.method || event.method;\n  const fetchHeaders = mergeHeaders(\n    getProxyRequestHeaders(event),\n    opts.fetchOptions?.headers,\n    opts.headers\n  );\n  return sendProxy(event, target, {\n    ...opts,\n    fetchOptions: {\n      method,\n      body,\n      duplex,\n      ...opts.fetchOptions,\n      headers: fetchHeaders\n    }\n  });\n}\nasync function sendProxy(event, target, opts = {}) {\n  const response = await _getFetch(opts.fetch)(target, {\n    headers: opts.headers,\n    ignoreResponseError: true,\n    // make $ofetch.raw transparent\n    ...opts.fetchOptions\n  });\n  event.node.res.statusCode = sanitizeStatusCode(\n    response.status,\n    event.node.res.statusCode\n  );\n  event.node.res.statusMessage = sanitizeStatusMessage(response.statusText);\n  const cookies = [];\n  for (const [key, value] of response.headers.entries()) {\n    if (key === \"content-encoding\") {\n      continue;\n    }\n    if (key === \"content-length\") {\n      continue;\n    }\n    if (key === \"set-cookie\") {\n      cookies.push(...splitCookiesString(value));\n      continue;\n    }\n    event.node.res.setHeader(key, value);\n  }\n  if (cookies.length > 0) {\n    event.node.res.setHeader(\n      \"set-cookie\",\n      cookies.map((cookie) => {\n        if (opts.cookieDomainRewrite) {\n          cookie = rewriteCookieProperty(\n            cookie,\n            opts.cookieDomainRewrite,\n            \"domain\"\n          );\n        }\n        if (opts.cookiePathRewrite) {\n          cookie = rewriteCookieProperty(\n            cookie,\n            opts.cookiePathRewrite,\n            \"path\"\n          );\n        }\n        return cookie;\n      })\n    );\n  }\n  if (opts.onResponse) {\n    await opts.onResponse(event, response);\n  }\n  if (response._data !== void 0) {\n    return response._data;\n  }\n  if (event.handled) {\n    return;\n  }\n  if (opts.sendStream === false) {\n    const data = new Uint8Array(await response.arrayBuffer());\n    return event.node.res.end(data);\n  }\n  if (response.body) {\n    for await (const chunk of response.body) {\n      event.node.res.write(chunk);\n    }\n  }\n  return event.node.res.end();\n}\nfunction getProxyRequestHeaders(event) {\n  const headers = /* @__PURE__ */ Object.create(null);\n  const reqHeaders = getRequestHeaders(event);\n  for (const name in reqHeaders) {\n    if (!ignoredHeaders.has(name)) {\n      headers[name] = reqHeaders[name];\n    }\n  }\n  return headers;\n}\nfunction fetchWithEvent(event, req, init, options) {\n  return _getFetch(options?.fetch)(req, {\n    ...init,\n    context: init?.context || event.context,\n    headers: {\n      ...getProxyRequestHeaders(event),\n      ...init?.headers\n    }\n  });\n}\nfunction _getFetch(_fetch) {\n  if (_fetch) {\n    return _fetch;\n  }\n  if (globalThis.fetch) {\n    return globalThis.fetch;\n  }\n  throw new Error(\n    \"fetch is not available. Try importing `node-fetch-native/polyfill` for Node.js.\"\n  );\n}\nfunction rewriteCookieProperty(header, map, property) {\n  const _map = typeof map === \"string\" ? { \"*\": map } : map;\n  return header.replace(\n    new RegExp(`(;\\\\s*${property}=)([^;]+)`, \"gi\"),\n    (match, prefix, previousValue) => {\n      let newValue;\n      if (previousValue in _map) {\n        newValue = _map[previousValue];\n      } else if (\"*\" in _map) {\n        newValue = _map[\"*\"];\n      } else {\n        return match;\n      }\n      return newValue ? prefix + newValue : \"\";\n    }\n  );\n}\nfunction mergeHeaders(defaults, ...inputs) {\n  const _inputs = inputs.filter(Boolean);\n  if (_inputs.length === 0) {\n    return defaults;\n  }\n  const merged = new Headers(defaults);\n  for (const input of _inputs) {\n    for (const [key, value] of Object.entries(input)) {\n      if (value !== void 0) {\n        merged.set(key, value);\n      }\n    }\n  }\n  return merged;\n}\n\nconst getSessionPromise = Symbol(\"getSession\");\nconst DEFAULT_NAME = \"h3\";\nconst DEFAULT_COOKIE = {\n  path: \"/\",\n  secure: true,\n  httpOnly: true\n};\nasync function useSession(event, config) {\n  const sessionName = config.name || DEFAULT_NAME;\n  await getSession(event, config);\n  const sessionManager = {\n    get id() {\n      return event.context.sessions?.[sessionName]?.id;\n    },\n    get data() {\n      return event.context.sessions?.[sessionName]?.data || {};\n    },\n    update: async (update) => {\n      await updateSession(event, config, update);\n      return sessionManager;\n    },\n    clear: async () => {\n      await clearSession(event, config);\n      return sessionManager;\n    }\n  };\n  return sessionManager;\n}\nasync function getSession(event, config) {\n  const sessionName = config.name || DEFAULT_NAME;\n  if (!event.context.sessions) {\n    event.context.sessions = /* @__PURE__ */ Object.create(null);\n  }\n  const existingSession = event.context.sessions[sessionName];\n  if (existingSession) {\n    return existingSession[getSessionPromise] || existingSession;\n  }\n  const session = {\n    id: \"\",\n    createdAt: 0,\n    data: /* @__PURE__ */ Object.create(null)\n  };\n  event.context.sessions[sessionName] = session;\n  let sealedSession;\n  if (config.sessionHeader !== false) {\n    const headerName = typeof config.sessionHeader === \"string\" ? config.sessionHeader.toLowerCase() : `x-${sessionName.toLowerCase()}-session`;\n    const headerValue = event.node.req.headers[headerName];\n    if (typeof headerValue === \"string\") {\n      sealedSession = headerValue;\n    }\n  }\n  if (!sealedSession) {\n    sealedSession = getCookie(event, sessionName);\n  }\n  if (sealedSession) {\n    const promise = unsealSession(event, config, sealedSession).catch(() => {\n    }).then((unsealed) => {\n      Object.assign(session, unsealed);\n      delete event.context.sessions[sessionName][getSessionPromise];\n      return session;\n    });\n    event.context.sessions[sessionName][getSessionPromise] = promise;\n    await promise;\n  }\n  if (!session.id) {\n    session.id = config.generateId?.() ?? (config.crypto || crypto).randomUUID();\n    session.createdAt = Date.now();\n    await updateSession(event, config);\n  }\n  return session;\n}\nasync function updateSession(event, config, update) {\n  const sessionName = config.name || DEFAULT_NAME;\n  const session = event.context.sessions?.[sessionName] || await getSession(event, config);\n  if (typeof update === \"function\") {\n    update = update(session.data);\n  }\n  if (update) {\n    Object.assign(session.data, update);\n  }\n  if (config.cookie !== false) {\n    const sealed = await sealSession(event, config);\n    setCookie(event, sessionName, sealed, {\n      ...DEFAULT_COOKIE,\n      expires: config.maxAge ? new Date(session.createdAt + config.maxAge * 1e3) : void 0,\n      ...config.cookie\n    });\n  }\n  return session;\n}\nasync function sealSession(event, config) {\n  const sessionName = config.name || DEFAULT_NAME;\n  const session = event.context.sessions?.[sessionName] || await getSession(event, config);\n  const sealed = await seal(config.crypto || crypto, session, config.password, {\n    ...defaults,\n    ttl: config.maxAge ? config.maxAge * 1e3 : 0,\n    ...config.seal\n  });\n  return sealed;\n}\nasync function unsealSession(_event, config, sealed) {\n  const unsealed = await unseal(\n    config.crypto || crypto,\n    sealed,\n    config.password,\n    {\n      ...defaults,\n      ttl: config.maxAge ? config.maxAge * 1e3 : 0,\n      ...config.seal\n    }\n  );\n  if (config.maxAge) {\n    const age = Date.now() - (unsealed.createdAt || Number.NEGATIVE_INFINITY);\n    if (age > config.maxAge * 1e3) {\n      throw new Error(\"Session expired!\");\n    }\n  }\n  return unsealed;\n}\nasync function clearSession(event, config) {\n  const sessionName = config.name || DEFAULT_NAME;\n  if (event.context.sessions?.[sessionName]) {\n    delete event.context.sessions[sessionName];\n  }\n  await setCookie(event, sessionName, \"\", {\n    ...DEFAULT_COOKIE,\n    ...config.cookie\n  });\n}\n\nfunction formatEventStreamMessage(message) {\n  let result = \"\";\n  if (message.id) {\n    result += `id: ${message.id}\n`;\n  }\n  if (message.event) {\n    result += `event: ${message.event}\n`;\n  }\n  if (typeof message.retry === \"number\" && Number.isInteger(message.retry)) {\n    result += `retry: ${message.retry}\n`;\n  }\n  result += `data: ${message.data}\n\n`;\n  return result;\n}\nfunction formatEventStreamMessages(messages) {\n  let result = \"\";\n  for (const msg of messages) {\n    result += formatEventStreamMessage(msg);\n  }\n  return result;\n}\nfunction setEventStreamHeaders(event) {\n  const headers = {\n    \"Content-Type\": \"text/event-stream\",\n    \"Cache-Control\": \"private, no-cache, no-store, no-transform, must-revalidate, max-age=0\",\n    \"X-Accel-Buffering\": \"no\"\n    // prevent nginx from buffering the response\n  };\n  if (!isHttp2Request(event)) {\n    headers.Connection = \"keep-alive\";\n  }\n  setResponseHeaders(event, headers);\n}\nfunction isHttp2Request(event) {\n  return getHeader(event, \":path\") !== void 0 && getHeader(event, \":method\") !== void 0;\n}\n\nvar __defProp$1 = Object.defineProperty;\nvar __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField$1 = (obj, key, value) => {\n  __defNormalProp$1(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nclass EventStream {\n  constructor(event, opts = {}) {\n    __publicField$1(this, \"_h3Event\");\n    __publicField$1(this, \"_transformStream\", new TransformStream());\n    __publicField$1(this, \"_writer\");\n    __publicField$1(this, \"_encoder\", new TextEncoder());\n    __publicField$1(this, \"_writerIsClosed\", false);\n    __publicField$1(this, \"_paused\", false);\n    __publicField$1(this, \"_unsentData\");\n    __publicField$1(this, \"_disposed\", false);\n    __publicField$1(this, \"_handled\", false);\n    this._h3Event = event;\n    this._writer = this._transformStream.writable.getWriter();\n    this._writer.closed.then(() => {\n      this._writerIsClosed = true;\n    });\n    if (opts.autoclose !== false) {\n      this._h3Event.node.req.on(\"close\", () => this.close());\n    }\n  }\n  async push(message) {\n    if (typeof message === \"string\") {\n      await this._sendEvent({ data: message });\n      return;\n    }\n    if (Array.isArray(message)) {\n      if (message.length === 0) {\n        return;\n      }\n      if (typeof message[0] === \"string\") {\n        const msgs = [];\n        for (const item of message) {\n          msgs.push({ data: item });\n        }\n        await this._sendEvents(msgs);\n        return;\n      }\n      await this._sendEvents(message);\n      return;\n    }\n    await this._sendEvent(message);\n  }\n  async _sendEvent(message) {\n    if (this._writerIsClosed) {\n      return;\n    }\n    if (this._paused && !this._unsentData) {\n      this._unsentData = formatEventStreamMessage(message);\n      return;\n    }\n    if (this._paused) {\n      this._unsentData += formatEventStreamMessage(message);\n      return;\n    }\n    await this._writer.write(this._encoder.encode(formatEventStreamMessage(message))).catch();\n  }\n  async _sendEvents(messages) {\n    if (this._writerIsClosed) {\n      return;\n    }\n    const payload = formatEventStreamMessages(messages);\n    if (this._paused && !this._unsentData) {\n      this._unsentData = payload;\n      return;\n    }\n    if (this._paused) {\n      this._unsentData += payload;\n      return;\n    }\n    await this._writer.write(this._encoder.encode(payload)).catch();\n  }\n  pause() {\n    this._paused = true;\n  }\n  get isPaused() {\n    return this._paused;\n  }\n  async resume() {\n    this._paused = false;\n    await this.flush();\n  }\n  async flush() {\n    if (this._writerIsClosed) {\n      return;\n    }\n    if (this._unsentData?.length) {\n      await this._writer.write(this._encoder.encode(this._unsentData));\n      this._unsentData = void 0;\n    }\n  }\n  /**\n   * Close the stream and the connection if the stream is being sent to the client\n   */\n  async close() {\n    if (this._disposed) {\n      return;\n    }\n    if (!this._writerIsClosed) {\n      try {\n        await this._writer.close();\n      } catch {\n      }\n    }\n    if (this._h3Event._handled && this._handled && !this._h3Event.node.res.closed) {\n      this._h3Event.node.res.end();\n    }\n    this._disposed = true;\n  }\n  /**\n   * Triggers callback when the writable stream is closed.\n   * It is also triggered after calling the `close()` method.\n   * It also triggers when the request connection has been closed by either the client or the server.\n   */\n  onClosed(cb) {\n    this._writer.closed.then(cb);\n    this._h3Event.node?.req.on(\"close\", cb);\n  }\n  async send() {\n    setEventStreamHeaders(this._h3Event);\n    setResponseStatus(this._h3Event, 200);\n    this._h3Event._handled = true;\n    this._handled = true;\n    await sendStream(this._h3Event, this._transformStream.readable);\n  }\n}\n\nfunction createEventStream(event, opts) {\n  return new EventStream(event, opts);\n}\n\nasync function serveStatic(event, options) {\n  if (event.method !== \"GET\" && event.method !== \"HEAD\") {\n    if (!options.fallthrough) {\n      throw createError({\n        statusMessage: \"Method Not Allowed\",\n        statusCode: 405\n      });\n    }\n    return false;\n  }\n  const originalId = decodePath(\n    withLeadingSlash(withoutTrailingSlash(parseURL(event.path).pathname))\n  );\n  const acceptEncodings = parseAcceptEncoding(\n    getRequestHeader(event, \"accept-encoding\"),\n    options.encodings\n  );\n  if (acceptEncodings.length > 1) {\n    setResponseHeader(event, \"vary\", \"accept-encoding\");\n  }\n  let id = originalId;\n  let meta;\n  const _ids = idSearchPaths(\n    originalId,\n    acceptEncodings,\n    options.indexNames || [\"/index.html\"]\n  );\n  for (const _id of _ids) {\n    const _meta = await options.getMeta(_id);\n    if (_meta) {\n      meta = _meta;\n      id = _id;\n      break;\n    }\n  }\n  if (!meta) {\n    if (!options.fallthrough) {\n      throw createError({\n        statusMessage: \"Cannot find static asset \" + id,\n        statusCode: 404\n      });\n    }\n    return false;\n  }\n  if (meta.etag && !getResponseHeader(event, \"etag\")) {\n    setResponseHeader(event, \"etag\", meta.etag);\n  }\n  const ifNotMatch = meta.etag && getRequestHeader(event, \"if-none-match\") === meta.etag;\n  if (ifNotMatch) {\n    setResponseStatus(event, 304, \"Not Modified\");\n    return send(event, \"\");\n  }\n  if (meta.mtime) {\n    const mtimeDate = new Date(meta.mtime);\n    const ifModifiedSinceH = getRequestHeader(event, \"if-modified-since\");\n    if (ifModifiedSinceH && new Date(ifModifiedSinceH) >= mtimeDate) {\n      setResponseStatus(event, 304, \"Not Modified\");\n      return send(event, null);\n    }\n    if (!getResponseHeader(event, \"last-modified\")) {\n      setResponseHeader(event, \"last-modified\", mtimeDate.toUTCString());\n    }\n  }\n  if (meta.type && !getResponseHeader(event, \"content-type\")) {\n    setResponseHeader(event, \"content-type\", meta.type);\n  }\n  if (meta.encoding && !getResponseHeader(event, \"content-encoding\")) {\n    setResponseHeader(event, \"content-encoding\", meta.encoding);\n  }\n  if (meta.size !== void 0 && meta.size > 0 && !getResponseHeader(event, \"content-length\")) {\n    setResponseHeader(event, \"content-length\", meta.size);\n  }\n  if (event.method === \"HEAD\") {\n    return send(event, null);\n  }\n  const contents = await options.getContents(id);\n  return isStream(contents) ? sendStream(event, contents) : send(event, contents);\n}\nfunction parseAcceptEncoding(header, encodingMap) {\n  if (!encodingMap || !header) {\n    return [];\n  }\n  return String(header || \"\").split(\",\").map((e) => encodingMap[e.trim()]).filter(Boolean);\n}\nfunction idSearchPaths(id, encodings, indexNames) {\n  const ids = [];\n  for (const suffix of [\"\", ...indexNames]) {\n    for (const encoding of [...encodings, \"\"]) {\n      ids.push(`${id}${suffix}${encoding}`);\n    }\n  }\n  return ids;\n}\n\nfunction defineWebSocket(hooks) {\n  return hooks;\n}\nfunction defineWebSocketHandler(hooks) {\n  return defineEventHandler({\n    handler() {\n      throw createError({\n        statusCode: 426,\n        statusMessage: \"Upgrade Required\"\n      });\n    },\n    websocket: hooks\n  });\n}\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nclass H3Event {\n  constructor(req, res) {\n    __publicField(this, \"__is_event__\", true);\n    // Context\n    __publicField(this, \"node\");\n    // Node\n    __publicField(this, \"web\");\n    // Web\n    __publicField(this, \"context\", {});\n    // Shared\n    // Request\n    __publicField(this, \"_method\");\n    __publicField(this, \"_path\");\n    __publicField(this, \"_headers\");\n    __publicField(this, \"_requestBody\");\n    // Response\n    __publicField(this, \"_handled\", false);\n    this.node = { req, res };\n  }\n  // --- Request ---\n  get method() {\n    if (!this._method) {\n      this._method = (this.node.req.method || \"GET\").toUpperCase();\n    }\n    return this._method;\n  }\n  get path() {\n    return this._path || this.node.req.url || \"/\";\n  }\n  get headers() {\n    if (!this._headers) {\n      this._headers = _normalizeNodeHeaders(this.node.req.headers);\n    }\n    return this._headers;\n  }\n  // --- Respoonse ---\n  get handled() {\n    return this._handled || this.node.res.writableEnded || this.node.res.headersSent;\n  }\n  respondWith(response) {\n    return Promise.resolve(response).then(\n      (_response) => sendWebResponse(this, _response)\n    );\n  }\n  // --- Utils ---\n  toString() {\n    return `[${this.method}] ${this.path}`;\n  }\n  toJSON() {\n    return this.toString();\n  }\n  // --- Deprecated ---\n  /** @deprecated Please use `event.node.req` instead. **/\n  get req() {\n    return this.node.req;\n  }\n  /** @deprecated Please use `event.node.res` instead. **/\n  get res() {\n    return this.node.res;\n  }\n}\nfunction isEvent(input) {\n  return hasProp(input, \"__is_event__\");\n}\nfunction createEvent(req, res) {\n  return new H3Event(req, res);\n}\nfunction _normalizeNodeHeaders(nodeHeaders) {\n  const headers = new Headers();\n  for (const [name, value] of Object.entries(nodeHeaders)) {\n    if (Array.isArray(value)) {\n      for (const item of value) {\n        headers.append(name, item);\n      }\n    } else if (value) {\n      headers.set(name, value);\n    }\n  }\n  return headers;\n}\n\nfunction defineEventHandler(handler) {\n  if (typeof handler === \"function\") {\n    handler.__is_handler__ = true;\n    return handler;\n  }\n  const _hooks = {\n    onRequest: _normalizeArray(handler.onRequest),\n    onBeforeResponse: _normalizeArray(handler.onBeforeResponse)\n  };\n  const _handler = (event) => {\n    return _callHandler(event, handler.handler, _hooks);\n  };\n  _handler.__is_handler__ = true;\n  _handler.__resolve__ = handler.handler.__resolve__;\n  _handler.__websocket__ = handler.websocket;\n  return _handler;\n}\nfunction _normalizeArray(input) {\n  return input ? Array.isArray(input) ? input : [input] : void 0;\n}\nasync function _callHandler(event, handler, hooks) {\n  if (hooks.onRequest) {\n    for (const hook of hooks.onRequest) {\n      await hook(event);\n      if (event.handled) {\n        return;\n      }\n    }\n  }\n  const body = await handler(event);\n  const response = { body };\n  if (hooks.onBeforeResponse) {\n    for (const hook of hooks.onBeforeResponse) {\n      await hook(event, response);\n    }\n  }\n  return response.body;\n}\nconst eventHandler = defineEventHandler;\nfunction defineRequestMiddleware(fn) {\n  return fn;\n}\nfunction defineResponseMiddleware(fn) {\n  return fn;\n}\nfunction isEventHandler(input) {\n  return hasProp(input, \"__is_handler__\");\n}\nfunction toEventHandler(input, _, _route) {\n  if (!isEventHandler(input)) {\n    console.warn(\n      \"[h3] Implicit event handler conversion is deprecated. Use `eventHandler()` or `fromNodeMiddleware()` to define event handlers.\",\n      _route && _route !== \"/\" ? `\n     Route: ${_route}` : \"\",\n      `\n     Handler: ${input}`\n    );\n  }\n  return input;\n}\nfunction dynamicEventHandler(initial) {\n  let current = initial;\n  const wrapper = eventHandler((event) => {\n    if (current) {\n      return current(event);\n    }\n  });\n  wrapper.set = (handler) => {\n    current = handler;\n  };\n  return wrapper;\n}\nfunction defineLazyEventHandler(factory) {\n  let _promise;\n  let _resolved;\n  const resolveHandler = () => {\n    if (_resolved) {\n      return Promise.resolve(_resolved);\n    }\n    if (!_promise) {\n      _promise = Promise.resolve(factory()).then((r) => {\n        const handler2 = r.default || r;\n        if (typeof handler2 !== \"function\") {\n          throw new TypeError(\n            \"Invalid lazy handler result. It should be a function:\",\n            handler2\n          );\n        }\n        _resolved = { handler: toEventHandler(r.default || r) };\n        return _resolved;\n      });\n    }\n    return _promise;\n  };\n  const handler = eventHandler((event) => {\n    if (_resolved) {\n      return _resolved.handler(event);\n    }\n    return resolveHandler().then((r) => r.handler(event));\n  });\n  handler.__resolve__ = resolveHandler;\n  return handler;\n}\nconst lazyEventHandler = defineLazyEventHandler;\n\nconst H3Headers = globalThis.Headers;\nconst H3Response = globalThis.Response;\n\nfunction createApp(options = {}) {\n  const stack = [];\n  const handler = createAppEventHandler(stack, options);\n  const resolve = createResolver(stack);\n  handler.__resolve__ = resolve;\n  const getWebsocket = cachedFn(() => websocketOptions(resolve, options));\n  const app = {\n    // @ts-expect-error\n    use: (arg1, arg2, arg3) => use(app, arg1, arg2, arg3),\n    resolve,\n    handler,\n    stack,\n    options,\n    get websocket() {\n      return getWebsocket();\n    }\n  };\n  return app;\n}\nfunction use(app, arg1, arg2, arg3) {\n  if (Array.isArray(arg1)) {\n    for (const i of arg1) {\n      use(app, i, arg2, arg3);\n    }\n  } else if (Array.isArray(arg2)) {\n    for (const i of arg2) {\n      use(app, arg1, i, arg3);\n    }\n  } else if (typeof arg1 === \"string\") {\n    app.stack.push(\n      normalizeLayer({ ...arg3, route: arg1, handler: arg2 })\n    );\n  } else if (typeof arg1 === \"function\") {\n    app.stack.push(normalizeLayer({ ...arg2, handler: arg1 }));\n  } else {\n    app.stack.push(normalizeLayer({ ...arg1 }));\n  }\n  return app;\n}\nfunction createAppEventHandler(stack, options) {\n  const spacing = options.debug ? 2 : void 0;\n  return eventHandler(async (event) => {\n    event.node.req.originalUrl = event.node.req.originalUrl || event.node.req.url || \"/\";\n    const _reqPath = event._path || event.node.req.url || \"/\";\n    let _layerPath;\n    if (options.onRequest) {\n      await options.onRequest(event);\n    }\n    for (const layer of stack) {\n      if (layer.route.length > 1) {\n        if (!_reqPath.startsWith(layer.route)) {\n          continue;\n        }\n        _layerPath = _reqPath.slice(layer.route.length) || \"/\";\n      } else {\n        _layerPath = _reqPath;\n      }\n      if (layer.match && !layer.match(_layerPath, event)) {\n        continue;\n      }\n      event._path = _layerPath;\n      event.node.req.url = _layerPath;\n      const val = await layer.handler(event);\n      const _body = val === void 0 ? void 0 : await val;\n      if (_body !== void 0) {\n        const _response = { body: _body };\n        if (options.onBeforeResponse) {\n          await options.onBeforeResponse(event, _response);\n        }\n        await handleHandlerResponse(event, _response.body, spacing);\n        if (options.onAfterResponse) {\n          await options.onAfterResponse(event, _response);\n        }\n        return;\n      }\n      if (event.handled) {\n        if (options.onAfterResponse) {\n          await options.onAfterResponse(event, void 0);\n        }\n        return;\n      }\n    }\n    if (!event.handled) {\n      throw createError({\n        statusCode: 404,\n        statusMessage: `Cannot find any path matching ${event.path || \"/\"}.`\n      });\n    }\n    if (options.onAfterResponse) {\n      await options.onAfterResponse(event, void 0);\n    }\n  });\n}\nfunction createResolver(stack) {\n  return async (path) => {\n    let _layerPath;\n    for (const layer of stack) {\n      if (layer.route === \"/\" && !layer.handler.__resolve__) {\n        continue;\n      }\n      if (!path.startsWith(layer.route)) {\n        continue;\n      }\n      _layerPath = path.slice(layer.route.length) || \"/\";\n      if (layer.match && !layer.match(_layerPath, void 0)) {\n        continue;\n      }\n      let res = { route: layer.route, handler: layer.handler };\n      if (res.handler.__resolve__) {\n        const _res = await res.handler.__resolve__(_layerPath);\n        if (!_res) {\n          continue;\n        }\n        res = {\n          ...res,\n          ..._res,\n          route: joinURL(res.route || \"/\", _res.route || \"/\")\n        };\n      }\n      return res;\n    }\n  };\n}\nfunction normalizeLayer(input) {\n  let handler = input.handler;\n  if (handler.handler) {\n    handler = handler.handler;\n  }\n  if (input.lazy) {\n    handler = lazyEventHandler(handler);\n  } else if (!isEventHandler(handler)) {\n    handler = toEventHandler(handler, void 0, input.route);\n  }\n  return {\n    route: withoutTrailingSlash(input.route),\n    match: input.match,\n    handler\n  };\n}\nfunction handleHandlerResponse(event, val, jsonSpace) {\n  if (val === null) {\n    return sendNoContent(event);\n  }\n  if (val) {\n    if (isWebResponse(val)) {\n      return sendWebResponse(event, val);\n    }\n    if (isStream(val)) {\n      return sendStream(event, val);\n    }\n    if (val.buffer) {\n      return send(event, val);\n    }\n    if (val.arrayBuffer && typeof val.arrayBuffer === \"function\") {\n      return val.arrayBuffer().then((arrayBuffer) => {\n        return send(event, Buffer.from(arrayBuffer), val.type);\n      });\n    }\n    if (val instanceof Error) {\n      throw createError(val);\n    }\n    if (typeof val.end === \"function\") {\n      return true;\n    }\n  }\n  const valType = typeof val;\n  if (valType === \"string\") {\n    return send(event, val, MIMES.html);\n  }\n  if (valType === \"object\" || valType === \"boolean\" || valType === \"number\") {\n    return send(event, JSON.stringify(val, void 0, jsonSpace), MIMES.json);\n  }\n  if (valType === \"bigint\") {\n    return send(event, val.toString(), MIMES.json);\n  }\n  throw createError({\n    statusCode: 500,\n    statusMessage: `[h3] Cannot send ${valType} as response.`\n  });\n}\nfunction cachedFn(fn) {\n  let cache;\n  return () => {\n    if (!cache) {\n      cache = fn();\n    }\n    return cache;\n  };\n}\nfunction websocketOptions(evResolver, appOptions) {\n  return {\n    ...appOptions.websocket,\n    async resolve(info) {\n      const { pathname } = parseURL(info.url || \"/\");\n      const resolved = await evResolver(pathname);\n      return resolved?.handler?.__websocket__ || {};\n    }\n  };\n}\n\nconst RouterMethods = [\n  \"connect\",\n  \"delete\",\n  \"get\",\n  \"head\",\n  \"options\",\n  \"post\",\n  \"put\",\n  \"trace\",\n  \"patch\"\n];\nfunction createRouter(opts = {}) {\n  const _router = createRouter$1({});\n  const routes = {};\n  let _matcher;\n  const router = {};\n  const addRoute = (path, handler, method) => {\n    let route = routes[path];\n    if (!route) {\n      routes[path] = route = { path, handlers: {} };\n      _router.insert(path, route);\n    }\n    if (Array.isArray(method)) {\n      for (const m of method) {\n        addRoute(path, handler, m);\n      }\n    } else {\n      route.handlers[method] = toEventHandler(handler, void 0, path);\n    }\n    return router;\n  };\n  router.use = router.add = (path, handler, method) => addRoute(path, handler, method || \"all\");\n  for (const method of RouterMethods) {\n    router[method] = (path, handle) => router.add(path, handle, method);\n  }\n  const matchHandler = (path = \"/\", method = \"get\") => {\n    const qIndex = path.indexOf(\"?\");\n    if (qIndex !== -1) {\n      path = path.slice(0, Math.max(0, qIndex));\n    }\n    const matched = _router.lookup(path);\n    if (!matched || !matched.handlers) {\n      return {\n        error: createError({\n          statusCode: 404,\n          name: \"Not Found\",\n          statusMessage: `Cannot find any route matching ${path || \"/\"}.`\n        })\n      };\n    }\n    let handler = matched.handlers[method] || matched.handlers.all;\n    if (!handler) {\n      if (!_matcher) {\n        _matcher = toRouteMatcher(_router);\n      }\n      const _matches = _matcher.matchAll(path).reverse();\n      for (const _match of _matches) {\n        if (_match.handlers[method]) {\n          handler = _match.handlers[method];\n          matched.handlers[method] = matched.handlers[method] || handler;\n          break;\n        }\n        if (_match.handlers.all) {\n          handler = _match.handlers.all;\n          matched.handlers.all = matched.handlers.all || handler;\n          break;\n        }\n      }\n    }\n    if (!handler) {\n      return {\n        error: createError({\n          statusCode: 405,\n          name: \"Method Not Allowed\",\n          statusMessage: `Method ${method} is not allowed on this route.`\n        })\n      };\n    }\n    return { matched, handler };\n  };\n  const isPreemptive = opts.preemptive || opts.preemtive;\n  router.handler = eventHandler((event) => {\n    const match = matchHandler(\n      event.path,\n      event.method.toLowerCase()\n    );\n    if (\"error\" in match) {\n      if (isPreemptive) {\n        throw match.error;\n      } else {\n        return;\n      }\n    }\n    event.context.matchedRoute = match.matched;\n    const params = match.matched.params || {};\n    event.context.params = params;\n    return Promise.resolve(match.handler(event)).then((res) => {\n      if (res === void 0 && isPreemptive) {\n        return null;\n      }\n      return res;\n    });\n  });\n  router.handler.__resolve__ = async (path) => {\n    path = withLeadingSlash(path);\n    const match = matchHandler(path);\n    if (\"error\" in match) {\n      return;\n    }\n    let res = {\n      route: match.matched.path,\n      handler: match.handler\n    };\n    if (match.handler.__resolve__) {\n      const _res = await match.handler.__resolve__(path);\n      if (!_res) {\n        return;\n      }\n      res = { ...res, ..._res };\n    }\n    return res;\n  };\n  return router;\n}\n\nconst defineNodeListener = (handler) => handler;\nconst defineNodeMiddleware = (middleware) => middleware;\nfunction fromNodeMiddleware(handler) {\n  if (isEventHandler(handler)) {\n    return handler;\n  }\n  if (typeof handler !== \"function\") {\n    throw new TypeError(\n      \"Invalid handler. It should be a function:\",\n      handler\n    );\n  }\n  return eventHandler((event) => {\n    return callNodeListener(\n      handler,\n      event.node.req,\n      event.node.res\n    );\n  });\n}\nfunction toNodeListener(app) {\n  const toNodeHandle = async function(req, res) {\n    const event = createEvent(req, res);\n    try {\n      await app.handler(event);\n    } catch (_error) {\n      const error = createError(_error);\n      if (!isError(_error)) {\n        error.unhandled = true;\n      }\n      if (app.options.onError) {\n        await app.options.onError(error, event);\n      }\n      if (event.handled) {\n        return;\n      }\n      if (error.unhandled || error.fatal) {\n        console.error(\"[h3]\", error.fatal ? \"[fatal]\" : \"[unhandled]\", error);\n      }\n      await sendError(event, error, !!app.options.debug);\n    }\n  };\n  return toNodeHandle;\n}\nfunction promisifyNodeListener(handler) {\n  return function(req, res) {\n    return callNodeListener(handler, req, res);\n  };\n}\nfunction callNodeListener(handler, req, res) {\n  const isMiddleware = handler.length > 2;\n  return new Promise((resolve, reject) => {\n    const next = (err) => {\n      if (isMiddleware) {\n        res.off(\"close\", next);\n        res.off(\"error\", next);\n      }\n      return err ? reject(createError(err)) : resolve(void 0);\n    };\n    try {\n      const returned = handler(req, res, next);\n      if (isMiddleware && returned === void 0) {\n        res.once(\"close\", next);\n        res.once(\"error\", next);\n      } else {\n        resolve(returned);\n      }\n    } catch (error) {\n      next(error);\n    }\n  });\n}\n\nfunction toPlainHandler(app) {\n  const handler = (request) => {\n    return _handlePlainRequest(app, request);\n  };\n  return handler;\n}\nfunction fromPlainHandler(handler) {\n  return eventHandler(async (event) => {\n    const res = await handler({\n      method: event.method,\n      path: event.path,\n      headers: Object.fromEntries(event.headers.entries()),\n      body: getRequestWebStream(event),\n      context: event.context\n    });\n    setResponseStatus(event, res.status, res.statusText);\n    for (const [key, value] of res.headers) {\n      setResponseHeader(event, key, value);\n    }\n    return res.body;\n  });\n}\nasync function _handlePlainRequest(app, request) {\n  const path = request.path;\n  const method = (request.method || \"GET\").toUpperCase();\n  const headers = new Headers(request.headers);\n  const nodeReq = new IncomingMessage();\n  const nodeRes = new ServerResponse(nodeReq);\n  nodeReq.method = method;\n  nodeReq.url = path;\n  nodeReq.headers = Object.fromEntries(headers.entries());\n  const event = createEvent(nodeReq, nodeRes);\n  event._method = method;\n  event._path = path;\n  event._headers = headers;\n  if (request.body) {\n    event._requestBody = request.body;\n  }\n  if (request._eventOverrides) {\n    Object.assign(event, request._eventOverrides);\n  }\n  if (request.context) {\n    Object.assign(event.context, request.context);\n  }\n  try {\n    await app.handler(event);\n  } catch (_error) {\n    const error = createError(_error);\n    if (!isError(_error)) {\n      error.unhandled = true;\n    }\n    if (app.options.onError) {\n      await app.options.onError(error, event);\n    }\n    if (!event.handled) {\n      if (error.unhandled || error.fatal) {\n        console.error(\"[h3]\", error.fatal ? \"[fatal]\" : \"[unhandled]\", error);\n      }\n      await sendError(event, error, !!app.options.debug);\n    }\n  }\n  return {\n    status: nodeRes.statusCode,\n    statusText: nodeRes.statusMessage,\n    headers: _normalizeUnenvHeaders(nodeRes._headers),\n    body: nodeRes._data\n  };\n}\nfunction _normalizeUnenvHeaders(input) {\n  const headers = [];\n  const cookies = [];\n  for (const _key in input) {\n    const key = _key.toLowerCase();\n    if (key === \"set-cookie\") {\n      cookies.push(\n        ...splitCookiesString(input[\"set-cookie\"])\n      );\n      continue;\n    }\n    const value = input[key];\n    if (Array.isArray(value)) {\n      for (const _value of value) {\n        headers.push([key, _value]);\n      }\n    } else if (value !== void 0) {\n      headers.push([key, String(value)]);\n    }\n  }\n  if (cookies.length > 0) {\n    for (const cookie of cookies) {\n      headers.push([\"set-cookie\", cookie]);\n    }\n  }\n  return headers;\n}\n\nfunction toWebHandler(app) {\n  const webHandler = (request, context) => {\n    return _handleWebRequest(app, request, context);\n  };\n  return webHandler;\n}\nfunction fromWebHandler(handler) {\n  return eventHandler((event) => handler(toWebRequest(event), event.context));\n}\nconst nullBodyResponses = /* @__PURE__ */ new Set([101, 204, 205, 304]);\nasync function _handleWebRequest(app, request, context) {\n  const url = new URL(request.url);\n  const res = await _handlePlainRequest(app, {\n    _eventOverrides: {\n      web: { request, url }\n    },\n    context,\n    method: request.method,\n    path: url.pathname + url.search,\n    headers: request.headers,\n    body: request.body\n  });\n  const body = nullBodyResponses.has(res.status) || request.method === \"HEAD\" ? null : res.body;\n  return new Response(body, {\n    status: res.status,\n    statusText: res.statusText,\n    headers: res.headers\n  });\n}\n\nexport { H3Error, H3Event, H3Headers, H3Response, MIMES, appendCorsHeaders, appendCorsPreflightHeaders, appendHeader, appendHeaders, appendResponseHeader, appendResponseHeaders, assertMethod, callNodeListener, clearResponseHeaders, clearSession, createApp, createAppEventHandler, createError, createEvent, createEventStream, createRouter, defaultContentType, defineEventHandler, defineLazyEventHandler, defineNodeListener, defineNodeMiddleware, defineRequestMiddleware, defineResponseMiddleware, defineWebSocket, defineWebSocketHandler, deleteCookie, dynamicEventHandler, eventHandler, fetchWithEvent, fromNodeMiddleware, fromPlainHandler, fromWebHandler, getCookie, getHeader, getHeaders, getMethod, getProxyRequestHeaders, getQuery, getRequestFingerprint, getRequestHeader, getRequestHeaders, getRequestHost, getRequestIP, getRequestPath, getRequestProtocol, getRequestURL, getRequestWebStream, getResponseHeader, getResponseHeaders, getResponseStatus, getResponseStatusText, getRouterParam, getRouterParams, getSession, getValidatedQuery, getValidatedRouterParams, handleCacheHeaders, handleCors, isCorsOriginAllowed, isError, isEvent, isEventHandler, isMethod, isPreflightRequest, isStream, isWebResponse, lazyEventHandler, parseCookies, promisifyNodeListener, proxyRequest, readBody, readFormData, readMultipartFormData, readRawBody, readValidatedBody, removeResponseHeader, sanitizeStatusCode, sanitizeStatusMessage, sealSession, send, sendError, sendIterable, sendNoContent, sendProxy, sendRedirect, sendStream, sendWebResponse, serveStatic, setCookie, setHeader, setHeaders, setResponseHeader, setResponseHeaders, setResponseStatus, splitCookiesString, toEventHandler, toNodeListener, toPlainHandler, toWebHandler, toWebRequest, unsealSession, updateSession, use, useBase, useSession, writeEarlyHints };\n"],
  "mappings": "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",
  "names": ["decode", "decode2", "defaults", "_crypto", "EventEmitter", "EventEmitter", "EventEmitter", "parse", "getQuery", "defaults", "__publicField", "createRouter"]
}
