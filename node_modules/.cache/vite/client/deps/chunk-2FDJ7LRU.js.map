{
  "version": 3,
  "sources": ["../../../../destr/dist/index.mjs"],
  "sourcesContent": ["const suspectProtoRx = /\"(?:_|\\\\u0{2}5[Ff]){2}(?:p|\\\\u0{2}70)(?:r|\\\\u0{2}72)(?:o|\\\\u0{2}6[Ff])(?:t|\\\\u0{2}74)(?:o|\\\\u0{2}6[Ff])(?:_|\\\\u0{2}5[Ff]){2}\"\\s*:/;\r\nconst suspectConstructorRx = /\"(?:c|\\\\u0063)(?:o|\\\\u006[Ff])(?:n|\\\\u006[Ee])(?:s|\\\\u0073)(?:t|\\\\u0074)(?:r|\\\\u0072)(?:u|\\\\u0075)(?:c|\\\\u0063)(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:r|\\\\u0072)\"\\s*:/;\r\nconst JsonSigRx = /^\\s*[\"[{]|^\\s*-?\\d{1,16}(\\.\\d{1,17})?([Ee][+-]?\\d+)?\\s*$/;\r\nfunction jsonParseTransform(key, value) {\r\n  if (key === \"__proto__\" || key === \"constructor\" && value && typeof value === \"object\" && \"prototype\" in value) {\r\n    warnKeyDropped(key);\r\n    return;\r\n  }\r\n  return value;\r\n}\r\nfunction warnKeyDropped(key) {\r\n  console.warn(`[destr] Dropping \"${key}\" key to prevent prototype pollution.`);\r\n}\r\nfunction destr(value, options = {}) {\r\n  if (typeof value !== \"string\") {\r\n    return value;\r\n  }\r\n  const _value = value.trim();\r\n  if (\r\n    // eslint-disable-next-line unicorn/prefer-at\r\n    value[0] === '\"' && value.endsWith('\"') && !value.includes(\"\\\\\")\r\n  ) {\r\n    return _value.slice(1, -1);\r\n  }\r\n  if (_value.length <= 9) {\r\n    const _lval = _value.toLowerCase();\r\n    if (_lval === \"true\") {\r\n      return true;\r\n    }\r\n    if (_lval === \"false\") {\r\n      return false;\r\n    }\r\n    if (_lval === \"undefined\") {\r\n      return void 0;\r\n    }\r\n    if (_lval === \"null\") {\r\n      return null;\r\n    }\r\n    if (_lval === \"nan\") {\r\n      return Number.NaN;\r\n    }\r\n    if (_lval === \"infinity\") {\r\n      return Number.POSITIVE_INFINITY;\r\n    }\r\n    if (_lval === \"-infinity\") {\r\n      return Number.NEGATIVE_INFINITY;\r\n    }\r\n  }\r\n  if (!JsonSigRx.test(value)) {\r\n    if (options.strict) {\r\n      throw new SyntaxError(\"[destr] Invalid JSON\");\r\n    }\r\n    return value;\r\n  }\r\n  try {\r\n    if (suspectProtoRx.test(value) || suspectConstructorRx.test(value)) {\r\n      if (options.strict) {\r\n        throw new Error(\"[destr] Possible prototype pollution\");\r\n      }\r\n      return JSON.parse(value, jsonParseTransform);\r\n    }\r\n    return JSON.parse(value);\r\n  } catch (error) {\r\n    if (options.strict) {\r\n      throw error;\r\n    }\r\n    return value;\r\n  }\r\n}\r\nfunction safeDestr(value, options = {}) {\r\n  return destr(value, { ...options, strict: true });\r\n}\r\n\r\nexport { destr as default, destr, safeDestr };\r\n"],
  "mappings": ";AAAA,IAAM,iBAAiB;AACvB,IAAM,uBAAuB;AAC7B,IAAM,YAAY;AAClB,SAAS,mBAAmB,KAAK,OAAO;AACtC,MAAI,QAAQ,eAAe,QAAQ,iBAAiB,SAAS,OAAO,UAAU,YAAY,eAAe,OAAO;AAC9G,mBAAe,GAAG;AAClB;AAAA,EACF;AACA,SAAO;AACT;AACA,SAAS,eAAe,KAAK;AAC3B,UAAQ,KAAK,qBAAqB,GAAG,uCAAuC;AAC9E;AACA,SAAS,MAAM,OAAO,UAAU,CAAC,GAAG;AAClC,MAAI,OAAO,UAAU,UAAU;AAC7B,WAAO;AAAA,EACT;AACA,QAAM,SAAS,MAAM,KAAK;AAC1B;AAAA;AAAA,IAEE,MAAM,CAAC,MAAM,OAAO,MAAM,SAAS,GAAG,KAAK,CAAC,MAAM,SAAS,IAAI;AAAA,IAC/D;AACA,WAAO,OAAO,MAAM,GAAG,EAAE;AAAA,EAC3B;AACA,MAAI,OAAO,UAAU,GAAG;AACtB,UAAM,QAAQ,OAAO,YAAY;AACjC,QAAI,UAAU,QAAQ;AACpB,aAAO;AAAA,IACT;AACA,QAAI,UAAU,SAAS;AACrB,aAAO;AAAA,IACT;AACA,QAAI,UAAU,aAAa;AACzB,aAAO;AAAA,IACT;AACA,QAAI,UAAU,QAAQ;AACpB,aAAO;AAAA,IACT;AACA,QAAI,UAAU,OAAO;AACnB,aAAO,OAAO;AAAA,IAChB;AACA,QAAI,UAAU,YAAY;AACxB,aAAO,OAAO;AAAA,IAChB;AACA,QAAI,UAAU,aAAa;AACzB,aAAO,OAAO;AAAA,IAChB;AAAA,EACF;AACA,MAAI,CAAC,UAAU,KAAK,KAAK,GAAG;AAC1B,QAAI,QAAQ,QAAQ;AAClB,YAAM,IAAI,YAAY,sBAAsB;AAAA,IAC9C;AACA,WAAO;AAAA,EACT;AACA,MAAI;AACF,QAAI,eAAe,KAAK,KAAK,KAAK,qBAAqB,KAAK,KAAK,GAAG;AAClE,UAAI,QAAQ,QAAQ;AAClB,cAAM,IAAI,MAAM,sCAAsC;AAAA,MACxD;AACA,aAAO,KAAK,MAAM,OAAO,kBAAkB;AAAA,IAC7C;AACA,WAAO,KAAK,MAAM,KAAK;AAAA,EACzB,SAAS,OAAO;AACd,QAAI,QAAQ,QAAQ;AAClB,YAAM;AAAA,IACR;AACA,WAAO;AAAA,EACT;AACF;",
  "names": []
}
